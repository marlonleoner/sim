{"version":3,"sources":["assets/images/logo_petcc.svg","assets/images/logo_sbc.png","assets/images/logo_inep.png","styles/colors.js","components/Header/styles.js","components/Header/index.js","pages/Home/styles.js","pages/Home/index.js","services/api.js","pages/Sim/styles.js","pages/Sim/index.js","components/Loading/styles.js","components/Loading/index.js","pages/Exam/styles.js","pages/Exam/index.js","pages/Exams/styles.js","pages/Exams/index.js","pages/Question/styles.js","pages/Question/index.js","pages/Questions/styles.js","pages/Questions/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["module","exports","HeaderContainer","styled","div","HeaderContent","header","LogoPET","img","SingInButton","button","props","theme","primary","darken","Colors","Header","to","src","Logo","Container","ExamContainer","exam","ImagesContainer","TextContainer","Home","alt","LogoINEP","LogoSBC","api","axios","create","baseURL","SimHeader","ButtonEndSim","QuestionContainer","Back","Next","QuestionContent","AlternativeList","form","AlternativeItem","StatementContainer","type","TexContainer","MathJax","Context","attrs","input","script","options","asciimath2jax","useMathMLspacing","delimiters","preview","TexText","Text","Exam","state","selectedOption","loading","questions","currentQuestion","handleOptionChange","e","setState","target","value","handleChangeQuestion","newValue","length","get","response","this","data","question","size","color","onClick","number","year","statement","map","item","text","content","alternatives","alternative","key","letter","checked","onChange","Component","rotate","keyframes","LoadingContainer","css","LoadingContent","AiOutlineLoading","Loading","ExamList","ul","ExamItem","ButtonMoreExams","Link","years","match","params","history","push","occurrences","sort","a","b","id","last_occurrences","slice","reverse","console","log","name","description","LinksContainer","ExamsList","ButtonsContainer","Exams","occurrence","owner","full_name","href","QuestionInfos","QuestionNumber","h3","QuestionID","span","Statement","p","AlternativesList","li","children","AlternativeContent","exam_info","localStorage","getItem","toLowerCase","exam_response","JSON","stringify","setItem","Object","values","parse","dangerouslySetInnerHTML","__html","answer","handleOnChange","disabled","ExamInfoContainer","DownloadContainer","FilesContainer","FileItem","SolveButton","ExamInfo","TextInfo","QuestionsContainer","HeaderQustions","QuestionsNumber","h1","QuestionsList","InfoQuestionContainer","ButtonViewQuestion","ButtonViewQuestionContent","componentDidMount","area","Routes","path","exact","component","Sim","Questions","Question","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ae27eab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_petcc.350d0aae.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_sbc.cd4cd97f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_inep.b41a5487.png\";","export default {\n   primary: '#7159c1',\n   dark: '#191920',\n   poscomp: '#3D856A',\n   poscomp_dark: '#21493a',\n   enade: '#412FD5',\n   enade_dark: '#271b89',\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nimport Colors from '../../styles/colors'\n\nexport const HeaderContainer = styled.div`\n   border-bottom: 1px solid #ccc;\n`\n\nexport const HeaderContent = styled.header`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   margin: auto;\n   max-width: 1065px;\n   height: 82px;\n`\n\nexport const LogoPET = styled.img`\n   width: 120px;\n   height: 80px;\n`\n\nexport const SingInButton = styled.button`\n   width: 110px;\n   height: 45px;\n   border: 1px solid #e1e1e1;\n   border-radius: 20px;\n   background: ${props => props.theme.primary};\n   color: #fff;\n   font-weight: bold;\n   font-size: 18px;\n   font-family: 'Roboto', sans-serif;\n\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${darken(-0.15, Colors.poscomp)};\n   }\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Logo from '../../assets/images/logo_petcc.svg'\nimport { HeaderContainer, HeaderContent, LogoPET, SingInButton } from './styles'\n\nconst Header = () => (\n   <HeaderContainer>\n      <HeaderContent>\n         <Link to=\"/\">\n            <LogoPET src={Logo} />\n         </Link>\n         <SingInButton>Entrar</SingInButton>\n      </HeaderContent>\n   </HeaderContainer>\n)\n\nexport default Header\n","import styled from 'styled-components'\nimport Colors from '../../styles/colors'\n\nexport const Container = styled.div`\n   display: flex;\n   padding: 24px 124px;\n   align-items: center;\n   justify-content: center;\n`\n\nexport const ExamContainer = styled.div`\n   box-shadow: 0 3px 12px 0 rgba(71, 71, 71, 0.2);\n\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n\n   width: 580px;\n   height: 680px;\n\n   margin: ${props =>\n      props.exam === 1 ? '24px 12px 24px 24px' : '24px 24px 24px 12px'};\n   border: 2px solid #e8e8e8;\n   border-radius: 15px;\n   background: #fff;\n   padding: 48px 64px;\n\n   p {\n      font-size: 22px;\n   }\n\n   a {\n      padding: 16px 100px;\n      border: 0;\n      border-radius: 36px;\n      color: #fff;\n      background: ${props =>\n         props.exam === 1 ? Colors.enade : Colors.poscomp};\n\n      font-size: 20px;\n      font-weight: bold;\n      text-align: center;\n      text-transform: uppercase;\n      letter-spacing: 1.75px;\n      font-family: 'Raleway', sans-serif;\n\n      transition: background 0.35s;\n      &:hover {\n         background: #000;\n      }\n   }\n\n   strong {\n      border-bottom: 3px solid\n         ${props => (props.exam === 1 ? Colors.enade : Colors.poscomp)};\n   }\n`\n\nexport const ImagesContainer = styled.div`\n   display: flex;\n   justify-content: space-between;\n\n   img {\n      width: 80px;\n      height: 80px;\n      padding: 0 10px;\n   }\n`\n\nexport const TextContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   strong {\n      width: 270px;\n      font-size: 48px;\n      color: #010101;\n\n      margin-bottom: 30px;\n      padding-bottom: 10px;\n   }\n\n   p {\n      font-size: 18px;\n      font-family: 'Roboto', sans-serif;\n      color: #3f3f3f;\n      text-align: justify;\n   }\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport LogoPET from '../../assets/images/logo_petcc.svg'\nimport LogoSBC from '../../assets/images/logo_sbc.png'\nimport LogoINEP from '../../assets/images/logo_inep.png'\n\nimport {\n   Container,\n   ExamContainer,\n   ImagesContainer,\n   TextContainer,\n} from './styles'\n\nexport default function Home() {\n   return (\n      <Container>\n         <ExamContainer exam={1}>\n            <ImagesContainer>\n               <img src={LogoPET} alt=\"PET/CC Logo\" />\n               <img src={LogoINEP} alt=\"INEP Logo\" />\n            </ImagesContainer>\n            <TextContainer>\n               <strong>ENADE</strong>\n               <p>\n                  O Exame Nacional de Desempenho dos Estudantes (Enade) avalia o\n                  rendimento dos concluintes dos cursos de graduação em relação\n                  aos conteúdos programáticos previstos nas diretrizes\n                  curriculares dos cursos, o desenvolvimento de competências e\n                  habilidades necessárias ao aprofundamento da formação geral e\n                  profissional, e o nível de atualização dos estudantes com\n                  relação à realidade brasileira e mundial.\n               </p>\n            </TextContainer>\n            <Link to=\"/enade\">Mais Detalhes</Link>\n         </ExamContainer>\n         <ExamContainer exam={2}>\n            <ImagesContainer>\n               <img src={LogoPET} alt=\"PET/CC Logo\" />\n               <img src={LogoSBC} alt=\"SBC Logo\" />\n            </ImagesContainer>\n            <TextContainer>\n               <strong>POSCOMP</strong>\n               <p>\n                  O POSCOMP foi concebido para permitir que os candidatos a\n                  cursar Programas de Pós-Graduação em Computação possam\n                  participar dos processos seletivos em vários Programas no\n                  país, sem a necessidade de deslocamento para a sede de cada um\n                  dos Programas postulados pelo candidato, cumprindo assim um\n                  forte papel de inclusão social.\n               </p>\n            </TextContainer>\n            <Link to=\"/poscomp\">Mais Detalhes</Link>\n         </ExamContainer>\n      </Container>\n   )\n}\n","import axios from 'axios'\n\nconst api = axios.create({\n   baseURL: 'https://petcc-sim.firebaseio.com',\n})\n\nexport default api\n","import MathJax from 'react-mathjax2'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   padding: 30px;\n   border-radius: 4px;\n`\n\nexport const SimHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   margin-bottom: 20px;\n\n   h1 {\n      font-family: 'Montserrat', sans-serif;\n      font-size: 22px;\n      text-transform: uppercase;\n      letter-spacing: 1.5px;\n   }\n\n   div {\n      display: flex;\n      align-items: center;\n\n      p {\n         background: #7129c1;\n         color: #fff;\n         border: 0;\n         padding: 10px 15px;\n         border-radius: 4px;\n      }\n   }\n`\n\nexport const ButtonEndSim = styled.button`\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   margin-left: 15px;\n\n   background: #7129c1;\n   border: 0;\n   padding: 10px 15px;\n   border-radius: 4px;\n   color: #fff;\n   font-weight: 600;\n   font-family: 'Montserrat', sans-serif;\n\n   transition: background 0.7s;\n   &:hover {\n      background: ${darken(0.1, '#7129c1')};\n   }\n\n   svg {\n      margin-right: 5px;\n   }\n`\n\nexport const QuestionContainer = styled.div`\n   header {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      padding-bottom: 20px;\n      margin-bottom: 20px;\n      border-bottom: 1px solid #ddd;\n\n      p {\n         font-family: 'Montserrat', sans-serif;\n         font-size: 18px;\n         text-align: center;\n         text-transform: uppercase;\n         color: #33474c;\n         letter-spacing: 1.5px;\n      }\n   }\n`\n\nexport const Back = styled.div`\n   display: flex;\n   align-items: center;\n   color: #33474c;\n\n   &:hover {\n      cursor: pointer;\n   }\n`\n\nexport const Next = styled.div`\n   display: flex;\n   align-items: center;\n   color: #33474c;\n\n   &:hover {\n      cursor: pointer;\n   }\n`\n\nexport const QuestionContent = styled.div`\n   display: flex;\n   flex-direction: column;\n   padding-bottom: 20px;\n   border-bottom: 1px solid #ddd;\n\n   span {\n      font-family: 'Montserrat', sans-serif;\n      font-size: 13px;\n      font-weight: bold;\n      margin-bottom: 15px;\n   }\n\n   p {\n      font-family: 'Montserrat', sans-serif;\n      color: #575757;\n      font-size: 17px;\n   }\n`\n\nexport const AlternativeList = styled.form`\n   display: flex;\n   flex-direction: column;\n`\n\nexport const AlternativeItem = styled.div`\n   border-bottom: 1px solid #eee;\n\n   label {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      padding: 15px 5px;\n\n      &:hover {\n         cursor: pointer;\n      }\n\n      div {\n         margin-left: 10px;\n\n         span {\n            margin: 0;\n         }\n      }\n   }\n\n   strong {\n      margin-left: 10px;\n   }\n\n   span {\n      margin-left: 10px;\n   }\n`\n\nexport const StatementContainer = styled.div`\n   display: flex;\n   font-family: 'Montserrat', sans-serif;\n   color: #575757;\n   font-size: 18px;\n\n   justify-content: ${props => (props.type === 1 ? 'left' : 'center')};\n   font-weight: ${props => (props.type === 1 ? 'normal' : 'bold')};\n   margin-bottom: 10px;\n\n   &:last-child {\n      margin-bottom: 0;\n   }\n`\n\nexport const TexContainer = styled(MathJax.Context).attrs({\n   input: 'ascii',\n   script:\n      'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML',\n   options: {\n      asciimath2jax: {\n         useMathMLspacing: true,\n         delimiters: [['$$', '$$']],\n         preview: 'none',\n      },\n   },\n})``\n\nexport const TexText = styled(MathJax.Text)``\n","import React, { Component } from 'react'\nimport { MdNavigateBefore, MdNavigateNext } from 'react-icons/md'\nimport { FaFileExport } from 'react-icons/fa'\n\nimport api from '../../services/api'\n\nimport {\n   Container,\n   SimHeader,\n   ButtonEndSim,\n   QuestionContainer,\n   Back,\n   Next,\n   QuestionContent,\n   AlternativeList,\n   AlternativeItem,\n   StatementContainer,\n   TexContainer,\n   TexText,\n} from './styles'\n\nexport default class Exam extends Component {\n   state = {\n      selectedOption: '',\n      loading: true,\n      questions: [],\n      currentQuestion: 0,\n   }\n\n   async componentDidMount() {\n      const response = await api.get(`/questions.json`)\n\n      this.setState({\n         questions: response.data,\n         loading: false,\n      })\n   }\n\n   handleOptionChange = e => {\n      this.setState({\n         selectedOption: e.target.value,\n      })\n   }\n\n   handleChangeQuestion = value => {\n      const { currentQuestion, questions } = this.state\n      const newValue = currentQuestion + value\n\n      if (newValue >= 0 && newValue < questions.length) {\n         this.setState({ currentQuestion: newValue })\n      }\n   }\n\n   render() {\n      const { selectedOption, currentQuestion, questions, loading } = this.state\n\n      const question = questions[currentQuestion]\n\n      if (loading) {\n         return <h1>Carregando...</h1>\n      }\n\n      return (\n         <Container>\n            <SimHeader>\n               <h1>Simulado</h1>\n               <div>\n                  <p>XX/{questions.length}</p>\n                  <ButtonEndSim>\n                     <FaFileExport size={16} color=\"#FFF\" />\n                     FINALIZAR SIMULADO\n                  </ButtonEndSim>\n               </div>\n            </SimHeader>\n\n            <QuestionContainer>\n               <header>\n                  <Back onClick={() => this.handleChangeQuestion(-1)}>\n                     <MdNavigateBefore size={24} />\n                     Anterior\n                  </Back>\n                  <p>Questão {question.number}</p>\n                  <Next onClick={() => this.handleChangeQuestion(1)}>\n                     Próxima\n                     <MdNavigateNext size={24} />\n                  </Next>\n               </header>\n               <QuestionContent>\n                  <span>(POSCOMP/{question.year})</span>\n                  {question.statement.map(item =>\n                     item.type === 3 ? (\n                        <p>Imagem</p>\n                     ) : (\n                        <StatementContainer type={item.type}>\n                           <TexContainer>\n                              <TexText text={item.content} />\n                           </TexContainer>\n                        </StatementContainer>\n                     )\n                  )}\n               </QuestionContent>\n               <AlternativeList>\n                  {question.alternatives.map(alternative => (\n                     <AlternativeItem key={alternative.letter}>\n                        <label>\n                           <input\n                              type=\"radio\"\n                              value={alternative.letter}\n                              checked={selectedOption === alternative.letter}\n                              onChange={this.handleOptionChange}\n                           />\n                           <strong>{alternative.letter})</strong>\n                           {/* <span>{alternative.content}</span> */}\n                           <TexContainer>\n                              <TexText text={alternative.content} />\n                           </TexContainer>\n                        </label>\n                     </AlternativeItem>\n                  ))}\n               </AlternativeList>\n            </QuestionContainer>\n         </Container>\n      )\n   }\n}\n","import styled, { keyframes, css } from 'styled-components'\nimport { AiOutlineLoading } from 'react-icons/ai'\n\nconst rotate = keyframes`\n   from {\n      transform: rotate(0deg);\n   }\n\n   to {\n      transform: rotate(360deg);\n   }\n`\n\nexport const LoadingContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   height: calc(100vh - 90px);\n\n   ${css`\n      svg {\n         animation: ${rotate} 2s linear infinite;\n      }\n   `};\n`\n\nexport const LoadingContent = styled(AiOutlineLoading).attrs({\n   size: 72,\n   color: '#000',\n})``\n","import React from 'react'\n\nimport { LoadingContainer, LoadingContent } from './styles'\n\nconst Loading = () => (\n   <LoadingContainer>\n      <LoadingContent />\n   </LoadingContainer>\n)\n\nexport default Loading\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { darken } from 'polished'\nimport Colors from '../../styles/colors'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-between;\n\n   margin: 200px auto 0;\n   max-width: 1065px;\n`\n\nexport const TextContainer = styled.div`\n   width: 565px;\n   display: flex;\n   flex-direction: column;\n\n   h2 {\n      font-size: 100px;\n      font-family: 'Roboto', sans-serif;\n      color: #111;\n   }\n\n   strong {\n      font-size: 70px;\n      font-family: 'Roboto', sans-serif;\n      color: #111;\n\n      border-bottom: 3px solid ${props => props.theme.primary};\n      margin-bottom: 30px;\n      padding-bottom: 45px;\n   }\n\n   p {\n      font-size: 20px;\n      font-family: 'Roboto', sans-serif;\n      color: #888;\n      text-align: justify;\n   }\n`\n\nexport const ExamContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n`\n\nexport const ExamList = styled.ul`\n   list-style: none;\n\n   li {\n      width: 300px;\n      height: 90px;\n\n      border: solid 2px #e8e8e8;\n      border-radius: 7px;\n      margin-bottom: 20px;\n   }\n`\n\nexport const ExamItem = styled.div`\n   width: 100%;\n   height: 100%;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   padding: 18px 36px;\n\n   span {\n      font-size: 42px;\n      text-align: right;\n   }\n\n   a {\n      font-size: 16px;\n      font-family: Arial, Helvetica, sans-serif;\n      font-weight: bold;\n      color: ${props => props.theme.primary};\n\n      &:hover {\n         text-decoration: underline;\n      }\n   }\n`\n\nexport const ButtonMoreExams = styled(Link)`\n   color: ${props => props.theme.primary};\n   font-size: 24px;\n   margin-bottom: 17px;\n\n   &:hover {\n      margin-bottom: 15px;\n      border-bottom: 2px solid ${props => props.theme.primary};\n   }\n`\n\n// export const TexContainer = styled(MathJax.Context).attrs({\n//    input: 'ascii',\n//    script:\n//       'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML',\n//    options: {\n//       asciimath2jax: {\n//          useMathMLspacing: true,\n//          delimiters: [['$$', '$$']],\n//          preview: 'none',\n//       },\n//    },\n// })``\n\n// export const TexText = styled(MathJax.Text)``\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport Colors from '../../styles/colors'\nimport api from '../../services/api'\n\nimport Logo from '../../assets/images/logo_petcc.svg'\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   TextContainer,\n   ExamContainer,\n   ExamList,\n   ExamItem,\n   ButtonMoreExams,\n} from './styles'\n\nexport default class Exam extends Component {\n   state = {\n      loading: true,\n      exam: {},\n      years: ['2019', '2018', '2017'],\n      theme: {\n         primary: '#000',\n      },\n   }\n\n   async componentDidMount() {\n      const { exam } = this.props.match.params\n\n      if (exam !== 'enade' && exam !== 'poscomp') {\n         this.props.history.push('/')\n      }\n\n      const response = await api.get(`/exams/${exam}.json`)\n\n      const occurrences = response.data.occurrences.sort(\n         (a, b) => a.year - b.year\n      )\n\n      this.setState({\n         exam: {\n            ...response.data,\n            id: exam,\n            last_occurrences: occurrences.slice(-3).reverse(),\n         },\n         loading: false,\n         theme: {\n            primary: exam === 'enade' ? Colors.enade : Colors.poscomp,\n         },\n      })\n   }\n\n   render() {\n      const { exam, years, theme, loading } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      console.log(exam)\n\n      return (\n         <ThemeProvider theme={theme}>\n            <Container>\n               <TextContainer>\n                  <h2>{exam.name}</h2>\n                  <strong>Provas Anteriores</strong>\n                  <p>{exam.description}</p>\n               </TextContainer>\n               <ExamContainer>\n                  <ExamList>\n                     {exam.last_occurrences.map(item => (\n                        <li key={item.year}>\n                           <ExamItem>\n                              <span>{item.year}</span>\n                              <Link to={`/${exam.id}/questoes/${item.year}`}>\n                                 Ver prova\n                              </Link>\n                           </ExamItem>\n                        </li>\n                     ))}\n                  </ExamList>\n                  <ButtonMoreExams to={`/${exam.id}/provas`}>\n                     Outras Provas\n                  </ButtonMoreExams>\n               </ExamContainer>\n            </Container>\n         </ThemeProvider>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   margin: 20px auto 0;\n   max-width: 1065px;\n\n   p {\n      font-size: 32px;\n      color: #404040;\n      margin-top: 15px;\n   }\n`\n\nexport const LinksContainer = styled.div`\n   span {\n      margin: 0 10px;\n      color: #404040;\n   }\n\n   a {\n      color: #404040;\n\n      &:hover {\n         text-decoration: underline;\n      }\n   }\n`\n\nexport const ExamsList = styled.ul`\n   list-style: none;\n   margin-top: 20px;\n\n   li {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n\n      flex: 1;\n      padding: 20px 30px;\n\n      &:nth-child(2n - 1) {\n         background: #fff;\n      }\n   }\n`\n\nexport const TextContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   a {\n      padding: 10px 0;\n      font-size: 16px;\n      font-weight: bold;\n      color: #000;\n\n      transition: color 0.25s;\n      &:hover {\n         color: ${props => props.theme.primary};\n      }\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   align-items: center;\n\n   button {\n      border: 0;\n      border-radius: 4px;\n      padding: 8px 20px;\n      margin-right: 20px;\n\n      font-size: 16px;\n      color: #fff;\n      font-weight: 450;\n      background: ${props => props.theme.primary};\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${props => darken(0.2, props.theme.primary)};\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { FaDownload } from 'react-icons/fa'\n\nimport api from '../../services/api'\nimport Colors from '../../styles/colors'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   LinksContainer,\n   ExamsList,\n   ButtonsContainer,\n   TextContainer,\n} from './styles'\n\nexport default class Exams extends Component {\n   state = {\n      loading: true,\n      exam: {},\n      theme: {\n         primary: '#000',\n      },\n   }\n\n   async componentDidMount() {\n      const { exam } = this.props.match.params\n      if (exam !== 'enade' && exam !== 'poscomp') {\n         this.props.history.push('/')\n      }\n\n      const response = await api.get(`/exams/${exam}.json`)\n      const occurrences = response.data.occurrences.reverse()\n\n      this.setState({\n         loading: false,\n         exam: {\n            ...response.data,\n            occurrences,\n            id: exam,\n         },\n         theme: {\n            primary: exam === 'enade' ? Colors.enade : Colors.poscomp,\n         },\n      })\n   }\n\n   render() {\n      const { loading, exam, theme } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <ThemeProvider theme={theme}>\n            <Container>\n               <LinksContainer>\n                  <Link to=\"/\">Home</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}`}>{exam.name}</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/provas`}>Provas</Link>\n               </LinksContainer>\n               <p>Provas</p>\n               <ExamsList>\n                  {exam.occurrences.map(occurrence => (\n                     <li key={occurrence.year}>\n                        <TextContainer>\n                           <span>Prova</span>\n                           <Link to={`/${exam.id}/questoes/${occurrence.year}`}>\n                              {exam.owner} - {occurrence.year} - {exam.name} -{' '}\n                              {exam.full_name}\n                           </Link>\n                        </TextContainer>\n                        <ButtonsContainer>\n                           <button>Resolva</button>\n                           <a href=\"#\">\n                              <FaDownload size={24} color=\"#000\" />\n                           </a>\n                        </ButtonsContainer>\n                     </li>\n                  ))}\n               </ExamsList>\n            </Container>\n         </ThemeProvider>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   @media (min-width: 1020px) {\n      max-width: 1020px;\n   }\n\n   display: flex;\n   flex-direction: column;\n   margin: 20px auto 0;\n   max-width: 95%;\n`\n\nexport const LinksContainer = styled.div`\n   span {\n      margin: 0 10px;\n      color: #404040;\n   }\n\n   a {\n      color: #404040;\n\n      &:hover {\n         text-decoration: underline;\n      }\n   }\n`\n\nexport const QuestionContainer = styled.div`\n   border: 1px solid #e5e5e5;\n   border-radius: 4px;\n   box-shadow: 0px 1px 3px 1px #c9c9c9;\n   background: #fff;\n   margin-top: 30px;\n`\n\nexport const QuestionInfos = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   border-bottom: 1px solid #c9c9c9;\n   padding: 15px;\n   margin-bottom: 15px;\n`\n\nexport const QuestionNumber = styled.h3`\n   text-transform: uppercase;\n   letter-spacing: 1.5px;\n   font-size: 16px;\n`\n\nexport const QuestionID = styled.span`\n   color: #75797d;\n   font-size: 12px;\n`\n\nexport const Statement = styled.p`\n   display: block;\n   font-size: 14px;\n   padding: 0 15px 10px;\n   line-height: 2.25;\n\n   text-align: ${props => (props.type === 1 ? 'start' : 'center')};\n\n   img {\n\n   \t\t@media (min-width: 770px) {\n      \t\twidth: ${props => props.type === 3 ? '45%' : ''};\n\n   \t\t}\n\n      vertical-align: middle;\n      width: ${props => props.type === 3 ? '85%' : ''};\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 15px 15px;\n`\n\nexport const AlternativeItem = styled.li`\n   label {\n      display: flex;\n      align-items: flex-start;\n      margin-bottom: 1px;\n      padding: 12px 5px;\n      border-radius: 4px;\n      background: ${props =>\n         props.children.props.checked === true ? props.theme.primary : 'none'};\n      color: ${props =>\n         props.children.props.checked === true ? '#F4F8FC' : '#000000'};\n\n         input {\n         \t    margin-top: 8px;\n      }\n\n      strong {\n         margin: 0 7px;\n         padding-top: 7px;\n      }\n\n      img {\n      \tvertical-align: middle;\n      }\n\n      span {\n  \t\tline-height: 2.25;\n\n      }\n   }\n`\n\nexport const AlternativeContent = styled.span`\n   display: block;\n\n   img {\n      vertical-align: baseline;\n   }\n`\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport api from '../../services/api'\nimport Colors from '../../styles/colors'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   LinksContainer,\n   QuestionContainer,\n   QuestionInfos,\n   QuestionNumber,\n   QuestionID,\n   Statement,\n   AlternativesList,\n   AlternativeItem,\n   AlternativeContent,\n} from './styles'\n\nexport default class Exam extends Component {\n   state = {\n      loading: true,\n      question: {},\n      exam: {},\n      theme: {\n         primary: '#000',\n      },\n   }\n\n   async componentDidMount() {\n      const { exam, year, question } = this.props.match.params\n\n      var exam_info = localStorage.getItem(`@exams/${exam.toLowerCase()}`)\n      if (!exam_info) {\n         const exam_response = await api.get(\n            `/exams/${exam.toLowerCase()}.json`\n         )\n\n         exam_info = JSON.stringify(exam_response.data)\n\n         localStorage.setItem(`@exams/${exam.toLowerCase()}`, exam_info)\n      }\n\n      const response = await api.get(\n         `/exams/${exam.toLowerCase()}/questions.json?orderBy=%22id%22&equalTo=%22${question}%22`\n      )\n\n      this.setState({\n         loading: false,\n         question: Object.values(response.data)[0],\n         exam: { ...JSON.parse(exam_info), year, id: exam },\n         theme: {\n            primary: exam === 'enade' ? Colors.enade : Colors.poscomp,\n         },\n      })\n   }\n\n   render() {\n      const { loading, question, exam, theme } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <ThemeProvider theme={theme}>\n            <Container>\n               <LinksContainer>\n                  <Link to=\"/\">Home</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}`}>{exam.name}</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/provas`}>Provas</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/questoes/${exam.year}`}>\n                     {exam.year}\n                  </Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/questoes/${exam.year}/`}>\n                     Questão {question.number}\n                  </Link>\n               </LinksContainer>\n               <QuestionContainer>\n                  <QuestionInfos>\n                     <QuestionNumber>Questão {question.number}</QuestionNumber>\n                     <QuestionID>#{question.id}</QuestionID>\n                  </QuestionInfos>\n                  {question.statement.map(statement => (\n                     <Statement\n                        type={statement.type}\n                        dangerouslySetInnerHTML={{\n                           __html: statement.content,\n                        }}\n                     />\n                  ))}\n                  <AlternativesList>\n                     {question.alternatives.map(alternative => (\n                        <AlternativeItem key={alternative.id}>\n                           <label\n                              checked={alternative.letter === question.answer}\n                           >\n                              <input\n                                 type=\"radio\"\n                                 value={alternative.letter}\n                                 checked={\n                                    alternative.letter === question.answer\n                                 }\n                                 onChange={this.handleOnChange}\n                                 disabled\n                              />\n                              <strong>{alternative.letter})</strong>\n                              <AlternativeContent\n                                 dangerouslySetInnerHTML={{\n                                    __html: alternative.content,\n                                 }}\n                              />\n                           </label>\n                        </AlternativeItem>\n                     ))}\n                  </AlternativesList>\n               </QuestionContainer>\n            </Container>\n         </ThemeProvider>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   @media (min-width: 1020px) {\n      max-width: 1020px;\n   }\n\n   display: flex;\n   flex-direction: column;\n   margin: 20px auto 0;\n   max-width: 100%;\n\n   p {\n      font-size: 32px;\n      color: #404040;\n      margin-top: 15px;\n   }\n`\n\nexport const LinksContainer = styled.div`\n   span {\n      margin: 0 10px;\n      color: #404040;\n   }\n\n   a {\n      color: #404040;\n\n      &:hover {\n         text-decoration: underline;\n      }\n   }\n`\n\nexport const ExamInfoContainer = styled.div`\n   @media (min-width: 770px) {\n      flex-direction: row;\n   }\n\n   @media (min-width: 1020px) {\n      width: 100%;\n   }\n\n   width: 95%;\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n   margin: 25px auto;\n`\n\nexport const DownloadContainer = styled.div`\n   @media (min-width: 770px) {\n      width: 40%;\n      margin: 0 10px 0 0;\n   }\n\n   @media (min-width: 1020px) {\n      width: 33.33333%;\n   }\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   padding: 20px;\n   box-shadow: 0px 1px 3px 1px #c9c9c9;\n   border-radius: 4px;\n   background: #fff;\n   width: 95%;\n   margin: 10px auto;\n\n   span {\n      font-size: 16px;\n      font-family: Arial, Helvetica, sans-serif;\n      font-weight: bold;\n   }\n`\n\nexport const FilesContainer = styled.div`\n   width: 100%;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-around;\n\n   margin-top: 15px;\n   padding-bottom: 15px;\n   border-bottom: 1px solid #dce1e6;\n`\n\nexport const FileItem = styled(Link)`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n\n   padding: 10px;\n   color: #000;\n\n   transition: color 0.35s;\n   &:hover {\n      color: ${props => props.theme.primary};\n\n      svg {\n         transition: fill 0.35s;\n         fill: ${props => props.theme.primary};\n      }\n   }\n\n   svg {\n      margin-bottom: 10px;\n   }\n\n   span {\n      font-size: 12px;\n      font-weight: normal;\n   }\n`\n\nexport const SolveButton = styled.button`\n   min-width: 25%;\n   padding: 10px 30px;\n   margin-top: 20px;\n   border: 1px solid ${props => props.theme.primary};\n   border-radius: 5px;\n   background: none;\n   color: ${props => props.theme.primary};\n   font-weight: bold;\n\n   transition: background 0.35s, color 0.35s;\n   &:hover {\n      background: ${props => props.theme.primary};\n      color: #fff;\n   }\n`\n\nexport const ExamInfo = styled.div`\n   @media (min-width: 770px) {\n      width: 60%;\n      margin: 0 0 0 10px;\n   }\n\n   @media (min-width: 1020px) {\n      width: 66.66667%;\n   }\n\n   width: 95%;\n   margin: 10px auto;\n   border: 1px solid #e5e5e5;\n   box-shadow: 0px 1px 3px 1px #c9c9c9;\n   border-radius: 4px;\n   background: #fff;\n\n   display: flex;\n   flex-direction: column;\n`\n\nexport const TextInfo = styled.div`\n   height: 33.33333%;\n   padding: 20px 20px;\n   border-bottom: 1px solid #e5e5e5;\n\n   display: flex;\n   align-items: center;\n\n   &:last-child {\n      border-bottom: none;\n   }\n\n   strong {\n      flex: 1 1;\n   }\n\n   span {\n      flex: 3 1;\n      padding: 10px;\n   }\n`\n\nexport const QuestionsContainer = styled.div`\n   @media (min-width: 1020px) {\n      width: 100%;\n   }\n\n   width: 95%;\n   margin: auto;\n   border: 1px solid #e5e5e5;\n   border-radius: 4px;\n   box-shadow: 0px 1px 3px 1px #c9c9c9;\n   background: #fff;\n`\n\nexport const HeaderQustions = styled.div`\n   padding: 20px 25px;\n   border-bottom: 1px solid #dce1e6;\n   width: 100%;\n`\n\nexport const QuestionsNumber = styled.h1`\n   font-size: 18px;\n   font-weight: normal;\n`\n\nexport const QuestionsList = styled.ul`\n   list-style: none;\n   padding: 20px 10px 0 10px;\n   display: flex;\n   flex-wrap: wrap;\n   width: 100%;\n\n   li {\n      @media (min-width: 770px) {\n         width: calc(33.33333% - 24px);\n      }\n\n      @media (min-width: 1020px) {\n         width: calc(25% - 24px);\n      }\n\n      border: 1px solid #dce1e6;\n      border-radius: 4px;\n      margin: 0 12px 15px;\n      padding: 10px;\n      width: calc(50% - 24px);\n   }\n`\n\nexport const InfoQuestionContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: flex-start;\n   margin-top: 18px;\n\n   div {\n      display: flex;\n      align-items: center;\n      margin: 10px 0 0 0;\n      color: #656d78;\n\n      p {\n         font-size: 13px;\n         margin: 0 5px;\n      }\n   }\n`\n\nexport const ButtonViewQuestion = styled.div`\n   display: flex;\n   margin-top: 10px;\n   border: none;\n   border-radius: 4px;\n   background: ${props => props.theme.primary};\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${props => darken(0.1, props.theme.primary)};\n   }\n`\n\nexport const ButtonViewQuestionContent = styled(Link)`\n   flex: 1;\n   color: #fff;\n   text-align: center;\n   padding: 7px;\n`\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport api from '../../services/api'\nimport Colors from '../../styles/colors'\n\nimport { MdFormatListBulleted, MdFormatListNumbered } from 'react-icons/md'\nimport { FaRegFileAlt, FaPencilAlt, FaQuestion } from 'react-icons/fa'\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   LinksContainer,\n   ExamInfoContainer,\n   DownloadContainer,\n   FilesContainer,\n   FileItem,\n   SolveButton,\n   ExamInfo,\n   TextInfo,\n   QuestionsContainer,\n   HeaderQustions,\n   QuestionsNumber,\n   QuestionsList,\n   InfoQuestionContainer,\n   ButtonViewQuestion,\n   ButtonViewQuestionContent,\n} from './styles'\n\nexport default class Exam extends Component {\n   state = {\n      loading: true,\n      exam: {},\n      questions: [],\n      theme: {\n         primary: '#000',\n      },\n   }\n\n   componentDidMount = async () => {\n      const { exam, year } = this.props.match.params\n\n      const { data } = await api.get(`/exams/${exam}.json`)\n\n      this.setState({\n         loading: false,\n         questions: Object.values(data.questions),\n         exam: {\n            ...data,\n            id: exam,\n            year,\n         },\n         theme: {\n            primary: exam === 'enade' ? Colors.enade : Colors.poscomp,\n         },\n      })\n   }\n\n   render() {\n      const { theme, loading, exam, questions } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <ThemeProvider theme={theme}>\n            <Container>\n               <LinksContainer>\n                  <Link to=\"/\">Home</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}`}>{exam.name}</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/provas`}>Provas</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/questoes/${exam.year}`}>\n                     {exam.year}\n                  </Link>\n               </LinksContainer>\n               <ExamInfoContainer>\n                  <DownloadContainer>\n                     <span>BAIXE OS ARQUIVOS</span>\n                     <FilesContainer>\n                        <FileItem to=\"#\">\n                           <MdFormatListBulleted size={24} color=\"#000\" />\n                           <span>PROVA</span>\n                        </FileItem>\n                        <FileItem to=\"#\">\n                           <MdFormatListNumbered size={24} color=\"#000\" />\n                           <span>GABARITO</span>\n                        </FileItem>\n                        <FileItem to=\"#\">\n                           <FaRegFileAlt size={24} color=\"#000\" />\n                           <span>EDITAL</span>\n                        </FileItem>\n                     </FilesContainer>\n                     <SolveButton>Resolver Prova</SolveButton>\n                  </DownloadContainer>\n                  <ExamInfo>\n                     <TextInfo>\n                        <strong>Concurso</strong>\n                        <span>\n                           {exam.name} - {exam.year}\n                        </span>\n                     </TextInfo>\n                     <TextInfo>\n                        <strong>Prova</strong>\n                        <span>{exam.full_name}</span>\n                     </TextInfo>\n                     <TextInfo>\n                        <strong>Organizador</strong>\n                        <span>{exam.owner}</span>\n                     </TextInfo>\n                  </ExamInfo>\n               </ExamInfoContainer>\n               <QuestionsContainer>\n                  <HeaderQustions>\n                     <QuestionsNumber>\n                        {questions.length === 0\n                           ? 'Nenhuma questão cadastrada'\n                           : `${questions.length} Questões do ${exam.name}`}\n                     </QuestionsNumber>\n                  </HeaderQustions>\n                  {!!questions.length && (\n                     <QuestionsList>\n                        {questions.map(question => (\n                           <li key={question.id}>\n                              <h3>Questão {question.number}</h3>\n                              <InfoQuestionContainer>\n                                 <div>\n                                    <FaPencilAlt size={12} />\n                                    <p>{question.area}</p>\n                                 </div>\n                                 <div>\n                                    {' '}\n                                    <FaQuestion size={12} />\n                                    <p>Resolvida 100x</p>\n                                 </div>\n                              </InfoQuestionContainer>\n                              <ButtonViewQuestion>\n                                 <ButtonViewQuestionContent\n                                    to={`/${exam.id}/questoes/${question.year}/${question.id}`}\n                                 >\n                                    Ver Questão\n                                 </ButtonViewQuestionContent>\n                              </ButtonViewQuestion>\n                           </li>\n                        ))}\n                     </QuestionsList>\n                  )}\n               </QuestionsContainer>\n            </Container>\n         </ThemeProvider>\n      )\n   }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Sim from './pages/Sim'\nimport Exam from './pages/Exam'\nimport Exams from './pages/Exams'\nimport Question from './pages/Question'\nimport Questions from './pages/Questions'\n\nexport default function Routes() {\n   return (\n      <Switch>\n         <Route path=\"/\" exact component={Home} />\n         <Route path=\"/sim\" component={Sim} />\n         <Route path=\"/:exam/questoes/:year\" exact component={Questions} />\n         <Route\n            path=\"/:exam/questoes/:year/:question\"\n            exact\n            component={Question}\n         />\n         <Route path=\"/:exam/provas\" exact component={Exams} />\n         <Route path=\"/:exam\" exact component={Exam} />\n      </Switch>\n   )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n   @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n   @import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n\n   * {\n      margin: 0;\n      padding: 0;\n      outline: 0;\n      box-sizing: border-box;\n   }\n\n   body {\n      background: #f5f5f5;\n      -webkit-font-smoothing: antialiased !important;\n   }\n\n   body, input, button {\n      font: 14px Roboto, sans-serif;\n   }\n\n   #root {\n      margin: 0 auto;\n      padding: 0;\n   }\n\n   button {\n      cursor: pointer;\n   }\n`\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Routes from './routes'\nimport GlobalCSS from './styles/global'\n\nfunction App() {\n   return (\n      <>\n         <BrowserRouter>\n            <Header />\n            <GlobalCSS />\n            <Routes />\n         </BrowserRouter>\n      </>\n   )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}