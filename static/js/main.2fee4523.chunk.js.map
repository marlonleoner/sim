{"version":3,"sources":["services/history.js","components/Header/styles.js","components/Header/index.js","services/api.js","components/Loading/styles.js","components/Loading/index.js","pages/Home/styles.js","pages/Home/index.js","pages/Admin/modal_styles.js","pages/Admin/modal.js","pages/Admin/styles.js","pages/Admin/index.js","pages/Question/styles.js","pages/Question/index.js","pages/Pratice/styles.js","pages/Pratice/index.js","pages/SearchPratice/styles.js","pages/SearchPratice/index.js","pages/PraticeResult/styles.js","pages/PraticeResult/index.js","pages/PDF/styles.js","pages/PDF/index.js","routes.js","styles/global.js","App.js","index.js","assets/images/logo_petcc.svg"],"names":["history","createHashHistory","HeaderContainer","styled","div","Links","Link","LinksContainer","LogoPET","img","LinkItem","darken","Header","to","src","Logo","api","axios","create","baseURL","rotate","keyframes","LoadingContainer","css","LoadingContent","AiOutlineLoading","attrs","size","color","Loading","Container","Title","FormContainer","TextHeader","Form","form","ButtonsContainer","SubmitButton","button","props","type","disabled","loading","ClearButton","QuestionsContainer","QuestionsContent","QuestionsList","ul","QuestionHeader","QuestionStatement","AlternativesList","AnswerContainer","AnswerContent","AnswerCorrect","AnswerIncorrect","OptionsContainer","Home","state","exam_selected","exams","value","label","areas_selected","exam_areas","poscomp_areas","enade_areas","questions","handleChangeExam","event","setState","handleAddArea","option","handleSubmitButton","a","preventDefault","Object","keys","length","toast","error","url","get","response","data","handleClearForm","handleVerifyAnwser","question","user_answer","document","title","this","isSearchable","isClearable","options","onChange","onClick","map","index","key","id","year","number","dangerouslySetInnerHTML","__html","statement","alternatives","alternative","letter","content","answer","Component","QuestionContent","QuestionsInfoContainer","ModalQuestion","exam","area","QuestionModal","Modal","AddQuestionButton","AdminContainer","LabelContainer","NumberInput","input","min","max","InputStatementList","InputStatementItem","StatementInput","textarea","AlternativeInput","exam_options","year_options","answer_options","areas_options","type_options","setAppElement","Admin","show_modal","exam_input","question_input","year_input","answer_input","area_input","statement_input","alternatives_input","handleChangeExamInput","handleChangeQuestionNumber","target","handleChangeYearInput","handleChangeAnswerInput","handleChangeAreaInput","handleAddStatement","handleTypeInputChange","findIndex","s","handleContentInputChange","handleAlternativesInputChange","isStatementEmpty","filter","isAlternativesEmpty","handleAddQuestion","post","justification","console","log","success","handleOpenModal","statement_string","aux","handleCloseModal","isOpen","contentLabel","defaultValue","Question","match","params","PraticeContainer","AnswerList","OptionButtonsContainer","EndPraticeButton","DownloadPDFButton","ControlsContainer","Control","AnswerButton","selected","Pratice","id_current_question","handleEndPratice","localStorage","setItem","JSON","stringify","results","q","pratice_number","push","pathname","handleDownloadPDF","handleChangeQuestion","new_question","handleChangeToQuestion","handleSelectAnswer","Number","slice","reverse","current_question","AreasContainer","cod_pratice","forEach","is_selected","amount","handleSelectArea","handleChangeAreaAmount","verifySelectedAreas","areas","selected_areas","handleSubmitForm","areas_aux","handleChangeCodPratice","handleSearchPratice","checked","ResultContainer","ResultHeader","ResultList","StatisticsContainer","PraticeResult","statistics","handleNewPratice","handleRepeatPratice","getItem","parse","questions_results","total_questions","total_corrects","res","percent","toFixed","corrects","wrongs","total","PageContainer","ButtonReturn","DownloadButton","QuestionContainer","li","StatementContainer","StatementContent","PDF2","downloading","element","getElementById","opt","margin","filename","Date","now","image","quality","html2canvas","scale","jsPDF","orientation","unit","format","pagebreak","avoid","html2pdf","set","from","save","handleBackPage","pdf_statement","HTMLDiv","createElement","innerHTML","childNodes","DIVNode","StatementList","i","StatementNode","localName","parentElement","outerHTML","nodeName","sort","b","pdf_alternatives","AlternativeNode","list","String","toUpperCase","aux_statement","style","width","item","Routes","path","exact","component","PDF","SearchPratice","createGlobalStyle","App","autoClose","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.2fee4523.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\n\nconst history = createHashHistory()\n\nexport default history\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { darken } from 'polished'\n\nexport const HeaderContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   background: #ffffff;\n   border-bottom: 1px solid #ccc;\n   height: 64px;\n   padding: 0 30px;\n\n   @media (max-width: 1366px) {\n      padding: 0 12px;\n   }\n`\n\nexport const Links = styled(Link)``\n\nexport const LinksContainer = styled.div`\n   display: flex;\n   align-items: center;\n   height: 100%;\n`\n\nexport const LogoPET = styled.img`\n   height: 48px;\n`\n\nexport const SingInButton = styled(Link)`\n   color: #fff;\n   font-size: 16px;\n   border: 1px solid #e1e1e1;\n   border-radius: 4px;\n   background: #010305;\n   padding: 7px 25px;\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${darken(-0.15, '#010305')};\n   }\n`\n\nexport const LinkItem = styled.div`\n   display: flex;\n   height: 100%;\n\n   & + div {\n      margin-left: 15px;\n   }\n\n   &:hover {\n      background: ${() => darken(0.1, '#ffffff')};\n   }\n\n   > a {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: #000000;\n\n      > span {\n         margin-left: 7px;\n      }\n   }\n`\n","import React from 'react'\nimport { FaSearch, FaRegFileAlt } from 'react-icons/fa'\n\nimport Logo from '../../assets/images/logo_petcc.svg'\nimport {\n   HeaderContainer,\n   Links,\n   LinksContainer,\n   LogoPET,\n   LinkItem,\n} from './styles'\n\nconst Header = () => (\n   <HeaderContainer>\n      <Links to=\"/\">\n         <LogoPET src={Logo} />\n      </Links>\n      <LinksContainer>\n         <LinkItem>\n            <Links to=\"/\">\n               <FaSearch />\n               <span>Buscar</span>\n            </Links>\n         </LinkItem>\n         <LinkItem>\n            <Links to=\"/simulados\">\n               <FaRegFileAlt />\n               <span>Simulados</span>\n            </Links>\n         </LinkItem>\n      </LinksContainer>\n   </HeaderContainer>\n)\n\nexport default Header\n","import axios from 'axios'\n\nconst api = axios.create({\n   // baseURL: 'http://localhost:3333',\n   baseURL: 'https://exams-questions.herokuapp.com',\n})\n\nexport default api\n","import styled, { keyframes, css } from 'styled-components'\nimport { AiOutlineLoading } from 'react-icons/ai'\n\nconst rotate = keyframes`\n   from {\n      transform: rotate(0deg);\n   }\n\n   to {\n      transform: rotate(360deg);\n   }\n`\n\nexport const LoadingContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin: 50px 0;\n\n   ${css`\n      svg {\n         animation: ${rotate} 2s linear infinite;\n      }\n   `};\n`\n\nexport const LoadingContent = styled(AiOutlineLoading).attrs({\n   size: 72,\n   color: '#000',\n})``\n","import React from 'react'\n\nimport { LoadingContainer, LoadingContent } from './styles'\n\nconst Loading = () => (\n   <LoadingContainer>\n      <LoadingContent />\n   </LoadingContainer>\n)\n\nexport default Loading\n","import styled, { keyframes, css } from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const FormContainer = styled.div``\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const Form = styled.form`\n   padding: 0 15px 15px;\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n\n   p {\n      margin-top: 15px;\n      margin-bottom: 7px;\n   }\n`\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   flex-direction: row;\n   margin-top: 15px;\n\n   @media (max-width: 768px) {\n      justify-content: space-between;\n   }\n`\n\nconst rotate = keyframes`\n   from {\n      transform: rotate(0deg);\n   }\n\n   to {\n      transform: rotate(360deg);\n   }\n`\n\nexport const SubmitButton = styled.button.attrs(props => ({\n   type: 'submit',\n   disabled: props.loading,\n}))`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   padding: 10px 25px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#254979')};\n   }\n\n   @media (max-width: 768px) {\n      flex: 1;\n   }\n\n   ${props =>\n      props.loading &&\n      css`\n         svg {\n            animation: ${rotate} 2s linear infinite;\n         }\n      `}\n`\n\nexport const ClearButton = styled.button`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin-left: 10px;\n   padding: 10px 25px;\n   background: #ffffff;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#ffffff')};\n   }\n\n   @media (max-width: 768px) {\n      flex: 1;\n   }\n`\n\nexport const QuestionsContainer = styled.div`\n   margin: 25px 0;\n`\n\nexport const QuestionsContent = styled.div`\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n`\n\nexport const QuestionsList = styled.ul`\n   list-style: none;\n   padding-bottom: 15px;\n   margin-bottom: 15px;\n\n   margin-block-start: 0;\n   margin-block-end: 0;\n   margin-inline-start: 0;\n   margin-inline-end: 0;\n   padding-inline-start: 0;\n\n   li {\n      & + li {\n         margin-top: 15px;\n      }\n\n      > p {\n         margin: 30px 15px 0;\n      }\n   }\n`\n\nexport const QuestionHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   border-top: 1px solid #c9c9c9;\n   border-bottom: 1px solid #c9c9c9;\n   padding: 15px;\n   margin-bottom: 15px;\n\n   strong {\n      font-size: 16px;\n\n      span {\n         color: #254979;\n         margin-right: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      color: #75797d;\n      font-size: 12px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n\n   code {\n      font-family: Courier New, monospace;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 15px;\n\n   li {\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const AnswerContainer = styled.div`\n   margin: 20px 15px 15px;\n\n   p {\n      margin-bottom: 5px;\n   }\n`\n\nexport const AnswerContent = styled.div`\n   display: flex;\n   justify-content: space-around;\n   padding: 10px;\n   border: 1px solid #c9c9c9;\n   border-radius: 4px;\n\n   @media (max-width: 1090px) {\n      justify-content: space-between;\n   }\n\n   @media (max-width: 768px) {\n   }\n\n   button {\n      background: #254979;\n      color: #ffffff;\n      border: 0;\n      border-radius: 50%;\n      padding: 14px 18px;\n      font-weight: bold;\n      font-size: 16px;\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#254979')};\n      }\n   }\n`\n\nexport const AnswerCorrect = styled.div`\n   font-size: 16px;\n   font-weight: bold;\n   height: 74px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin: 20px 10px 15px;\n   border: 1px solid ${() => darken(0.15, '#cef0ab')};\n   border-radius: 4px;\n   background: #cef0ab;\n\n   span {\n      margin-left: 10px;\n   }\n`\n\nexport const AnswerIncorrect = styled.div`\n   font-size: 16px;\n   font-weight: bold;\n   height: 74px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin: 25px 15px 10px;\n   border: 1px solid ${() => darken(0.15, '#fdaa9a')};\n   border-radius: 4px;\n   background: #fdaa9a;\n\n   span {\n      margin-left: 10px;\n   }\n`\n\nexport const OptionsContainer = styled.div`\n   display: flex;\n   justify-content: space-around;\n   margin-top: 20px;\n   margin-bottom: 50px;\n\n   @media (max-width: 768px) {\n      flex-direction: column;\n      align-items: center;\n   }\n\n   a {\n      display: flex;\n      justify-content: center;\n      color: #ffffff;\n      background: #3d856a;\n      width: 250px;\n      padding: 10px;\n      border-radius: 4px;\n\n      & + a {\n         @media (max-width: 768px) {\n            margin-top: 7px;\n         }\n      }\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#3d856a')};\n      }\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaSearch,\n   FaFilter,\n   FaTrashAlt,\n   FaHighlighter,\n   FaPencilAlt,\n   FaPencilRuler,\n   FaRegComment,\n   FaSpinner,\n} from 'react-icons/fa'\nimport Select from 'react-select'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport api from '../../services/api'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   Title,\n   FormContainer,\n   TextHeader,\n   Form,\n   ButtonsContainer,\n   SubmitButton,\n   ClearButton,\n   QuestionsContainer,\n   QuestionsContent,\n   QuestionsList,\n   QuestionHeader,\n   QuestionStatement,\n   AlternativesList,\n   AnswerContainer,\n   AnswerContent,\n   AnswerCorrect,\n   AnswerIncorrect,\n   OptionsContainer,\n} from './styles'\n\nexport default class Home extends Component {\n   state = {\n      loading: false,\n      exam_selected: {},\n      exams: [\n         { value: 'poscomp', label: 'POSCOMP' },\n         { value: 'enade', label: 'ENADE' },\n      ],\n      areas_selected: null,\n      exam_areas: [],\n      poscomp_areas: [\n         { value: '1', label: 'Matemática' },\n         { value: '2', label: 'Fundamentos de Computação' },\n         { value: '3', label: 'Tecnologia da Computação' },\n      ],\n      enade_areas: [],\n      questions: null,\n   }\n\n   componentDidMount() {\n      document.title = 'Buscar Exercícios'\n   }\n\n   handleChangeExam = event => {\n      const { exam_selected, poscomp_areas, enade_areas } = this.state\n\n      if (exam_selected !== event) {\n         this.setState({\n            exam_selected: event,\n            areas_selected: null,\n            exam_areas: event.value === 'poscomp' ? poscomp_areas : enade_areas,\n         })\n      }\n   }\n\n   handleAddArea = option => {\n      this.setState({\n         areas_selected: option,\n      })\n   }\n\n   handleSubmitButton = async event => {\n      event.preventDefault()\n\n      const { exam_selected, areas_selected } = this.state\n      if (Object.keys(exam_selected).length === 0) {\n         toast.error('Selecione um concurso')\n         return\n      }\n\n      this.setState({ loading: true, questions: [] })\n\n      const url = areas_selected === null ? '' : `&area=${areas_selected.value}`\n\n      const response = await api.get(\n         `/questions?exam=${exam_selected.value}` + url\n      )\n\n      this.setState({ questions: response.data, loading: false })\n   }\n\n   handleClearForm = event => {\n      event.preventDefault()\n\n      this.setState({\n         exam_selected: {},\n         areas_selected: [],\n      })\n   }\n\n   handleVerifyAnwser = (question, user_answer) => {\n      const { questions } = this.state\n\n      questions[question].user_answer = user_answer\n\n      this.setState({ questions })\n   }\n\n   render() {\n      const {\n         loading,\n         exam_selected,\n         exams,\n         areas_selected,\n         exam_areas,\n         questions,\n      } = this.state\n\n      return (\n         <Container>\n            <Title>\n               <FaSearch size={24} />\n               <span>Buscar Exercícios</span>\n            </Title>\n            <FormContainer>\n               <TextHeader>\n                  <FaFilter size={18} />\n                  <span>Filtros</span>\n               </TextHeader>\n               <Form>\n                  <p>Concurso</p>\n                  <Select\n                     isSearchable={false}\n                     isClearable\n                     value={exam_selected}\n                     options={exams}\n                     onChange={this.handleChangeExam}\n                  />\n                  <p>Área</p>\n                  <Select\n                     isSearchable={false}\n                     isClearable\n                     value={areas_selected}\n                     options={exam_areas}\n                     onChange={this.handleAddArea}\n                  />\n                  <ButtonsContainer>\n                     <SubmitButton\n                        loading={loading ? 1 : 0}\n                        onClick={this.handleSubmitButton}\n                     >\n                        {loading ? (\n                           <FaSpinner size={16} />\n                        ) : (\n                           <FaSearch size={16} />\n                        )}\n                        <span>Buscar</span>\n                     </SubmitButton>\n                     <ClearButton onClick={this.handleClearForm}>\n                        <FaTrashAlt size={16} />\n                        <span>Limpar</span>\n                     </ClearButton>\n                  </ButtonsContainer>\n               </Form>\n            </FormContainer>\n            {questions && (\n               <QuestionsContainer>\n                  <TextHeader>\n                     {loading ? (\n                        <FaSpinner size={18} />\n                     ) : (\n                        <FaHighlighter size={18} />\n                     )}\n                     {!!questions.length && (\n                        <span>{questions.length} questões encontradas</span>\n                     )}\n                  </TextHeader>\n                  <QuestionsContent>\n                     {loading ? (\n                        <Loading />\n                     ) : (\n                        <QuestionsList>\n                           {questions.map((question, index) => (\n                              <li key={question.id}>\n                                 <QuestionHeader>\n                                    <strong>\n                                       <span>{index + 1}</span>\n                                       (POSCOMP/{question.year} - Questão{' '}\n                                       {question.number})\n                                    </strong>\n                                    <span>#{question.id}</span>\n                                 </QuestionHeader>\n                                 <QuestionStatement\n                                    dangerouslySetInnerHTML={{\n                                       __html: question.statement,\n                                    }}\n                                 />\n                                 <AlternativesList>\n                                    {question.alternatives.map(alternative => (\n                                       <li key={alternative.letter}>\n                                          <strong>{alternative.letter})</strong>\n                                          <span\n                                             dangerouslySetInnerHTML={{\n                                                __html: alternative.content,\n                                             }}\n                                          />\n                                       </li>\n                                    ))}\n                                 </AlternativesList>\n                                 {typeof question.user_answer ===\n                                 'undefined' ? (\n                                    <AnswerContainer>\n                                       <p>Escolha sua resposta</p>\n                                       <AnswerContent>\n                                          {question.alternatives.map(\n                                             alternative => (\n                                                <button\n                                                   key={alternative.letter}\n                                                   onClick={() =>\n                                                      this.handleVerifyAnwser(\n                                                         index,\n                                                         alternative.letter\n                                                      )\n                                                   }\n                                                >\n                                                   {alternative.letter}\n                                                </button>\n                                             )\n                                          )}\n                                       </AnswerContent>\n                                    </AnswerContainer>\n                                 ) : question.user_answer ===\n                                   question.answer ? (\n                                    <AnswerCorrect>\n                                       <FaPencilAlt />\n                                       <span>\n                                          Você acertou essa questão! Sua\n                                          Resposta: {question.user_answer}\n                                       </span>\n                                    </AnswerCorrect>\n                                 ) : (\n                                    <AnswerIncorrect>\n                                       <FaPencilRuler />\n                                       <span>\n                                          Você errou! Resposta Correta:{' '}\n                                          {question.answer}. Sua Resposta:{' '}\n                                          {question.user_answer}\n                                       </span>\n                                    </AnswerIncorrect>\n                                 )}\n                                 <OptionsContainer>\n                                    <Link to={``}>\n                                       <FaSearch />\n                                       <span>Questões Similares</span>\n                                    </Link>\n                                    <Link to={`/questao/${question.id}`}>\n                                       <FaRegComment />\n                                       <span>Detalhes da Questão</span>\n                                    </Link>\n                                 </OptionsContainer>\n                              </li>\n                           ))}\n                        </QuestionsList>\n                     )}\n                  </QuestionsContent>\n               </QuestionsContainer>\n            )}\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   min-width: 1065px;\n\n   @media (max-width: 1090px) {\n      min-width: 100%;\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const QuestionsContainer = styled.div``\n\nexport const QuestionContent = styled.div`\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   margin-bottom: 15px;\n   padding-bottom: 15px;\n   padding-top: 7px;\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n\n   code {\n      line-height: normal;\n      margin: -10px 0;\n      font-family: monospace;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 0 20px;\n   margin: 0 15px 20px;\n\n   border-bottom: 1px solid #e0e1e2;\n\n   li {\n      display: flex;\n      align-items: center;\n      margin-top: 10px;\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const QuestionsInfoContainer = styled.div`\n   padding: 0 15px;\n\n   > div {\n      & + div {\n         margin-top: 15px;\n      }\n\n      span {\n         font-size: 18px;\n      }\n\n      p {\n         font-size: 16px;\n         margin-top: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport { FaPen, FaHighlighter } from 'react-icons/fa'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   Title,\n   QuestionsContainer,\n   QuestionContent,\n   TextHeader,\n   QuestionStatement,\n   AlternativesList,\n   QuestionsInfoContainer,\n} from './modal_styles'\n\nexport default class ModalQuestion extends Component {\n   state = {\n      loading: true,\n      question: {},\n   }\n\n   componentDidMount() {\n      this.setState({ question: this.props.question, loading: false })\n   }\n\n   render() {\n      const { loading, question } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <Container>\n            <Title>\n               <FaPen size={24} />\n               <span>Detalhes da Questão</span>\n            </Title>\n            <QuestionsContainer>\n               <TextHeader>\n                  <FaHighlighter size={18} />\n                  <span>\n                     ({question.exam}/{question.year}) / Questão{' '}\n                     {question.number}\n                  </span>\n               </TextHeader>\n               <QuestionContent>\n                  <QuestionStatement\n                     dangerouslySetInnerHTML={{\n                        __html: question.statement,\n                     }}\n                  />\n                  <AlternativesList>\n                     {question.alternatives.map(alternative => (\n                        <li key={alternative.letter}>\n                           <strong>{alternative.letter})</strong>\n                           <span\n                              dangerouslySetInnerHTML={{\n                                 __html: alternative.content,\n                              }}\n                           />\n                        </li>\n                     ))}\n                  </AlternativesList>\n                  <QuestionsInfoContainer>\n                     <div>\n                        <span>Gabarito da questão</span>\n                        <p>Opção {question.answer}</p>\n                     </div>\n                     <div>\n                        <span>Área da questão</span>\n                        <p>{question.area}</p>\n                     </div>\n                  </QuestionsInfoContainer>\n               </QuestionContent>\n            </QuestionsContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\nimport Modal from 'react-modal'\n\nexport const QuestionModal = styled(Modal)`\n   width: 100%;\n   padding: 50px 0;\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n\n   > strong {\n      font-size: 32px;\n      margin-bottom: 15px;\n   }\n\n   > button {\n      margin: 0 120px 0 auto;\n      border: 0;\n\n      @media (max-width: 1090px) {\n         margin: 0 80px 0 auto;\n      }\n   }\n`\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   background: #254979;\n   color: #ffffff;\n   padding: 12px 15px;\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   div {\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      font-size: 16px;\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   flex-direction: row-reverse;\n`\n\nexport const AddQuestionButton = styled.button`\n   margin-left: 15px;\n   display: flex;\n   padding: 7px 20px;\n   background: #254979;\n   color: #ffffff;\n   border: 1px solid #c4c4c4;\n   border-radius: 4px;\n\n   transition: background 0.25s;\n   &:hover {\n      cursor: pointer;\n      background: ${() => darken(0.1, '#254979')};\n   }\n\n   svg {\n      margin-right: 7px;\n   }\n`\n\nexport const AdminContainer = styled.div`\n   background: #ffffff;\n   border: 1px solid #254979;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   display: flex;\n   flex-direction: column;\n   margin-bottom: 25px;\n\n   > div {\n      display: flex;\n      padding: 0 10px;\n   }\n\n   > header {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      border-top: 1px solid #cccccc;\n      border-bottom: 1px solid #cccccc;\n      padding: 10px 15px;\n\n      div + & {\n         margin-top: 10px;\n      }\n\n      > button {\n         display: flex;\n         padding: 5px 20px;\n         background: #ffffff;\n         border: 1px solid #254979;\n         border-radius: 4px;\n\n         transition: background 0.35s, color 0.35s;\n         &:hover {\n            cursor: pointer;\n            background: #254979;\n            color: #ffffff;\n         }\n\n         svg {\n            margin-right: 7px;\n         }\n      }\n   }\n`\n\nexport const LabelContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n   flex: 1;\n   margin: 5px;\n`\n\nexport const NumberInput = styled.input.attrs({\n   type: 'number',\n   min: 1,\n   max: 70,\n})`\n   height: 36px;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   padding: 0 15px;\n`\n\nexport const InputStatementList = styled.div`\n   flex: 1;\n   display: flex;\n   margin-top: 10px;\n   flex-direction: column;\n`\n\nexport const InputStatementItem = styled.div`\n   flex: 1;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: space-between;\n   padding: 0 5px 10px;\n   border-bottom: 1px solid #444444;\n\n   & + div {\n      margin-top: 10px;\n   }\n\n   &:last-child {\n      border-bottom: 0;\n      padding: 0 5px;\n   }\n\n   > div {\n      min-width: 100%;\n   }\n`\n\nexport const StatementInput = styled.textarea.attrs({})`\n   resize: vertical;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   min-width: 100%;\n   margin: 10px 10px 0;\n   padding: 10px;\n   font-size: 14px;\n`\n\nexport const AlternativesList = styled.div`\n   flex: 1;\n\n   > div {\n      display: flex;\n      align-items: flex-start;\n      margin: 10px auto;\n\n      strong {\n         margin-top: 5px;\n      }\n   }\n`\n\nexport const AlternativeInput = styled.textarea`\n   flex: 1;\n   resize: vertical;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   font-size: 14px;\n   padding: 5px;\n   margin-left: 10px;\n`\n","import React, { Component } from 'react'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\nimport {\n   FaSearch,\n   FaPlus,\n   FaPencilAlt,\n   FaUserCog,\n   FaWindowClose,\n} from 'react-icons/fa'\n\nimport Modal from 'react-modal'\nimport ModalQuestion from './modal'\n\nimport api from '../../services/api'\n\nimport {\n   Container,\n   QuestionModal,\n   Title,\n   TextHeader,\n   ButtonsContainer,\n   AddQuestionButton,\n   AdminContainer,\n   LabelContainer,\n   NumberInput,\n   InputStatementList,\n   InputStatementItem,\n   StatementInput,\n   AlternativesList,\n   AlternativeInput,\n} from './styles'\n\nconst exam_options = [\n   { value: 'poscomp', label: 'POSCOMP', index: 0 },\n   { value: 'enade', label: 'ENADE', index: 1 },\n]\n\nconst year_options = [\n   { value: '2004', label: '2004' },\n   { value: '2005', label: '2005' },\n   { value: '2006', label: '2006' },\n   { value: '2007', label: '2007' },\n   { value: '2008', label: '2008' },\n   { value: '2009', label: '2009' },\n   { value: '2010', label: '2010' },\n   { value: '2011', label: '2011' },\n   { value: '2012', label: '2012' },\n   { value: '2013', label: '2013' },\n   { value: '2014', label: '2014' },\n   { value: '2015', label: '2015' },\n   { value: '2016', label: '2016' },\n   { value: '2017', label: '2017' },\n   { value: '2018', label: '2018' },\n   { value: '2019', label: '2019' },\n]\n\nconst answer_options = [\n   { value: 'A', label: 'A' },\n   { value: 'B', label: 'B' },\n   { value: 'C', label: 'C' },\n   { value: 'D', label: 'D' },\n   { value: 'E', label: 'E' },\n]\n\nconst areas_options = [\n   [\n      { value: '1', label: 'Matemática' },\n      { value: '2', label: 'Fundamentos de Computação' },\n      { value: '3', label: 'Tecnologia da Computação' },\n   ],\n]\n\nconst type_options = [\n   { value: 1, label: 'Normal' },\n   { value: 2, label: 'Center' },\n   { value: 3, label: 'Image' },\n   { value: 4, label: 'Code' },\n]\n\nModal.setAppElement('#root')\n\nexport default class Admin extends Component {\n   state = {\n      question: {},\n      show_modal: false,\n      exam_input: {},\n      question_input: 1,\n      year_input: {},\n      answer_input: {},\n      area_input: {},\n      statement_input: [{ id: 0, type: 1, content: '' }],\n      alternatives_input: [\n         { letter: 'A', content: '' },\n         { letter: 'B', content: '' },\n         { letter: 'C', content: '' },\n         { letter: 'D', content: '' },\n         { letter: 'E', content: '' },\n      ],\n   }\n\n   componentDidMount() {\n      document.title = 'ADMIN'\n\n      const {\n         exam_input,\n         question_input,\n         year_input,\n         answer_input,\n         area_input,\n         statement_input,\n         alternatives_input,\n      } = this.state\n\n      this.setState({\n         question: {\n            exam: exam_input.label,\n            number: question_input,\n            year: year_input.value,\n            answer: answer_input.value,\n            area: area_input.label,\n            statement: statement_input,\n            alternatives: alternatives_input,\n         },\n      })\n   }\n\n   handleChangeExamInput = option => {\n      this.setState({\n         exam_input: option,\n         area_input: {},\n      })\n   }\n\n   handleChangeQuestionNumber = event => {\n      this.setState({ question_input: event.target.value })\n   }\n\n   handleChangeYearInput = option => {\n      this.setState({ year_input: option })\n   }\n\n   handleChangeAnswerInput = option => {\n      this.setState({ answer_input: option })\n   }\n\n   handleChangeAreaInput = option => {\n      this.setState({ area_input: option })\n   }\n\n   handleAddStatement = event => {\n      const { statement_input } = this.state\n\n      this.setState({\n         statement_input: [\n            ...statement_input,\n            { id: statement_input.length, type: 1, content: '' },\n         ],\n      })\n   }\n\n   handleTypeInputChange = (option, id) => {\n      const { statement_input } = this.state\n\n      const index = statement_input.findIndex(s => s.id === id)\n      statement_input[index].type = option.value\n\n      this.setState({ statement_input })\n   }\n\n   handleContentInputChange = (event, id) => {\n      const { statement_input } = this.state\n\n      const index = statement_input.findIndex(s => s.id === id)\n\n      statement_input[index].content = event.target.value\n\n      this.setState({ statement_input })\n   }\n\n   handleAlternativesInputChange = (event, letter) => {\n      const { alternatives_input } = this.state\n\n      const index = alternatives_input.findIndex(a => a.letter === letter)\n      alternatives_input[index].content = event.target.value\n\n      this.setState({ alternatives_input })\n   }\n\n   isStatementEmpty = statement => {\n      return statement.filter(s => s.content === '').length > 0\n   }\n\n   isAlternativesEmpty = alternatives => {\n      return alternatives.filter(a => a.content === '').length > 0\n   }\n\n   handleAddQuestion = async () => {\n      const {\n         exam_input,\n         question_input,\n         year_input,\n         answer_input,\n         area_input,\n         statement_input,\n         alternatives_input,\n      } = this.state\n\n      if (Object.keys(exam_input).length === 0) {\n         toast.error('Selecione uma PROVA')\n         return\n      }\n\n      if (Object.keys(year_input).length === 0) {\n         toast.error('Preencha o ANO da questão')\n         return\n      }\n\n      if (Object.keys(answer_input).length === 0) {\n         toast.error('Preencha o GABARITO da questão')\n         return\n      }\n\n      if (Object.keys(area_input).length === 0) {\n         toast.error('Preencha a ÁREA da questão')\n         return\n      }\n\n      if (this.isStatementEmpty(statement_input)) {\n         toast.error('Preencha todos os ENUNCIADOS')\n         return\n      }\n\n      if (this.isAlternativesEmpty(alternatives_input)) {\n         toast.error('Preencha todas as ALTERNATIVAS')\n         return\n      }\n\n      const response = await api.post('/questions', {\n         exam: exam_input.value,\n         alternatives: alternatives_input,\n         answer: answer_input.value,\n         area: area_input.value,\n         justification: 'Justificativa',\n         number: question_input,\n         statement: statement_input,\n         year: year_input.value,\n      })\n\n      console.log(response)\n\n      toast.success('Questão adicionada com sucesso')\n      this.setState({\n         exam_input: {},\n         question_input: 1,\n         year_input: {},\n         answer_input: {},\n         area_input: {},\n         statement_input: [{ id: 0, type: 1, content: '' }],\n         alternatives_input: [\n            { letter: 'A', content: '' },\n            { letter: 'B', content: '' },\n            { letter: 'C', content: '' },\n            { letter: 'D', content: '' },\n            { letter: 'E', content: '' },\n         ],\n      })\n   }\n\n   handleOpenModal = () => {\n      const {\n         exam_input,\n         question_input,\n         year_input,\n         answer_input,\n         area_input,\n         statement_input,\n         alternatives_input,\n      } = this.state\n\n      var statement_string = ''\n      for (const s of statement_input) {\n         var aux = ''\n         switch (s.type) {\n            // Normal\n            case 1:\n               aux = `<p>${s.content}</p>`\n               break\n            // Center\n            case 2:\n               aux = `<center>${s.content}</center>`\n               break\n            // Image\n            case 3:\n               aux = `<center><img style=\"width: 35%\" src=\"${s.content}\" /></center>`\n               break\n            // Code\n            case 4:\n               aux = `<p><code><pre>${s.content}</pre></code></p>`\n               break\n            default:\n         }\n         statement_string += aux\n      }\n\n      this.setState({\n         question: {\n            exam: exam_input.label,\n            number: question_input,\n            year: year_input.value,\n            answer: answer_input.value,\n            area: area_input.label,\n            statement: statement_string,\n            alternatives: alternatives_input,\n         },\n         show_modal: true,\n      })\n   }\n\n   handleCloseModal = () => {\n      this.setState({ show_modal: false })\n   }\n\n   render() {\n      const {\n         question,\n         show_modal,\n         exam_input,\n         question_input,\n         year_input,\n         answer_input,\n         area_input,\n         statement_input,\n         alternatives_input,\n      } = this.state\n\n      return (\n         <Container>\n            <QuestionModal\n               isOpen={show_modal}\n               contentLabel=\"Minimal Modal Example\"\n            >\n               <button onClick={this.handleCloseModal}>\n                  <FaWindowClose size={36} />\n               </button>\n               <strong>Preview</strong>\n               <ModalQuestion question={question} />\n            </QuestionModal>\n            <Title>\n               <FaUserCog size={24} />\n               <span>Admin</span>\n            </Title>\n            <TextHeader>\n               <div>\n                  <FaPencilAlt size={18} />\n                  <span>Adicionar Questão</span>\n               </div>\n               <ButtonsContainer>\n                  <AddQuestionButton onClick={this.handleAddQuestion}>\n                     <FaPlus />\n                     Adicionar\n                  </AddQuestionButton>\n                  <AddQuestionButton onClick={this.handleOpenModal}>\n                     <FaSearch />\n                     Preview\n                  </AddQuestionButton>\n               </ButtonsContainer>\n            </TextHeader>\n            <AdminContainer>\n               <header>\n                  <strong>Descrição da Questão</strong>\n               </header>\n               <div>\n                  <LabelContainer>\n                     <span>Prova</span>\n                     <Select\n                        isSearchable={false}\n                        isClearable={false}\n                        value={exam_input}\n                        options={exam_options}\n                        onChange={this.handleChangeExamInput}\n                     />\n                  </LabelContainer>\n               </div>\n               <div>\n                  <LabelContainer>\n                     <span>Questão</span>\n                     <NumberInput\n                        value={question_input}\n                        onChange={this.handleChangeQuestionNumber}\n                     />\n                  </LabelContainer>\n                  <LabelContainer>\n                     <span>Ano</span>\n                     <Select\n                        isSearchable={false}\n                        isClearable\n                        value={year_input}\n                        options={year_options}\n                        onChange={this.handleChangeYearInput}\n                     />\n                  </LabelContainer>\n               </div>\n               <div>\n                  <LabelContainer>\n                     <span>Gabarito</span>\n                     <Select\n                        isSearchable={false}\n                        isClearable\n                        value={answer_input}\n                        options={answer_options}\n                        onChange={this.handleChangeAnswerInput}\n                     />\n                  </LabelContainer>\n                  <LabelContainer>\n                     <span>Area</span>\n                     <Select\n                        isSearchable={false}\n                        isClearable\n                        value={area_input}\n                        options={areas_options[exam_input.index]}\n                        onChange={this.handleChangeAreaInput}\n                     />\n                  </LabelContainer>\n               </div>\n               <header>\n                  <strong>Enunciado da Questão</strong>\n                  <button onClick={this.handleAddStatement}>\n                     <FaPlus />\n                     Enunciado\n                  </button>\n               </header>\n               <div>\n                  <InputStatementList>\n                     {statement_input.map(s => (\n                        <InputStatementItem key={s.id}>\n                           <Select\n                              isSearchable={false}\n                              isClearable\n                              options={type_options}\n                              defaultValue={type_options[0]}\n                              onChange={option =>\n                                 this.handleTypeInputChange(option, s.id)\n                              }\n                           />\n                           <StatementInput\n                              value={s.content}\n                              onChange={event =>\n                                 this.handleContentInputChange(event, s.id)\n                              }\n                           />\n                        </InputStatementItem>\n                     ))}\n                  </InputStatementList>\n               </div>\n               <header>\n                  <strong>Alternativas da Questão</strong>\n               </header>\n               <div>\n                  <AlternativesList>\n                     {alternatives_input.map((a, id) => (\n                        <div key={a.letter}>\n                           <strong>{a.letter}) </strong>\n                           <AlternativeInput\n                              value={a.content}\n                              onChange={event =>\n                                 this.handleAlternativesInputChange(\n                                    event,\n                                    a.letter\n                                 )\n                              }\n                           />\n                        </div>\n                     ))}\n                  </AlternativesList>\n               </div>\n            </AdminContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const QuestionsContainer = styled.div``\n\nexport const QuestionContent = styled.div`\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   margin-bottom: 15px;\n   padding-bottom: 15px;\n   padding-top: 7px;\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 0 20px;\n   margin: 0 15px 20px;\n\n   border-bottom: 1px solid #e0e1e2;\n\n   li {\n      margin-top: 10px;\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const QuestionsInfoContainer = styled.div`\n   padding: 0 15px;\n\n   > div {\n      & + div {\n         margin-top: 15px;\n      }\n\n      span {\n         font-size: 18px;\n      }\n\n      p {\n         font-size: 16px;\n         margin-top: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport { FaPen, FaHighlighter } from 'react-icons/fa'\n\nimport api from '../../services/api'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   Title,\n   QuestionsContainer,\n   QuestionContent,\n   TextHeader,\n   QuestionStatement,\n   AlternativesList,\n   QuestionsInfoContainer,\n} from './styles'\n\nexport default class Question extends Component {\n   state = {\n      loading: true,\n      question: {},\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      const response = await api.get(`/questions/${id}`)\n      console.log(response.data)\n\n      this.setState({ loading: false, question: response.data })\n   }\n\n   render() {\n      const { loading, question } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <Container>\n            <Title>\n               <FaPen size={24} />\n               <span>Detalhes da Questão</span>\n            </Title>\n            <QuestionsContainer>\n               <TextHeader>\n                  <FaHighlighter size={18} />\n                  <span>\n                     ({question.exam}/{question.year}) / Questão{' '}\n                     {question.number}\n                  </span>\n               </TextHeader>\n               <QuestionContent>\n                  <QuestionStatement\n                     dangerouslySetInnerHTML={{\n                        __html: question.statement,\n                     }}\n                  />\n                  <AlternativesList>\n                     {question.alternatives.map(alternative => (\n                        <li key={alternative.letter}>\n                           <strong>{alternative.letter})</strong>\n                           <span\n                              dangerouslySetInnerHTML={{\n                                 __html: alternative.content,\n                              }}\n                           />\n                        </li>\n                     ))}\n                  </AlternativesList>\n                  <QuestionsInfoContainer>\n                     <div>\n                        <span>Gabarito da questão</span>\n                        <p>Opção {question.answer}</p>\n                     </div>\n                     <div>\n                        <span>Comentário da questão</span>\n                        <p>{question.justification}</p>\n                     </div>\n                  </QuestionsInfoContainer>\n               </QuestionContent>\n            </QuestionsContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   div {\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      font-size: 16px;\n   }\n`\n\nexport const PraticeContainer = styled.div`\n   border: 1px solid #254979;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   padding: 10px 0;\n   margin-bottom: 10px;\n   background: #ffffff;\n`\n\nexport const HeaderContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   padding: 0 15px;\n\n   @media (max-width: 768px) {\n      flex-direction: column-reverse;\n      align-items: flex-start;\n   }\n`\n\nexport const AnswerList = styled.ul`\n   flex: 2 1;\n   list-style: none;\n   display: flex;\n   flex-wrap: wrap;\n   align-content: center;\n   justify-content: flex-start;\n\n   margin-block-start: 0;\n   margin-block-end: 0;\n   margin-inline-start: 0;\n   margin-inline-end: 0;\n   padding-inline-start: 0;\n\n   @media (max-width: 768px) {\n      margin-top: 10px;\n   }\n\n   li {\n      border: 1px solid #0e0e0e;\n      border-radius: 4px;\n      margin: 5px;\n      padding: 5px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &:hover {\n         cursor: pointer;\n      }\n\n      @media (max-width: 768px) {\n         width: calc(10% - 10px);\n         margin-bottom: 5px;\n      }\n\n      @media (max-width: 425px) {\n         width: calc(20% - 10px);\n      }\n\n      > span {\n         margin-right: 5px;\n      }\n\n      > strong {\n         background: #254979;\n         color: #ffffff;\n         padding: 1px 6px 2px 5px;\n         border-radius: 2px;\n         text-align: center;\n\n         @media (max-width: 768px) {\n            margin-left: 3px;\n         }\n      }\n   }\n`\n\nexport const OptionButtonsContainer = styled.div`\n   flex: 1 1;\n   display: flex;\n   flex-direction: row-reverse;\n\n   @media (max-width: 768px) {\n   }\n\n   @media (max-width: 425px) {\n      flex-direction: column;\n      width: 100%;\n   }\n`\n\nexport const EndPraticeButton = styled.button`\n   width: 150px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   height: 36px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   @media (max-width: 425px) {\n      width: 100%;\n      margin-bottom: 5px;\n   }\n\n   span {\n      margin-left: 7px;\n   }\n`\n\nexport const DownloadPDFButton = styled.button`\n   width: 150px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   height: 36px;\n   background: #ff2116;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n   margin-right: 10px;\n\n   @media (max-width: 425px) {\n      width: 100%;\n      margin-bottom: 5px;\n   }\n\n   span {\n      margin-left: 7px;\n   }\n`\n\nexport const ControlsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   padding: 0 10px;\n   margin-top: 20px;\n`\n\nexport const Control = styled.div`\n   display: flex;\n   align-items: center;\n\n   &:hover {\n      cursor: pointer;\n   }\n\n   svg {\n      margin: 5px;\n   }\n`\nexport const QuestionHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   border-top: 1px solid #c9c9c9;\n   border-bottom: 1px solid #c9c9c9;\n   padding: 15px;\n   margin-top: 15px;\n   margin-bottom: 15px;\n\n   strong {\n      font-size: 16px;\n\n      span {\n         text-align: center;\n         border-radius: 50%;\n         border: 1px solid #254979;\n         padding: 5px 7px;\n         margin-right: 8px;\n      }\n   }\n\n   > span {\n      color: #75797d;\n      font-size: 12px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 15px;\n\n   li {\n      margin-top: 20px;\n      display: flex;\n      align-items: flex-start;\n\n      span {\n         display: block;\n         align-items: center;\n         margin-left: 10px;\n\n         > img {\n            vertical-align: middle;\n         }\n      }\n   }\n`\n\nexport const AnswerContainer = styled.div`\n   margin: 20px 15px 5px;\n\n   p {\n      margin-bottom: 5px;\n   }\n`\n\nexport const AnswerContent = styled.div`\n   display: flex;\n   justify-content: space-around;\n   padding: 10px;\n   border: 1px solid #c9c9c9;\n   border-radius: 4px;\n\n   @media (max-width: 1090px) {\n      justify-content: space-between;\n   }\n\n   @media (max-width: 768px) {\n   }\n`\n\nexport const AnswerButton = styled.button`\n   background: ${props => (props.selected ? '#E8EAED' : '#254979')};\n   color: ${props => (props.selected ? '#254979' : '#FFFFFF')};\n   border: 1px solid ${props => (props.selected ? '#254979' : '#E8EAED')};\n   border-radius: 50%;\n   padding: 14px 18px;\n   font-weight: bold;\n   font-size: 16px;\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${props =>\n         props.selected ? darken(0.1, '#E8EAED') : darken(0.1, '#254979')};\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaRegFileAlt,\n   FaFilter,\n   FaRegFilePdf,\n   FaHourglassEnd,\n   FaArrowLeft,\n   FaArrowRight,\n} from 'react-icons/fa'\n\nimport history from '../../services/history'\nimport api from '../../services/api'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   Title,\n   TextHeader,\n   PraticeContainer,\n   HeaderContainer,\n   AnswerList,\n   OptionButtonsContainer,\n   EndPraticeButton,\n   DownloadPDFButton,\n   ControlsContainer,\n   Control,\n   QuestionHeader,\n   QuestionStatement,\n   AlternativesList,\n   AnswerContainer,\n   AnswerContent,\n   AnswerButton,\n} from './styles'\n\nexport default class Pratice extends Component {\n   state = {\n      id: 0,\n      questions: [],\n      id_current_question: 0,\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      document.title = `Simulado #${id}`\n\n      const { data } = await api.get(`/pratice/${id}`)\n\n      const questions = data.questions.map((question, index) => ({\n         ...question,\n         pratice_number: ('0' + (index + 1)).slice(-2),\n         user_answer: '-',\n         alternatives: question.alternatives.reverse(),\n      }))\n\n      if (questions.length === 0) {\n         history.push(`/simulados`)\n      }\n\n      this.setState({\n         id: data.id,\n         questions,\n      })\n   }\n\n   handleEndPratice = async questions => {\n      const { id } = this.state\n\n      await localStorage.setItem(\n         '@simulado/resultado',\n         JSON.stringify({\n            id,\n            results: questions.map(q => ({\n               number: q.pratice_number,\n               user_answer: q.user_answer,\n               answer: q.answer,\n            })),\n         })\n      )\n\n      history.push({\n         pathname: `/simulados/${id}/resultado`,\n      })\n   }\n\n   handleDownloadPDF = () => {\n      const { id } = this.state\n\n      history.push(`/simulados/${id}/pdf`)\n   }\n\n   handleChangeQuestion = value => {\n      const { questions, id_current_question } = this.state\n      const new_question = id_current_question + value\n\n      if (new_question >= 0 && new_question < questions.length) {\n         this.setState({ id_current_question: new_question })\n      }\n   }\n\n   handleChangeToQuestion = id => {\n      this.setState({ id_current_question: id })\n   }\n\n   handleSelectAnswer = (id, letter) => {\n      const { questions } = this.state\n\n      questions[Number(id) - 1].user_answer = letter\n\n      this.setState({ questions })\n   }\n\n   render() {\n      const { id, questions, id_current_question } = this.state\n\n      const current_question = questions[id_current_question]\n\n      if (questions.length === 0) {\n         return <Loading />\n      }\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <TextHeader>\n               <div>\n                  <FaFilter size={18} />\n                  <span>Resolver Simulado</span>\n               </div>\n               <span>Código: #{id}</span>\n            </TextHeader>\n            <PraticeContainer>\n               <HeaderContainer>\n                  <AnswerList>\n                     {questions.map((question, index) => (\n                        <li\n                           key={index}\n                           onClick={() => this.handleChangeToQuestion(index)}\n                        >\n                           <span>{question.pratice_number}</span>\n                           <strong>{question.user_answer}</strong>\n                        </li>\n                     ))}\n                  </AnswerList>\n                  <OptionButtonsContainer>\n                     <EndPraticeButton\n                        onClick={() => this.handleEndPratice(questions)}\n                     >\n                        <FaHourglassEnd />\n                        <span>Finalizar</span>\n                     </EndPraticeButton>\n                     <DownloadPDFButton onClick={this.handleDownloadPDF}>\n                        <FaRegFilePdf />\n                        <span>Download PDF</span>\n                     </DownloadPDFButton>\n                  </OptionButtonsContainer>\n               </HeaderContainer>\n               <ControlsContainer>\n                  <Control onClick={() => this.handleChangeQuestion(-1)}>\n                     <FaArrowLeft size={14} />\n                     <span>Anterior</span>\n                  </Control>\n                  <Control onClick={() => this.handleChangeQuestion(1)}>\n                     <span>Próxima</span>\n                     <FaArrowRight size={14} />\n                  </Control>\n               </ControlsContainer>\n               <QuestionHeader>\n                  <strong>\n                     <span>{current_question.pratice_number}</span>\n                     (POSCOMP/{current_question.year} - Questão{' '}\n                     {current_question.number})\n                  </strong>\n                  <span>#{current_question.id}</span>\n               </QuestionHeader>\n               <QuestionStatement\n                  dangerouslySetInnerHTML={{\n                     __html: current_question.statement,\n                  }}\n               />\n               <AlternativesList>\n                  {current_question.alternatives.map(alternative => (\n                     <li key={alternative.letter}>\n                        <strong>{alternative.letter})</strong>\n                        <span\n                           dangerouslySetInnerHTML={{\n                              __html: alternative.content,\n                           }}\n                        />\n                     </li>\n                  ))}\n               </AlternativesList>\n               <AnswerContainer>\n                  <p>Escolha sua resposta</p>\n                  <AnswerContent>\n                     {current_question.alternatives.map(alternative => (\n                        <AnswerButton\n                           selected={\n                              alternative.letter ===\n                              current_question.user_answer\n                           }\n                           key={alternative.letter}\n                           onClick={() =>\n                              this.handleSelectAnswer(\n                                 current_question.pratice_number,\n                                 alternative.letter\n                              )\n                           }\n                        >\n                           {alternative.letter}\n                        </AnswerButton>\n                     ))}\n                  </AnswerContent>\n               </AnswerContainer>\n            </PraticeContainer>\n         </Container>\n      )\n   }\n}\n","import styled, { keyframes, css } from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const FormContainer = styled.div`\n   & + div {\n      margin-top: 25px;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const Form = styled.form`\n   padding: 0 15px 15px;\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n\n   p {\n      margin-top: 15px;\n      margin-bottom: 7px;\n   }\n`\n\nexport const AreasContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   div {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      & + div {\n         margin-top: 10px;\n      }\n\n      > label {\n         flex: 3 1;\n\n         span {\n            margin-left: 10px;\n         }\n      }\n\n      > div {\n         flex: 1 1;\n\n         input {\n            flex: 1;\n            border: 1px solid #cccccc;\n            border-radius: 4px;\n            height: 28px;\n            margin-left: 7px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   flex-direction: row-reverse;\n   margin-top: 25px;\n`\n\nconst rotate = keyframes`\n   from {\n      transform: rotate(0deg);\n   }\n\n   to {\n      transform: rotate(360deg);\n   }\n`\n\nexport const SubmitButton = styled.button.attrs(props => ({\n   type: 'submit',\n   disabled: props.loading,\n}))`\n   height: 38px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   padding: 0 25px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   @media (max-width: 768px) {\n      flex: 1;\n   }\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#254979')};\n   }\n\n   ${props =>\n      props.loading &&\n      css`\n         svg {\n            animation: ${rotate} 2s linear infinite;\n         }\n      `}\n`\n\nexport const ClearButton = styled.button`\n   height: 38px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin-right: 10px;\n   padding: 0 25px;\n   background: #ffffff;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n\n   @media (max-width: 768px) {\n      flex: 1;\n   }\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#ffffff')};\n   }\n`\n\nexport const NumberInput = styled.input.attrs({\n   type: 'number',\n   min: 1,\n})`\n   width: 100%;\n   height: 36px;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   padding: 0 15px;\n`\n","import React, { Component } from 'react'\nimport {\n   FaRegFileAlt,\n   FaFilter,\n   FaSearch,\n   FaTrashAlt,\n   FaSpinner,\n} from 'react-icons/fa'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\n\nimport api from '../../services/api'\nimport history from '../../services/history'\n\nimport {\n   Container,\n   Title,\n   FormContainer,\n   TextHeader,\n   Form,\n   AreasContainer,\n   ButtonsContainer,\n   SubmitButton,\n   ClearButton,\n   NumberInput,\n} from './styles'\n\nexport default class Pratice extends Component {\n   state = {\n      loading: false,\n      exam_selected: [],\n      exams: [\n         { value: 'poscomp', label: 'POSCOMP' },\n         { value: 'enade', label: 'ENADE' },\n      ],\n      areas_selected: [],\n      exam_areas: [],\n      poscomp_areas: [\n         { value: '1', label: 'Matemática' },\n         { value: '2', label: 'Fundamentos de Computação' },\n         { value: '3', label: 'Tecnologia da Computação' },\n      ],\n      enade_areas: [],\n      questions: [],\n      cod_pratice: 0,\n   }\n\n   componentDidMount() {\n      document.title = 'Simulados'\n   }\n\n   handleChangeExam = event => {\n      const { exam_selected, poscomp_areas, enade_areas } = this.state\n\n      if (exam_selected !== event) {\n         var exam_areas =\n            event.value === 'poscomp' ? poscomp_areas : enade_areas\n         exam_areas.forEach(area => {\n            area.is_selected = false\n            area.amount = 0\n         })\n\n         this.setState({\n            exam_selected: event,\n            areas_selected: [],\n            exam_areas,\n         })\n      }\n   }\n\n   handleSelectArea = index => {\n      var { exam_areas } = this.state\n\n      exam_areas[index].is_selected = !exam_areas[index].is_selected\n      exam_areas[index].amount = exam_areas[index].is_selected ? 1 : 0\n\n      this.setState({ exam_areas })\n   }\n\n   handleChangeAreaAmount = (event, index) => {\n      var { exam_areas } = this.state\n\n      exam_areas[index].amount = event.target.value\n\n      this.setState({ exam_areas })\n   }\n\n   verifySelectedAreas = areas => {\n      const selected_areas = areas.filter(area => area.is_selected)\n\n      if (selected_areas.length === 0) {\n         return false\n      }\n\n      return selected_areas.filter(area => area.amount > 0).length !== 0\n   }\n\n   handleSubmitForm = async event => {\n      event.preventDefault()\n\n      this.setState({ loading: true })\n\n      const { exam_selected, exam_areas } = this.state\n\n      if (Object.keys(exam_selected).length === 0) {\n         toast.error('Selecione um concurso')\n         return\n      }\n\n      if (!this.verifySelectedAreas(exam_areas)) {\n         toast.error('Selecione ao menos uma questão')\n         return\n      }\n\n      const areas_aux = exam_areas.filter(area => area.amount > 0)\n\n      const response = await api.post('/pratice', {\n         exam: exam_selected.value,\n         areas: areas_aux.map(area => ({\n            id: area.value,\n            amount: area.amount,\n         })),\n      })\n\n      console.log(`Redirect to /simulados/${response.data.id}`)\n\n      history.push(`/simulados/${response.data.id}`)\n   }\n\n   handleClearForm = event => {\n      event.preventDefault()\n\n      this.setState({\n         exam_selected: {},\n         exam_areas: [],\n      })\n   }\n\n   handleChangeCodPratice = event => {\n      this.setState({ cod_pratice: Number(event.target.value) })\n   }\n\n   handleSearchPratice = event => {\n      event.preventDefault()\n\n      const { cod_pratice } = this.state\n\n      history.push(`/simulados/${cod_pratice}`)\n   }\n\n   render() {\n      const {\n         loading,\n         exam_selected,\n         exams,\n         exam_areas,\n         cod_pratice,\n      } = this.state\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <FormContainer>\n               <TextHeader>\n                  <FaFilter size={18} />\n                  <span>Gerador</span>\n               </TextHeader>\n               <Form>\n                  <p>Concurso</p>\n                  <Select\n                     isSearchable={false}\n                     isClearable\n                     value={exam_selected}\n                     options={exams}\n                     onChange={this.handleChangeExam}\n                  />\n                  <p>Áreas</p>\n                  <AreasContainer>\n                     {exam_areas.map((area, index) => (\n                        <div key={area.value}>\n                           <label>\n                              <input\n                                 type=\"checkbox\"\n                                 checked={area.is_selected}\n                                 onChange={() => this.handleSelectArea(index)}\n                              />\n                              <span>{area.label}</span>\n                           </label>\n                           <div>\n                              <span>Quantidade:</span>\n                              <input\n                                 type=\"number\"\n                                 min={1}\n                                 max={20}\n                                 disabled={!area.is_selected}\n                                 value={area.amount}\n                                 onChange={event =>\n                                    this.handleChangeAreaAmount(event, index)\n                                 }\n                              />\n                           </div>\n                        </div>\n                     ))}\n                  </AreasContainer>\n                  <ButtonsContainer>\n                     <SubmitButton\n                        loading={loading ? 1 : 0}\n                        onClick={this.handleSubmitForm}\n                     >\n                        {loading ? (\n                           <FaSpinner color=\"#FFF\" size={14} />\n                        ) : (\n                           <FaSearch size={16} />\n                        )}\n                        <span>Gerar</span>\n                     </SubmitButton>\n                     <ClearButton onClick={this.handleClearForm}>\n                        <FaTrashAlt size={16} />\n                        <span>Limpar</span>\n                     </ClearButton>\n                  </ButtonsContainer>\n               </Form>\n            </FormContainer>\n            <FormContainer>\n               <TextHeader>\n                  <FaFilter size={18} />\n                  <span>Buscar</span>\n               </TextHeader>\n               <Form>\n                  <p>Código</p>\n                  <NumberInput\n                     value={cod_pratice}\n                     onChange={this.handleChangeCodPratice}\n                  />\n                  <ButtonsContainer>\n                     <SubmitButton\n                        loading={loading ? 1 : 0}\n                        onClick={this.handleSearchPratice}\n                     >\n                        {loading ? (\n                           <FaSpinner color=\"#FFF\" size={14} />\n                        ) : (\n                           <FaSearch size={16} />\n                        )}\n                        <span>Buscar</span>\n                     </SubmitButton>\n                  </ButtonsContainer>\n               </Form>\n            </FormContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   div {\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      font-size: 16px;\n   }\n`\n\nexport const ResultContainer = styled.div`\n   background: #ffffff;\n   border: 1px solid #254979;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   padding: 10px 50px;\n\n   display: flex;\n   flex-direction: column;\n\n   @media (max-width: 768px) {\n      padding: 10px 0;\n   }\n`\n\nexport const ResultHeader = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-around;\n\n   border-bottom: 1px solid #c9c9c9;\n   padding-bottom: 10px;\n`\n\nexport const ResultList = styled.ul`\n   list-style: none;\n\n   li {\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      margin-top: 10px;\n      border-bottom: 1px solid #c9c9c9;\n      padding-bottom: 10px;\n   }\n`\n\nexport const StatisticsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px -5px 10px;\n   flex-wrap: wrap;\n   justify-content: center;\n\n   div {\n      flex: 1;\n      border: 1px solid #c9c9c9;\n      border-radius: 4px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 15px 0;\n      margin: 5px;\n\n      @media (max-width: 768px) {\n         flex: 0;\n         min-width: calc(50% - 15px);\n      }\n\n      strong {\n         font-size: 26px;\n      }\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   button {\n      width: 24%;\n      margin: 10px 5px;\n      padding: 10px;\n      border: 1px solid #c9c9c9;\n      border-radius: 4px;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      @media (max-width: 768px) {\n         flex: 1;\n      }\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#ffffff')};\n      }\n\n      span {\n         margin-left: 7px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaRegFileAlt,\n   FaPencilAlt,\n   FaUserTimes,\n   FaUserCheck,\n} from 'react-icons/fa'\nimport { MdRefresh } from 'react-icons/md'\n\nimport history from '../../services/history'\n\nimport {\n   Container,\n   Title,\n   TextHeader,\n   ResultContainer,\n   ResultHeader,\n   ResultList,\n   StatisticsContainer,\n   ButtonsContainer,\n} from './styles'\n\nexport default class PraticeResult extends Component {\n   state = {\n      id: 0,\n      results: [],\n      statistics: {},\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      document.title = `Resultado - Simulado #${id}`\n\n      const results = JSON.parse(\n         await localStorage.getItem('@simulado/resultado')\n      )\n\n      console.log(results)\n\n      if (results === null || results.id !== id) {\n         history.push({\n            pathname: `/simulados/${id}`,\n         })\n      }\n\n      const { results: questions_results } = results\n\n      const total_questions = questions_results.length\n      const total_corrects = questions_results.filter(\n         res => res.user_answer === res.answer\n      ).length\n\n      const statistics = {\n         // percent: Math.floor((total_corrects * 100) / total_questions),\n         percent: ((total_corrects / total_questions) * 100).toFixed(2) + '%',\n         corrects: total_corrects,\n         wrongs: total_questions - total_corrects,\n         total: total_questions,\n      }\n\n      this.setState({ id, results: questions_results, statistics })\n   }\n\n   handleNewPratice = () => {\n      history.push(`/simulados`)\n   }\n\n   handleRepeatPratice = () => {\n      const { id } = this.state\n\n      history.push(`/simulados/${id}`)\n   }\n\n   render() {\n      const { id, results, statistics } = this.state\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <TextHeader>\n               <div>\n                  <FaPencilAlt size={18} />\n                  <span>Resultados</span>\n               </div>\n               <span>Código: #{id}</span>\n            </TextHeader>\n            <ResultContainer>\n               <ResultHeader>\n                  <span>Questão</span>\n                  <span>Gabarito</span>\n                  <span>Resposta</span>\n                  <span>Acertou?</span>\n               </ResultHeader>\n               <ResultList>\n                  {results.map(question => (\n                     <li key={question.number}>\n                        <span>{question.number}</span>\n                        <span>{question.answer}</span>\n                        <span>{question.user_answer}</span>\n                        <span>\n                           {question.answer === question.user_answer ? (\n                              <FaUserCheck color=\"#0F0\" />\n                           ) : (\n                              <FaUserTimes color=\"#F00\" />\n                           )}\n                        </span>\n                     </li>\n                  ))}\n               </ResultList>\n               <StatisticsContainer>\n                  <div>\n                     <strong>{statistics.percent}</strong>\n                     <span>Acertos</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.total}</strong>\n                     <span>Questões</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.corrects}</strong>\n                     <span>Corretas</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.wrongs}</strong>\n                     <span>Erradas</span>\n                  </div>\n               </StatisticsContainer>\n               <ButtonsContainer>\n                  <button onClick={this.handleNewPratice}>\n                     <FaRegFileAlt size={14} />\n                     <span>Novo Simulado</span>\n                  </button>\n                  <button onClick={this.handleRepeatPratice}>\n                     <MdRefresh size={16} />\n                     <span>Repetir Simulado</span>\n                  </button>\n               </ButtonsContainer>\n            </ResultContainer>\n         </Container>\n      )\n   }\n}\n","import styled, { keyframes, css } from 'styled-components'\n\nexport const Container = styled.div`\n   width: 210mm;\n   min-height: 297mm;\n   padding: 20mm;\n   margin: 0 auto;\n   border: 1px #d3d3d3 solid;\n   border-radius: 5px;\n   background: white;\n   box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n`\n\nexport const PageContainer = styled.ul`\n   /* padding: 20px; */\n   list-style: none;\n\n   margin-block-start: 0;\n   margin-block-end: 0;\n   margin-inline-start: 0;\n   margin-inline-end: 0;\n   padding-inline-start: 0;\n`\n\nexport const OptionsContainer = styled.div`\n   width: 210mm;\n\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   margin: 0 auto;\n`\n\nexport const ButtonReturn = styled.button`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   border: 0;\n   background: 0;\n\n   &:hover {\n      text-decoration: underline;\n   }\n\n   svg {\n      margin-right: 10px;\n   }\n`\n\nconst rotate = keyframes`\n   from {\n      transform: rotate(0deg);\n   }\n\n   to {\n      transform: rotate(360deg);\n   }\n`\n\nexport const DownloadButton = styled.button.attrs(props => ({\n   disabled: props.loading,\n}))`\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #fff;\n   padding: 15px 20px;\n   margin: 25px;\n   display: flex;\n   align-items: center;\n\n   svg {\n      margin-right: 10px;\n   }\n\n   ${props =>\n      props.loading &&\n      css`\n         svg {\n            animation: ${rotate} 2s linear infinite;\n         }\n      `}\n`\n\nexport const QuestionContainer = styled.li`\n   & + li {\n      margin-top: 20px;\n   }\n`\n\nexport const StatementContainer = styled.div``\n\nexport const StatementContent = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   > span {\n      & + span {\n         margin-top: 15px;\n      }\n\n      code {\n         line-height: normal;\n         font-family: monospace;\n      }\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 3px;\n      display: block;\n\n      > img {\n         vertical-align: middle;\n      }\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n\n   margin-block-start: 0;\n   margin-block-end: 0;\n   margin-inline-start: 0;\n   margin-inline-end: 0;\n   padding-inline-start: 0;\n\n   li {\n      margin-top: 10px;\n      display: flex;\n      align-items: flex-start;\n\n      > span {\n         margin-left: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport html2pdf from 'html2pdf.js'\nimport { FaArrowLeft, FaRegFilePdf, FaSpinner } from 'react-icons/fa'\nimport Img from 'react-image'\n\nimport 'katex/dist/katex.min.css'\nimport { InlineMath, BlockMath } from 'react-katex'\n\nimport history from '../../services/history'\nimport api from '../../services/api'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   PageContainer,\n   OptionsContainer,\n   ButtonReturn,\n   DownloadButton,\n   QuestionContainer,\n   StatementContainer,\n   StatementContent,\n   AlternativesList,\n} from './styles'\n\nexport default class PDF2 extends Component {\n   state = {\n      loading: true,\n      downloading: false,\n      id: 0,\n      questions: [],\n   }\n\n   async componentWillMount() {\n      const { id } = this.props.match.params\n\n      document.title = `PDF - Simulado #${id}`\n\n      const { data } = await api.get(`/pratice/${id}`)\n\n      var questions = data.questions.map((question, index) => ({\n         ...question,\n         pratice_number: ('0' + (index + 1)).slice(-2),\n         user_answer: '-',\n         alternatives: question.alternatives.reverse(),\n      }))\n\n      for (const question of questions) {\n         question.pdf_statement = []\n         // > [Statement]\n         const HTMLDiv = document.createElement('div')\n         HTMLDiv.innerHTML = question.statement\n         for (var s = 0; s < HTMLDiv.childNodes.length; s++) {\n            const DIVNode = HTMLDiv.childNodes[s]\n\n            var StatementList = []\n            for (var i = 0; i < DIVNode.childNodes.length; i++) {\n               const StatementNode = DIVNode.childNodes[i]\n               switch (StatementNode.localName) {\n                  case 'img':\n                     if (StatementNode.parentElement.localName === 'center') {\n                        StatementList.push({\n                           type: StatementNode.title === '' ? 4 : 3,\n                           content:\n                              StatementNode.title === ''\n                                 ? StatementNode.src\n                                 : StatementNode.title,\n                        })\n                     } else {\n                        StatementList.push({\n                           type: 2,\n                           content: StatementNode.title,\n                        })\n                     }\n                     break\n                  case 'code':\n                     StatementList.push({\n                        type: 5,\n                        content: StatementNode.outerHTML,\n                     })\n                     break\n                  default:\n                     if (StatementNode.nodeName === '#text') {\n                        StatementList.push({\n                           type: 1,\n                           content: StatementNode.data,\n                        })\n                     } else {\n                        StatementList.push({\n                           type: 1,\n                           content: StatementNode.outerHTML,\n                        })\n                     }\n                     break\n               }\n            }\n\n            question.pdf_statement = [...question.pdf_statement, StatementList]\n         }\n\n         const alternatives = question.alternatives\n            .sort(function(a, b) {\n               return a.letter > b.letter\n            })\n            .reverse()\n\n         question.pdf_alternatives = []\n         // > [Alternatives]\n         for (const alternative of alternatives) {\n            const HTMLDiv = document.createElement('div')\n            HTMLDiv.innerHTML = alternative.content\n\n            const AlternativesList = []\n            for (var s = 0; s < HTMLDiv.childNodes.length; s++) {\n               const AlternativeNode = HTMLDiv.childNodes[s]\n\n               switch (AlternativeNode.localName) {\n                  case 'img':\n                     AlternativesList.push({\n                        type: 2,\n                        content: AlternativeNode.title,\n                     })\n                     break\n                  default:\n                     AlternativesList.push({\n                        type: 1,\n                        content:\n                           AlternativeNode.nodeName === '#text'\n                              ? AlternativeNode.data\n                              : AlternativeNode.outerHTML,\n                     })\n                     break\n               }\n            }\n\n            question.pdf_alternatives = [\n               ...question.pdf_alternatives,\n               { letter: alternative.letter, list: AlternativesList },\n            ]\n         }\n      }\n\n      this.setState({\n         id: data.id,\n         questions,\n         loading: false,\n      })\n   }\n\n   handleDownloadPDF = async () => {\n      console.log(' > [PDF] Inicializando Download...')\n      this.setState({ downloading: true })\n\n      var element = document.getElementById('pdf_container')\n      var opt = {\n         margin: 25,\n         filename: `${Date.now()}_simulado_${this.state.id}.pdf`,\n         image: { type: 'jpeg', quality: 0.75 },\n         html2canvas: { scale: 2 },\n         jsPDF: {\n            orientation: 'p',\n            unit: 'mm',\n            format: 'a4',\n         },\n         pagebreak: {\n            avoid: ['#question_container', '#statement', '#alternatives'],\n         },\n      }\n\n      // New Promise-based usage:\n      await html2pdf()\n         .set(opt)\n         .from(element)\n         .save()\n\n      console.log(' > [PDF] Finalizando Download')\n      this.setState({ downloading: false })\n   }\n\n   handleBackPage = () => {\n      history.push(`/simulados/${this.state.id}`)\n   }\n\n   render() {\n      const { loading, downloading, questions } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <div>\n            <OptionsContainer>\n               <ButtonReturn onClick={this.handleBackPage}>\n                  <FaArrowLeft />\n                  Voltar\n               </ButtonReturn>\n               <DownloadButton\n                  loading={downloading ? 1 : 0}\n                  onClick={this.handleDownloadPDF}\n               >\n                  {downloading ? (\n                     <FaSpinner size={24} />\n                  ) : (\n                     <FaRegFilePdf size={24} />\n                  )}\n                  Download PDF\n               </DownloadButton>\n               <div />\n            </OptionsContainer>\n            <Container>\n               <PageContainer id=\"pdf_container\">\n                  {questions.map((question, index) => (\n                     <QuestionContainer key={index} id=\"question_container\">\n                        <StatementContainer id=\"statement\">\n                           <strong>\n                              {question.pratice_number}) (\n                              {String(question.exam).toUpperCase()}/\n                              {question.year})\n                           </strong>\n                           <StatementContent>\n                              {question.pdf_statement.map(\n                                 (aux_statement, index) => (\n                                    <span key={index}>\n                                       {aux_statement.map(\n                                          (statement, index) => {\n                                             switch (statement.type) {\n                                                case 1:\n                                                   return (\n                                                      <span\n                                                         key={index}\n                                                         dangerouslySetInnerHTML={{\n                                                            __html:\n                                                               statement.content,\n                                                         }}\n                                                      />\n                                                   )\n                                                case 2:\n                                                   return (\n                                                      <InlineMath key={index}>\n                                                         {String(\n                                                            statement.content\n                                                         )}\n                                                      </InlineMath>\n                                                   )\n                                                case 3:\n                                                   return (\n                                                      <BlockMath key={index}>\n                                                         {String(\n                                                            statement.content\n                                                         )}\n                                                      </BlockMath>\n                                                   )\n                                                case 4:\n                                                   return (\n                                                      <center key={index}>\n                                                         <Img\n                                                            style={{\n                                                               width: '40%',\n                                                            }}\n                                                            src={\n                                                               statement.content\n                                                            }\n                                                         />\n                                                      </center>\n                                                   )\n                                                case 5:\n                                                   return (\n                                                      <pre\n                                                         key={index}\n                                                         dangerouslySetInnerHTML={{\n                                                            __html:\n                                                               statement.content,\n                                                         }}\n                                                      />\n                                                   )\n                                             }\n                                          }\n                                       )}\n                                    </span>\n                                 )\n                              )}\n                           </StatementContent>\n                        </StatementContainer>\n                        <AlternativesList id=\"alternatives\">\n                           {question.pdf_alternatives.map(alternative => (\n                              <li key={alternative.letter}>\n                                 <strong>{alternative.letter})</strong>\n                                 <span>\n                                    {alternative.list.map((item, index) => {\n                                       switch (item.type) {\n                                          case 1:\n                                             return (\n                                                <span\n                                                   key={index}\n                                                   dangerouslySetInnerHTML={{\n                                                      __html: item.content,\n                                                   }}\n                                                />\n                                             )\n                                          case 2:\n                                             return (\n                                                <InlineMath key={index}>\n                                                   {String(item.content)}\n                                                </InlineMath>\n                                             )\n                                       }\n                                    })}\n                                 </span>\n                              </li>\n                           ))}\n                        </AlternativesList>\n                     </QuestionContainer>\n                  ))}\n\n                  {/* {questions.map((question, index) => (\n                  <QuestionContainer>\n                     <StatementContainer>\n                        <strong>\n                           {question.pratice_number}) (\n                           {String(question.exam).toUpperCase()}/{question.year}\n                           )\n                        </strong>\n                        <span>\n                           {question.pdf_state.map(pdf_statement =>\n                              pdf_statement.map((statement, index) =>\n                                 statement.type === 1 ? (\n                                    <span key={index}>{statement.content}</span>\n                                 ) : (\n                                    <InlineMath key={index}>\n                                       {String(statement.content)}\n                                    </InlineMath>\n                                 )\n                              )\n                           )}\n                        </span>\n                     </StatementContainer>\n                     <OptionsContainer>\n                        {question.alternatives.map(alternative => (\n                           <p>\n                              <strong>{alternative.letter})</strong>\n                              <span\n                                 dangerouslySetInnerHTML={{\n                                    __html: alternative.content,\n                                 }}\n                              />\n                           </p>\n                        ))}\n                     </OptionsContainer>\n                  </QuestionContainer>\n               ))} */}\n               </PageContainer>\n            </Container>\n         </div>\n      )\n   }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Admin from './pages/Admin'\nimport Question from './pages/Question'\nimport Pratice from './pages/Pratice'\nimport SearchPratice from './pages/SearchPratice'\nimport PraticeResult from './pages/PraticeResult'\n\nimport PDF from './pages/PDF'\n\nexport default function Routes() {\n   return (\n      <Switch>\n         <Route path=\"/\" exact component={Home} />\n         <Route path=\"/admin\" component={Admin} />\n         <Route path=\"/questao/:id\" component={Question} />\n         <Route path=\"/simulados/:id/pdf\" component={PDF} />\n         <Route path=\"/simulados/:id/resultado\" component={PraticeResult} />\n         <Route path=\"/simulados/:id\" component={Pratice} />\n         <Route path=\"/simulados\" component={SearchPratice} />\n\n         <Route path=\"/teste\" component={PDF} />\n      </Switch>\n   )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n   * {\n      @import url('https://fonts.googleapis.com/css?family=Noto+Sans&display=swap');\n      font-family: 'Noto Sans', sans-serif;\n\n      margin: 0;\n      padding: 0;\n      outline: 0;\n      box-sizing: border-box;\n   }\n\n   body {\n      background: #E8EAED;\n      -webkit-font-smoothing: antialiased !important;\n      margin: 0;\n      padding: 0;\n   }\n\n   body, input, button {\n      font: 14px 'Noto Sans', sans-serif;\n   }\n\n   #root {\n      margin: 0 auto;\n      padding: 0;\n      min-height: calc(100vh);\n   }\n\n   button {\n      cursor: pointer;\n   }\n\n   a {\n      text-decoration: none;\n   }\n`\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport history from './services/history'\n\nimport Header from './components/Header'\nimport Routes from './routes'\nimport GlobalCSS from './styles/global'\n\nfunction App() {\n   return (\n      <>\n         <HashRouter history={history}>\n            <Header />\n            <Routes />\n            <GlobalCSS />\n            <ToastContainer autoClose={3000} />\n         </HashRouter>\n      </>\n   )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/logo_petcc.350d0aae.svg\";"],"sourceRoot":""}