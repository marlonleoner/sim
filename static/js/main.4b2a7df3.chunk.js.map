{"version":3,"sources":["services/history.js","components/Header/styles.js","components/Header/index.js","services/api.js","components/Loading/styles.js","components/Loading/index.js","pages/Home/styles.js","pages/Home/index.js","pages/Admin/modal_styles.js","pages/Admin/modal.js","pages/Admin/styles.js","pages/Admin/index.js","pages/Question/styles.js","pages/Question/index.js","pages/Pratice/styles.js","pages/Pratice/index.js","pages/SearchPratice/styles.js","pages/SearchPratice/index.js","pages/PraticeResult/styles.js","pages/PraticeResult/index.js","pages/PDF/index.js","routes.js","styles/global.js","App.js","index.js","assets/images/logo_petcc.svg"],"names":["history","createHashHistory","HeaderContainer","styled","div","Links","Link","LinksContainer","LogoPET","img","LinkItem","darken","Header","to","src","Logo","api","axios","create","baseURL","rotate","keyframes","LoadingContainer","css","LoadingContent","AiOutlineLoading","attrs","size","color","Loading","Container","Title","FormContainer","TextHeader","Form","form","ButtonsContainer","SubmitButton","button","ClearButton","QuestionsContainer","QuestionsContent","QuestionsList","ul","QuestionHeader","QuestionStatement","AlternativesList","AnswerContainer","AnswerContent","AnswerCorrect","AnswerIncorrect","OptionsContainer","Home","state","loading","exam_selected","exams","value","label","areas_selected","exam_areas","poscomp_areas","enade_areas","questions","handleChangeExam","event","setState","handleAddArea","option","handleSubmitButton","a","preventDefault","Object","keys","length","toast","error","url","get","response","data","handleClearForm","handleVerifyAnwser","question","user_answer","this","isSearchable","isClearable","options","onChange","onClick","map","index","key","id","year","number","dangerouslySetInnerHTML","__html","statement","alternatives","alternative","letter","content","answer","Component","QuestionContent","QuestionsInfoContainer","ModalQuestion","props","exam","area","QuestionModal","Modal","AddQuestionButton","AdminContainer","LabelContainer","NumberInput","input","type","min","max","InputStatementList","InputStatementItem","StatementInput","textarea","AlternativeInput","exam_options","year_options","answer_options","areas_options","type_options","setAppElement","Admin","show_modal","exam_input","question_input","year_input","answer_input","area_input","statement_input","alternatives_input","handleChangeExamInput","handleChangeQuestionNumber","target","handleChangeYearInput","handleChangeAnswerInput","handleChangeAreaInput","handleAddStatement","handleTypeInputChange","findIndex","s","handleContentInputChange","handleAlternativesInputChange","isStatementEmpty","filter","isAlternativesEmpty","handleAddQuestion","post","justification","console","log","success","handleOpenModal","statement_string","aux","handleCloseModal","isOpen","contentLabel","defaultValue","Question","match","params","PraticeContainer","AnswerList","OptionButtonsContainer","EndPraticeButton","DownloadPDFButton","ControlsContainer","Control","AnswerButton","selected","Pratice","id_current_question","handleEndPratice","localStorage","setItem","JSON","stringify","results","q","pratice_number","push","pathname","handleDownloadPDF","handleChangeQuestion","new_question","handleSelectAnswer","Number","slice","reverse","current_question","AreasContainer","forEach","is_selected","amount","handleSelectArea","handleChangeAreaAmount","verifySelectedAreas","areas","selected_areas","handleSubmitForm","areas_aux","checked","disabled","ResultContainer","ResultHeader","ResultList","StatisticsContainer","PraticeResult","statistics","handleNewPratice","handleRepeatPratice","getItem","parse","questions_results","total_questions","total_corrects","res","percent","toFixed","corrects","wrongs","total","ref","React","createRef","PDF","targetRef","filename","toPdf","Routes","path","exact","component","SearchPratice","createGlobalStyle","App","autoClose","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4b2a7df3.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\n\nconst history = createHashHistory()\n\nexport default history\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { darken } from 'polished'\n\nexport const HeaderContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   background: #ffffff;\n   border-bottom: 1px solid #ccc;\n   height: 64px;\n   padding: 0 30px;\n\n   @media (max-width: 1366px) {\n      padding: 0 12px;\n   }\n`\n\nexport const Links = styled(Link)``\n\nexport const LinksContainer = styled.div`\n   display: flex;\n   align-items: center;\n   height: 100%;\n`\n\nexport const LogoPET = styled.img`\n   height: 48px;\n`\n\nexport const SingInButton = styled(Link)`\n   color: #fff;\n   font-size: 16px;\n   border: 1px solid #e1e1e1;\n   border-radius: 4px;\n   background: #010305;\n   padding: 7px 25px;\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${darken(-0.15, '#010305')};\n   }\n`\n\nexport const LinkItem = styled.div`\n   display: flex;\n   height: 100%;\n\n   & + div {\n      margin-left: 15px;\n   }\n\n   &:hover {\n      background: ${() => darken(0.1, '#ffffff')};\n   }\n\n   > a {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: #000000;\n\n      > span {\n         margin-left: 7px;\n      }\n   }\n`\n","import React from 'react'\nimport { FaSearch, FaRegFileAlt } from 'react-icons/fa'\n\nimport Logo from '../../assets/images/logo_petcc.svg'\nimport {\n   HeaderContainer,\n   Links,\n   LinksContainer,\n   LogoPET,\n   LinkItem,\n} from './styles'\n\nconst Header = () => (\n   <HeaderContainer>\n      <Links to=\"/\">\n         <LogoPET src={Logo} />\n      </Links>\n      <LinksContainer>\n         <LinkItem>\n            <Links to=\"/\">\n               <FaSearch />\n               <span>Buscar</span>\n            </Links>\n         </LinkItem>\n         <LinkItem>\n            <Links to=\"/simulados\">\n               <FaRegFileAlt />\n               <span>Simulados</span>\n            </Links>\n         </LinkItem>\n      </LinksContainer>\n   </HeaderContainer>\n)\n\nexport default Header\n","import axios from 'axios'\n\nconst api = axios.create({\n   // baseURL: 'http://localhost:3333',\n   baseURL: 'https://exams-questions.herokuapp.com',\n})\n\nexport default api\n","import styled, { keyframes, css } from 'styled-components'\nimport { AiOutlineLoading } from 'react-icons/ai'\n\nconst rotate = keyframes`\n   from {\n      transform: rotate(0deg);\n   }\n\n   to {\n      transform: rotate(360deg);\n   }\n`\n\nexport const LoadingContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin: 50px 0;\n\n   ${css`\n      svg {\n         animation: ${rotate} 2s linear infinite;\n      }\n   `};\n`\n\nexport const LoadingContent = styled(AiOutlineLoading).attrs({\n   size: 72,\n   color: '#000',\n})``\n","import React from 'react'\n\nimport { LoadingContainer, LoadingContent } from './styles'\n\nconst Loading = () => (\n   <LoadingContainer>\n      <LoadingContent />\n   </LoadingContainer>\n)\n\nexport default Loading\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const FormContainer = styled.div``\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const Form = styled.form`\n   padding: 0 15px 15px;\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n\n   p {\n      margin-top: 15px;\n      margin-bottom: 7px;\n   }\n`\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   flex-direction: row;\n   margin-top: 15px;\n\n   @media (max-width: 768px) {\n      justify-content: space-between;\n   }\n`\n\nexport const SubmitButton = styled.button`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   padding: 10px 25px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#254979')};\n   }\n\n   @media (max-width: 768px) {\n      flex: 1;\n   }\n`\n\nexport const ClearButton = styled.button`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin-left: 10px;\n   padding: 10px 25px;\n   background: #ffffff;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#ffffff')};\n   }\n\n   @media (max-width: 768px) {\n      flex: 1;\n   }\n`\n\nexport const QuestionsContainer = styled.div`\n   margin-top: 25px;\n`\n\nexport const QuestionsContent = styled.div`\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n`\n\nexport const QuestionsList = styled.ul`\n   list-style: none;\n   padding-bottom: 15px;\n   margin-bottom: 15px;\n\n   margin-block-start: 0;\n   margin-block-end: 0;\n   margin-inline-start: 0;\n   margin-inline-end: 0;\n   padding-inline-start: 0;\n\n   li {\n      & + li {\n         margin-top: 15px;\n      }\n\n      > p {\n         margin: 30px 15px 0;\n      }\n   }\n`\n\nexport const QuestionHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   border-top: 1px solid #c9c9c9;\n   border-bottom: 1px solid #c9c9c9;\n   padding: 15px;\n   margin-bottom: 15px;\n\n   strong {\n      font-size: 16px;\n\n      span {\n         color: #ffffff;\n         text-align: center;\n         border-radius: 50%;\n         background: #254979;\n         padding: 6px 10px;\n         margin-right: 8px;\n      }\n   }\n\n   > span {\n      color: #75797d;\n      font-size: 12px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n\n   code {\n      font-family: Courier New, monospace;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 15px;\n\n   li {\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const AnswerContainer = styled.div`\n   margin: 20px 15px 15px;\n\n   p {\n      margin-bottom: 5px;\n   }\n`\n\nexport const AnswerContent = styled.div`\n   display: flex;\n   justify-content: space-around;\n   padding: 10px;\n   border: 1px solid #c9c9c9;\n   border-radius: 4px;\n\n   @media (max-width: 1090px) {\n      justify-content: space-between;\n   }\n\n   @media (max-width: 768px) {\n   }\n\n   button {\n      background: #254979;\n      color: #ffffff;\n      border: 0;\n      border-radius: 50%;\n      padding: 14px 18px;\n      font-weight: bold;\n      font-size: 16px;\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#254979')};\n      }\n   }\n`\n\nexport const AnswerCorrect = styled.div`\n   font-size: 16px;\n   font-weight: bold;\n   height: 74px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin: 20px 10px 15px;\n   border: 1px solid ${() => darken(0.15, '#cef0ab')};\n   border-radius: 4px;\n   background: #cef0ab;\n\n   span {\n      margin-left: 10px;\n   }\n`\n\nexport const AnswerIncorrect = styled.div`\n   font-size: 16px;\n   font-weight: bold;\n   height: 74px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin: 25px 15px 10px;\n   border: 1px solid ${() => darken(0.15, '#fdaa9a')};\n   border-radius: 4px;\n   background: #fdaa9a;\n\n   span {\n      margin-left: 10px;\n   }\n`\n\nexport const OptionsContainer = styled.div`\n   display: flex;\n   justify-content: space-around;\n   margin-top: 20px;\n   margin-bottom: 50px;\n\n   @media (max-width: 768px) {\n      flex-direction: column;\n      align-items: center;\n   }\n\n   a {\n      display: flex;\n      justify-content: center;\n      color: #ffffff;\n      background: #3d856a;\n      width: 250px;\n      padding: 10px;\n      border-radius: 4px;\n\n      & + a {\n         @media (max-width: 768px) {\n            margin-top: 7px;\n         }\n      }\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#3d856a')};\n      }\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaSearch,\n   FaFilter,\n   FaTrashAlt,\n   FaHighlighter,\n   FaPencilAlt,\n   FaPencilRuler,\n   FaRegComment,\n} from 'react-icons/fa'\nimport Select from 'react-select'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport api from '../../services/api'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   Title,\n   FormContainer,\n   TextHeader,\n   Form,\n   ButtonsContainer,\n   SubmitButton,\n   ClearButton,\n   QuestionsContainer,\n   QuestionsContent,\n   QuestionsList,\n   QuestionHeader,\n   QuestionStatement,\n   AlternativesList,\n   AnswerContainer,\n   AnswerContent,\n   AnswerCorrect,\n   AnswerIncorrect,\n   OptionsContainer,\n} from './styles'\n\nexport default class Home extends Component {\n   state = {\n      loading: false,\n      exam_selected: {},\n      exams: [\n         { value: 'poscomp', label: 'POSCOMP' },\n         { value: 'enade', label: 'ENADE' },\n      ],\n      areas_selected: {},\n      exam_areas: [],\n      poscomp_areas: [\n         { value: '1', label: 'Matemática' },\n         { value: '2', label: 'Fundamentos de Computação' },\n         { value: '3', label: 'Tecnologia da Computação' },\n      ],\n      enade_areas: [],\n      questions: null,\n   }\n\n   handleChangeExam = event => {\n      const { exam_selected, poscomp_areas, enade_areas } = this.state\n\n      if (exam_selected !== event) {\n         this.setState({\n            exam_selected: event,\n            areas_selected: [],\n            exam_areas: event.value === 'poscomp' ? poscomp_areas : enade_areas,\n         })\n      }\n   }\n\n   handleAddArea = option => {\n      this.setState({\n         areas_selected: option,\n      })\n   }\n\n   handleSubmitButton = async event => {\n      event.preventDefault()\n\n      this.setState({ loading: true, questions: [] })\n\n      const { exam_selected, areas_selected } = this.state\n      if (Object.keys(exam_selected).length === 0) {\n         toast.error('Selecione um concurso')\n         return\n      }\n\n      const url =\n         Object.keys(areas_selected).length === 0\n            ? ''\n            : `&area=${areas_selected.value}`\n\n      const response = await api.get(\n         `/questions?exam=${exam_selected.value}` + url\n      )\n\n      this.setState({ loading: false, questions: response.data })\n   }\n\n   handleClearForm = event => {\n      event.preventDefault()\n\n      this.setState({\n         exam_selected: {},\n         areas_selected: [],\n      })\n   }\n\n   handleVerifyAnwser = (question, user_answer) => {\n      const { questions } = this.state\n\n      questions[question].user_answer = user_answer\n\n      this.setState({ questions })\n   }\n\n   render() {\n      const {\n         loading,\n         exam_selected,\n         exams,\n         areas_selected,\n         exam_areas,\n         questions,\n      } = this.state\n\n      return (\n         <Container>\n            <Title>\n               <FaSearch size={24} />\n               <span>Buscar Exercícios</span>\n            </Title>\n            <FormContainer>\n               <TextHeader>\n                  <FaFilter size={18} />\n                  <span>Filtros</span>\n               </TextHeader>\n               <Form>\n                  <p>Concurso</p>\n                  <Select\n                     isSearchable={false}\n                     isClearable\n                     value={exam_selected}\n                     options={exams}\n                     onChange={this.handleChangeExam}\n                  />\n                  <p>Área</p>\n                  <Select\n                     isSearchable={false}\n                     isClearable\n                     value={areas_selected}\n                     options={exam_areas}\n                     onChange={this.handleAddArea}\n                  />\n                  <ButtonsContainer>\n                     <SubmitButton onClick={this.handleSubmitButton}>\n                        <FaSearch size={16} />\n                        <span>Buscar</span>\n                     </SubmitButton>\n                     <ClearButton onClick={this.handleClearForm}>\n                        <FaTrashAlt size={16} />\n                        <span>Limpar</span>\n                     </ClearButton>\n                  </ButtonsContainer>\n               </Form>\n            </FormContainer>\n            {questions && (\n               <QuestionsContainer>\n                  <TextHeader>\n                     <FaHighlighter size={18} />\n                     <span>Questões</span>\n                  </TextHeader>\n                  <QuestionsContent>\n                     {loading ? (\n                        <Loading />\n                     ) : (\n                        <QuestionsList>\n                           {questions.map((question, index) => (\n                              <li key={question.id}>\n                                 <QuestionHeader>\n                                    <strong>\n                                       <span>1</span>\n                                       (POSCOMP/{question.year} - Questão{' '}\n                                       {question.number})\n                                    </strong>\n                                    <span>#{question.id}</span>\n                                 </QuestionHeader>\n                                 <QuestionStatement\n                                    dangerouslySetInnerHTML={{\n                                       __html: question.statement,\n                                    }}\n                                 />\n                                 <AlternativesList>\n                                    {question.alternatives.map(alternative => (\n                                       <li key={alternative.letter}>\n                                          <strong>{alternative.letter})</strong>\n                                          <span\n                                             dangerouslySetInnerHTML={{\n                                                __html: alternative.content,\n                                             }}\n                                          />\n                                       </li>\n                                    ))}\n                                 </AlternativesList>\n                                 {typeof question.user_answer ===\n                                 'undefined' ? (\n                                    <AnswerContainer>\n                                       <p>Escolha sua resposta</p>\n                                       <AnswerContent>\n                                          {question.alternatives.map(\n                                             alternative => (\n                                                <button\n                                                   key={alternative.letter}\n                                                   onClick={() =>\n                                                      this.handleVerifyAnwser(\n                                                         index,\n                                                         alternative.letter\n                                                      )\n                                                   }\n                                                >\n                                                   {alternative.letter}\n                                                </button>\n                                             )\n                                          )}\n                                       </AnswerContent>\n                                    </AnswerContainer>\n                                 ) : question.user_answer ===\n                                   question.answer ? (\n                                    <AnswerCorrect>\n                                       <FaPencilAlt />\n                                       <span>\n                                          Você acertou essa questão! Sua\n                                          Resposta: {question.user_answer}\n                                       </span>\n                                    </AnswerCorrect>\n                                 ) : (\n                                    <AnswerIncorrect>\n                                       <FaPencilRuler />\n                                       <span>\n                                          Você errou! Resposta Correta:{' '}\n                                          {question.answer}. Sua Resposta:{' '}\n                                          {question.user_answer}\n                                       </span>\n                                    </AnswerIncorrect>\n                                 )}\n                                 <OptionsContainer>\n                                    <Link to={``}>\n                                       <FaSearch />\n                                       <span>Questões Similares</span>\n                                    </Link>\n                                    <Link to={`/questao/${question.id}`}>\n                                       <FaRegComment />\n                                       <span>Detalhes da Questão</span>\n                                    </Link>\n                                 </OptionsContainer>\n                              </li>\n                           ))}\n                        </QuestionsList>\n                     )}\n                  </QuestionsContent>\n               </QuestionsContainer>\n            )}\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   min-width: 1065px;\n\n   @media (max-width: 1090px) {\n      min-width: 100%;\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const QuestionsContainer = styled.div``\n\nexport const QuestionContent = styled.div`\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   margin-bottom: 15px;\n   padding-bottom: 15px;\n   padding-top: 7px;\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n\n   code {\n      line-height: normal;\n      margin: -10px 0;\n      font-family: monospace;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 0 20px;\n   margin: 0 15px 20px;\n\n   border-bottom: 1px solid #e0e1e2;\n\n   li {\n      display: flex;\n      align-items: center;\n      margin-top: 10px;\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const QuestionsInfoContainer = styled.div`\n   padding: 0 15px;\n\n   > div {\n      & + div {\n         margin-top: 15px;\n      }\n\n      span {\n         font-size: 18px;\n      }\n\n      p {\n         font-size: 16px;\n         margin-top: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport { FaPen, FaHighlighter } from 'react-icons/fa'\n\nimport api from '../../services/api'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   Title,\n   QuestionsContainer,\n   QuestionContent,\n   TextHeader,\n   QuestionStatement,\n   AlternativesList,\n   QuestionsInfoContainer,\n} from './modal_styles'\n\nexport default class ModalQuestion extends Component {\n   state = {\n      loading: true,\n      question: {},\n   }\n\n   componentDidMount() {\n      this.setState({ question: this.props.question, loading: false })\n   }\n\n   render() {\n      const { loading, question } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <Container>\n            <Title>\n               <FaPen size={24} />\n               <span>Detalhes da Questão</span>\n            </Title>\n            <QuestionsContainer>\n               <TextHeader>\n                  <FaHighlighter size={18} />\n                  <span>\n                     ({question.exam}/{question.year}) / Questão{' '}\n                     {question.number}\n                  </span>\n               </TextHeader>\n               <QuestionContent>\n                  <QuestionStatement\n                     dangerouslySetInnerHTML={{\n                        __html: question.statement,\n                     }}\n                  />\n                  <AlternativesList>\n                     {question.alternatives.map(alternative => (\n                        <li key={alternative.letter}>\n                           <strong>{alternative.letter})</strong>\n                           <span\n                              dangerouslySetInnerHTML={{\n                                 __html: alternative.content,\n                              }}\n                           />\n                        </li>\n                     ))}\n                  </AlternativesList>\n                  <QuestionsInfoContainer>\n                     <div>\n                        <span>Gabarito da questão</span>\n                        <p>Opção {question.answer}</p>\n                     </div>\n                     <div>\n                        <span>Área da questão</span>\n                        <p>{question.area}</p>\n                     </div>\n                  </QuestionsInfoContainer>\n               </QuestionContent>\n            </QuestionsContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\nimport Modal from 'react-modal'\n\nexport const QuestionModal = styled(Modal)`\n   width: 100%;\n   padding: 50px 0;\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n\n   > strong {\n      font-size: 32px;\n      margin-bottom: 15px;\n   }\n\n   > button {\n      margin: 0 120px 0 auto;\n      border: 0;\n\n      @media (max-width: 1090px) {\n         margin: 0 80px 0 auto;\n      }\n   }\n`\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   background: #254979;\n   color: #ffffff;\n   padding: 12px 15px;\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   div {\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      font-size: 16px;\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   flex-direction: row-reverse;\n`\n\nexport const AddQuestionButton = styled.button`\n   margin-left: 15px;\n   display: flex;\n   padding: 7px 20px;\n   background: #254979;\n   color: #ffffff;\n   border: 1px solid #c4c4c4;\n   border-radius: 4px;\n\n   transition: background 0.25s;\n   &:hover {\n      cursor: pointer;\n      background: ${() => darken(0.1, '#254979')};\n   }\n\n   svg {\n      margin-right: 7px;\n   }\n`\n\nexport const AdminContainer = styled.div`\n   background: #ffffff;\n   border: 1px solid #254979;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   display: flex;\n   flex-direction: column;\n   margin-bottom: 25px;\n\n   > div {\n      display: flex;\n      padding: 0 10px;\n   }\n\n   > header {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      border-top: 1px solid #cccccc;\n      border-bottom: 1px solid #cccccc;\n      padding: 10px 15px;\n\n      div + & {\n         margin-top: 10px;\n      }\n\n      > button {\n         display: flex;\n         padding: 5px 20px;\n         background: #ffffff;\n         border: 1px solid #254979;\n         border-radius: 4px;\n\n         transition: background 0.35s, color 0.35s;\n         &:hover {\n            cursor: pointer;\n            background: #254979;\n            color: #ffffff;\n         }\n\n         svg {\n            margin-right: 7px;\n         }\n      }\n   }\n`\n\nexport const LabelContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n   flex: 1;\n   margin: 5px;\n`\n\nexport const NumberInput = styled.input.attrs({\n   type: 'number',\n   min: 1,\n   max: 70,\n})`\n   height: 36px;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   padding: 0 15px;\n`\n\nexport const InputStatementList = styled.div`\n   flex: 1;\n   display: flex;\n   margin-top: 10px;\n   flex-direction: column;\n`\n\nexport const InputStatementItem = styled.div`\n   flex: 1;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: space-between;\n   padding: 0 5px 10px;\n   border-bottom: 1px solid #444444;\n\n   & + div {\n      margin-top: 10px;\n   }\n\n   &:last-child {\n      border-bottom: 0;\n      padding: 0 5px;\n   }\n\n   > div {\n      min-width: 100%;\n   }\n`\n\nexport const StatementInput = styled.textarea.attrs({})`\n   resize: vertical;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   min-width: 100%;\n   margin: 10px 10px 0;\n   padding: 10px;\n   font-size: 14px;\n`\n\nexport const AlternativesList = styled.div`\n   flex: 1;\n\n   > div {\n      display: flex;\n      align-items: flex-start;\n      margin: 10px auto;\n\n      strong {\n         margin-top: 5px;\n      }\n   }\n`\n\nexport const AlternativeInput = styled.textarea`\n   flex: 1;\n   resize: vertical;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   font-size: 14px;\n   padding: 5px;\n   margin-left: 10px;\n`\n","import React, { Component } from 'react'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\nimport {\n   FaSearch,\n   FaPlus,\n   FaPencilAlt,\n   FaUserCog,\n   FaWindowClose,\n} from 'react-icons/fa'\n\nimport Modal from 'react-modal'\nimport ModalQuestion from './modal'\n\nimport api from '../../services/api'\n\nimport {\n   Container,\n   QuestionModal,\n   Title,\n   TextHeader,\n   ButtonsContainer,\n   AddQuestionButton,\n   AdminContainer,\n   LabelContainer,\n   NumberInput,\n   InputStatementList,\n   InputStatementItem,\n   StatementInput,\n   AlternativesList,\n   AlternativeInput,\n} from './styles'\n\nconst exam_options = [\n   { value: 'poscomp', label: 'POSCOMP', index: 0 },\n   { value: 'enade', label: 'ENADE', index: 1 },\n]\n\nconst year_options = [\n   { value: '2004', label: '2004' },\n   { value: '2005', label: '2005' },\n   { value: '2006', label: '2006' },\n   { value: '2007', label: '2007' },\n   { value: '2008', label: '2008' },\n   { value: '2009', label: '2009' },\n   { value: '2010', label: '2010' },\n   { value: '2011', label: '2011' },\n   { value: '2012', label: '2012' },\n   { value: '2013', label: '2013' },\n   { value: '2014', label: '2014' },\n   { value: '2015', label: '2015' },\n   { value: '2016', label: '2016' },\n   { value: '2017', label: '2017' },\n   { value: '2018', label: '2018' },\n   { value: '2019', label: '2019' },\n]\n\nconst answer_options = [\n   { value: 'A', label: 'A' },\n   { value: 'B', label: 'B' },\n   { value: 'C', label: 'C' },\n   { value: 'D', label: 'D' },\n   { value: 'E', label: 'E' },\n]\n\nconst areas_options = [\n   [\n      { value: '1', label: 'Matemática' },\n      { value: '2', label: 'Fundamentos de Computação' },\n      { value: '3', label: 'Tecnologia da Computação' },\n   ],\n]\n\nconst type_options = [\n   { value: 1, label: 'Normal' },\n   { value: 2, label: 'Center' },\n   { value: 3, label: 'Image' },\n   { value: 4, label: 'Code' },\n]\n\nModal.setAppElement('#root')\n\nexport default class Admin extends Component {\n   state = {\n      question: {},\n      show_modal: false,\n      exam_input: {},\n      question_input: 1,\n      year_input: {},\n      answer_input: {},\n      area_input: {},\n      statement_input: [{ id: 0, type: 1, content: '' }],\n      alternatives_input: [\n         { letter: 'A', content: '' },\n         { letter: 'B', content: '' },\n         { letter: 'C', content: '' },\n         { letter: 'D', content: '' },\n         { letter: 'E', content: '' },\n      ],\n   }\n\n   componentDidMount() {\n      const {\n         exam_input,\n         question_input,\n         year_input,\n         answer_input,\n         area_input,\n         statement_input,\n         alternatives_input,\n      } = this.state\n\n      this.setState({\n         question: {\n            exam: exam_input.label,\n            number: question_input,\n            year: year_input.value,\n            answer: answer_input.value,\n            area: area_input.label,\n            statement: statement_input,\n            alternatives: alternatives_input,\n         },\n      })\n   }\n\n   handleChangeExamInput = option => {\n      this.setState({\n         exam_input: option,\n         area_input: {},\n      })\n   }\n\n   handleChangeQuestionNumber = event => {\n      this.setState({ question_input: event.target.value })\n   }\n\n   handleChangeYearInput = option => {\n      this.setState({ year_input: option })\n   }\n\n   handleChangeAnswerInput = option => {\n      this.setState({ answer_input: option })\n   }\n\n   handleChangeAreaInput = option => {\n      this.setState({ area_input: option })\n   }\n\n   handleAddStatement = event => {\n      const { statement_input } = this.state\n\n      this.setState({\n         statement_input: [\n            ...statement_input,\n            { id: statement_input.length, type: 1, content: '' },\n         ],\n      })\n   }\n\n   handleTypeInputChange = (option, id) => {\n      const { statement_input } = this.state\n\n      const index = statement_input.findIndex(s => s.id === id)\n      statement_input[index].type = option.value\n\n      this.setState({ statement_input })\n   }\n\n   handleContentInputChange = (event, id) => {\n      const { statement_input } = this.state\n\n      const index = statement_input.findIndex(s => s.id === id)\n\n      statement_input[index].content = event.target.value\n\n      this.setState({ statement_input })\n   }\n\n   handleAlternativesInputChange = (event, letter) => {\n      const { alternatives_input } = this.state\n\n      const index = alternatives_input.findIndex(a => a.letter === letter)\n      alternatives_input[index].content = event.target.value\n\n      this.setState({ alternatives_input })\n   }\n\n   isStatementEmpty = statement => {\n      return statement.filter(s => s.content === '').length > 0\n   }\n\n   isAlternativesEmpty = alternatives => {\n      return alternatives.filter(a => a.content === '').length > 0\n   }\n\n   handleAddQuestion = async () => {\n      const {\n         exam_input,\n         question_input,\n         year_input,\n         answer_input,\n         area_input,\n         statement_input,\n         alternatives_input,\n      } = this.state\n\n      if (Object.keys(exam_input).length === 0) {\n         toast.error('Selecione uma PROVA')\n         return\n      }\n\n      if (Object.keys(year_input).length === 0) {\n         toast.error('Preencha o ANO da questão')\n         return\n      }\n\n      if (Object.keys(answer_input).length === 0) {\n         toast.error('Preencha o GABARITO da questão')\n         return\n      }\n\n      if (Object.keys(area_input).length === 0) {\n         toast.error('Preencha a ÁREA da questão')\n         return\n      }\n\n      if (this.isStatementEmpty(statement_input)) {\n         toast.error('Preencha todos os ENUNCIADOS')\n         return\n      }\n\n      if (this.isAlternativesEmpty(alternatives_input)) {\n         toast.error('Preencha todas as ALTERNATIVAS')\n         return\n      }\n\n      const response = await api.post('/questions', {\n         exam: exam_input.value,\n         alternatives: alternatives_input,\n         answer: answer_input.value,\n         area: area_input.value,\n         justification: 'Justificativa',\n         number: question_input,\n         statement: statement_input,\n         year: year_input.value,\n      })\n\n      console.log(response)\n\n      toast.success('Questão adicionada com sucesso')\n      this.setState({\n         exam_input: {},\n         question_input: 1,\n         year_input: {},\n         answer_input: {},\n         area_input: {},\n         statement_input: [{ id: 0, type: 1, content: '' }],\n         alternatives_input: [\n            { letter: 'A', content: '' },\n            { letter: 'B', content: '' },\n            { letter: 'C', content: '' },\n            { letter: 'D', content: '' },\n            { letter: 'E', content: '' },\n         ],\n      })\n   }\n\n   handleOpenModal = () => {\n      const {\n         exam_input,\n         question_input,\n         year_input,\n         answer_input,\n         area_input,\n         statement_input,\n         alternatives_input,\n      } = this.state\n\n      var statement_string = ''\n      for (const s of statement_input) {\n         var aux = ''\n         switch (s.type) {\n            // Normal\n            case 1:\n               aux = `<p>${s.content}</p>`\n               break\n            // Center\n            case 2:\n               aux = `<center>${s.content}</center>`\n               break\n            // Image\n            case 3:\n               aux = `<center><img style=\"width: 35%\" src=\"${s.content}\" /></center>`\n               break\n            // Code\n            case 4:\n               aux = `<p><code><pre>${s.content}</pre></code></p>`\n               break\n         }\n         statement_string += aux\n      }\n\n      this.setState({\n         question: {\n            exam: exam_input.label,\n            number: question_input,\n            year: year_input.value,\n            answer: answer_input.value,\n            area: area_input.label,\n            statement: statement_string,\n            alternatives: alternatives_input,\n         },\n         show_modal: true,\n      })\n   }\n\n   handleCloseModal = () => {\n      this.setState({ show_modal: false })\n   }\n\n   render() {\n      const {\n         question,\n         show_modal,\n         exam_input,\n         question_input,\n         year_input,\n         answer_input,\n         area_input,\n         statement_input,\n         alternatives_input,\n      } = this.state\n\n      return (\n         <Container>\n            <QuestionModal\n               isOpen={show_modal}\n               contentLabel=\"Minimal Modal Example\"\n            >\n               <button onClick={this.handleCloseModal}>\n                  <FaWindowClose size={36} />\n               </button>\n               <strong>Preview</strong>\n               <ModalQuestion question={question} />\n            </QuestionModal>\n            <Title>\n               <FaUserCog size={24} />\n               <span>Admin</span>\n            </Title>\n            <TextHeader>\n               <div>\n                  <FaPencilAlt size={18} />\n                  <span>Adicionar Questão</span>\n               </div>\n               <ButtonsContainer>\n                  <AddQuestionButton onClick={this.handleAddQuestion}>\n                     <FaPlus />\n                     Adicionar\n                  </AddQuestionButton>\n                  <AddQuestionButton onClick={this.handleOpenModal}>\n                     <FaSearch />\n                     Preview\n                  </AddQuestionButton>\n               </ButtonsContainer>\n            </TextHeader>\n            <AdminContainer>\n               <header>\n                  <strong>Descrição da Questão</strong>\n               </header>\n               <div>\n                  <LabelContainer>\n                     <span>Prova</span>\n                     <Select\n                        isSearchable={false}\n                        isClearable={false}\n                        value={exam_input}\n                        options={exam_options}\n                        onChange={this.handleChangeExamInput}\n                     />\n                  </LabelContainer>\n               </div>\n               <div>\n                  <LabelContainer>\n                     <span>Questão</span>\n                     <NumberInput\n                        value={question_input}\n                        onChange={this.handleChangeQuestionNumber}\n                     />\n                  </LabelContainer>\n                  <LabelContainer>\n                     <span>Ano</span>\n                     <Select\n                        isSearchable={false}\n                        isClearable\n                        value={year_input}\n                        options={year_options}\n                        onChange={this.handleChangeYearInput}\n                     />\n                  </LabelContainer>\n               </div>\n               <div>\n                  <LabelContainer>\n                     <span>Gabarito</span>\n                     <Select\n                        isSearchable={false}\n                        isClearable\n                        value={answer_input}\n                        options={answer_options}\n                        onChange={this.handleChangeAnswerInput}\n                     />\n                  </LabelContainer>\n                  <LabelContainer>\n                     <span>Area</span>\n                     <Select\n                        isSearchable={false}\n                        isClearable\n                        value={area_input}\n                        options={areas_options[exam_input.index]}\n                        onChange={this.handleChangeAreaInput}\n                     />\n                  </LabelContainer>\n               </div>\n               <header>\n                  <strong>Enunciado da Questão</strong>\n                  <button onClick={this.handleAddStatement}>\n                     <FaPlus />\n                     Enunciado\n                  </button>\n               </header>\n               <div>\n                  <InputStatementList>\n                     {statement_input.map(s => (\n                        <InputStatementItem key={s.id}>\n                           <Select\n                              isSearchable={false}\n                              isClearable\n                              options={type_options}\n                              defaultValue={type_options[0]}\n                              onChange={option =>\n                                 this.handleTypeInputChange(option, s.id)\n                              }\n                           />\n                           <StatementInput\n                              value={s.content}\n                              onChange={event =>\n                                 this.handleContentInputChange(event, s.id)\n                              }\n                           />\n                        </InputStatementItem>\n                     ))}\n                  </InputStatementList>\n               </div>\n               <header>\n                  <strong>Alternativas da Questão</strong>\n               </header>\n               <div>\n                  <AlternativesList>\n                     {alternatives_input.map((a, id) => (\n                        <div key={a.letter}>\n                           <strong>{a.letter}) </strong>\n                           <AlternativeInput\n                              value={a.content}\n                              onChange={event =>\n                                 this.handleAlternativesInputChange(\n                                    event,\n                                    a.letter\n                                 )\n                              }\n                           />\n                        </div>\n                     ))}\n                  </AlternativesList>\n               </div>\n            </AdminContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const QuestionsContainer = styled.div``\n\nexport const QuestionContent = styled.div`\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   margin-bottom: 15px;\n   padding-bottom: 15px;\n   padding-top: 7px;\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 0 20px;\n   margin: 0 15px 20px;\n\n   border-bottom: 1px solid #e0e1e2;\n\n   li {\n      margin-top: 10px;\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const QuestionsInfoContainer = styled.div`\n   padding: 0 15px;\n\n   > div {\n      & + div {\n         margin-top: 15px;\n      }\n\n      span {\n         font-size: 18px;\n      }\n\n      p {\n         font-size: 16px;\n         margin-top: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport { FaPen, FaHighlighter } from 'react-icons/fa'\n\nimport api from '../../services/api'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   Title,\n   QuestionsContainer,\n   QuestionContent,\n   TextHeader,\n   QuestionStatement,\n   AlternativesList,\n   QuestionsInfoContainer,\n} from './styles'\n\nexport default class Question extends Component {\n   state = {\n      loading: true,\n      question: {},\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      const response = await api.get(`/questions/${id}`)\n      console.log(response.data)\n\n      this.setState({ loading: false, question: response.data })\n   }\n\n   render() {\n      const { loading, question } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <Container>\n            <Title>\n               <FaPen size={24} />\n               <span>Detalhes da Questão</span>\n            </Title>\n            <QuestionsContainer>\n               <TextHeader>\n                  <FaHighlighter size={18} />\n                  <span>\n                     ({question.exam}/{question.year}) / Questão{' '}\n                     {question.number}\n                  </span>\n               </TextHeader>\n               <QuestionContent>\n                  <QuestionStatement\n                     dangerouslySetInnerHTML={{\n                        __html: question.statement,\n                     }}\n                  />\n                  <AlternativesList>\n                     {question.alternatives.map(alternative => (\n                        <li key={alternative.letter}>\n                           <strong>{alternative.letter})</strong>\n                           <span\n                              dangerouslySetInnerHTML={{\n                                 __html: alternative.content,\n                              }}\n                           />\n                        </li>\n                     ))}\n                  </AlternativesList>\n                  <QuestionsInfoContainer>\n                     <div>\n                        <span>Gabarito da questão</span>\n                        <p>Opção {question.answer}</p>\n                     </div>\n                     <div>\n                        <span>Comentário da questão</span>\n                        <p>{question.justification}</p>\n                     </div>\n                  </QuestionsInfoContainer>\n               </QuestionContent>\n            </QuestionsContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   div {\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      font-size: 16px;\n   }\n`\n\nexport const PraticeContainer = styled.div`\n   border: 1px solid #254979;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   padding: 10px 0;\n   margin-bottom: 10px;\n`\n\nexport const HeaderContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   padding: 0 15px;\n\n   @media (max-width: 768px) {\n      flex-direction: column-reverse;\n      align-items: flex-start;\n   }\n`\n\nexport const AnswerList = styled.ul`\n   flex: 2 1;\n   list-style: none;\n   display: flex;\n\n   margin-block-start: 0;\n   margin-block-end: 0;\n   margin-inline-start: 0;\n   margin-inline-end: 0;\n   padding-inline-start: 0;\n\n   @media (max-width: 768px) {\n      margin-top: 10px;\n   }\n\n   li {\n      border: 1px solid #0e0e0e;\n      border-radius: 4px;\n      margin-right: 10px;\n      padding: 5px;\n\n      > span {\n         margin-right: 5px;\n      }\n\n      > strong {\n         background: #254979;\n         color: #ffffff;\n         padding: 1px 6px 2px 5px;\n         border-radius: 2px;\n         text-align: center;\n      }\n   }\n`\n\nexport const OptionButtonsContainer = styled.div`\n   flex: 1 1;\n   display: flex;\n   flex-direction: row-reverse;\n`\n\nexport const EndPraticeButton = styled.button`\n   width: 150px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   height: 36px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   span {\n      margin-left: 7px;\n   }\n`\n\nexport const DownloadPDFButton = styled.button`\n   width: 150px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   height: 36px;\n   background: #ff2116;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n   margin-right: 10px;\n\n   span {\n      margin-left: 7px;\n   }\n`\n\nexport const ControlsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   padding: 0 10px;\n   margin-top: 20px;\n`\n\nexport const Control = styled.div`\n   display: flex;\n   align-items: center;\n\n   &:hover {\n      cursor: pointer;\n   }\n\n   svg {\n      margin: 5px;\n   }\n`\nexport const QuestionHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   border-top: 1px solid #c9c9c9;\n   border-bottom: 1px solid #c9c9c9;\n   padding: 15px;\n   margin-top: 15px;\n   margin-bottom: 15px;\n\n   strong {\n      font-size: 16px;\n\n      span {\n         text-align: center;\n         border-radius: 50%;\n         border: 1px solid #254979;\n         padding: 5px 7px;\n         margin-right: 8px;\n      }\n   }\n\n   > span {\n      color: #75797d;\n      font-size: 12px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 15px;\n\n   li {\n      margin-top: 20px;\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const AnswerContainer = styled.div`\n   margin: 20px 15px 5px;\n\n   p {\n      margin-bottom: 5px;\n   }\n`\n\nexport const AnswerContent = styled.div`\n   display: flex;\n   justify-content: space-around;\n   padding: 10px;\n   border: 1px solid #c9c9c9;\n   border-radius: 4px;\n\n   @media (max-width: 1090px) {\n      justify-content: space-between;\n   }\n\n   @media (max-width: 768px) {\n   }\n`\n\nexport const AnswerButton = styled.button`\n   background: ${props => (props.selected ? '#E8EAED' : '#254979')};\n   color: ${props => (props.selected ? '#254979' : '#FFFFFF')};\n   border: 1px solid ${props => (props.selected ? '#254979' : '#E8EAED')};\n   border-radius: 50%;\n   padding: 14px 18px;\n   font-weight: bold;\n   font-size: 16px;\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${props =>\n         props.selected ? darken(0.1, '#E8EAED') : darken(0.1, '#254979')};\n   }\n`\n","import React, { Component } from 'react'\n\nimport {\n   FaRegFileAlt,\n   FaFilter,\n   FaRegFilePdf,\n   FaHourglassEnd,\n   FaArrowLeft,\n   FaArrowRight,\n} from 'react-icons/fa'\nimport { toast } from 'react-toastify'\n\nimport history from '../../services/history'\nimport api from '../../services/api'\n\nimport {\n   Container,\n   Title,\n   TextHeader,\n   PraticeContainer,\n   HeaderContainer,\n   AnswerList,\n   OptionButtonsContainer,\n   EndPraticeButton,\n   DownloadPDFButton,\n   ControlsContainer,\n   Control,\n   QuestionHeader,\n   QuestionStatement,\n   AlternativesList,\n   AnswerContainer,\n   AnswerContent,\n   AnswerButton,\n} from './styles'\n\nexport default class Pratice extends Component {\n   state = {\n      id: 0,\n      questions: [],\n      id_current_question: 0,\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      const { data } = await api.get(`/pratice/${id}`)\n\n      const questions = data.questions.map((question, index) => ({\n         ...question,\n         pratice_number: ('0' + (index + 1)).slice(-2),\n         user_answer: '-',\n         alternatives: question.alternatives.reverse(),\n      }))\n\n      this.setState({\n         id: data.id,\n         questions,\n      })\n   }\n\n   handleEndPratice = async questions => {\n      const { id } = this.state\n\n      await localStorage.setItem(\n         '@simulado/resultado',\n         JSON.stringify({\n            id,\n            results: questions.map(q => ({\n               number: q.pratice_number,\n               user_answer: q.user_answer,\n               answer: q.answer,\n            })),\n         })\n      )\n\n      history.push({\n         pathname: `/simulados/${id}/resultado`,\n      })\n   }\n\n   handleDownloadPDF = () => {\n      const { id } = this.state\n\n      // history.push(`/pdf/${id}`)\n   }\n\n   handleChangeQuestion = value => {\n      const { questions, id_current_question } = this.state\n      const new_question = id_current_question + value\n\n      if (new_question >= 0 && new_question < questions.length) {\n         this.setState({ id_current_question: new_question })\n      }\n   }\n\n   handleSelectAnswer = (id, letter) => {\n      const { questions } = this.state\n\n      questions[Number(id) - 1].user_answer = letter\n\n      this.setState({ questions })\n   }\n\n   render() {\n      const { id, questions, id_current_question } = this.state\n\n      const current_question = questions[id_current_question]\n\n      if (questions.length === 0) {\n         return <h1>Loading</h1>\n      }\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <TextHeader>\n               <div>\n                  <FaFilter size={18} />\n                  <span>Resolver Simulado</span>\n               </div>\n               <span>Código: #{id}</span>\n            </TextHeader>\n            <PraticeContainer>\n               <HeaderContainer>\n                  <AnswerList>\n                     {questions.map((question, index) => (\n                        <li key={index}>\n                           <span>{question.pratice_number}</span>\n                           <strong>{question.user_answer}</strong>\n                        </li>\n                     ))}\n                  </AnswerList>\n                  <OptionButtonsContainer>\n                     <EndPraticeButton\n                        onClick={() => this.handleEndPratice(questions)}\n                     >\n                        <FaHourglassEnd />\n                        <span>Finalizar</span>\n                     </EndPraticeButton>\n                     <DownloadPDFButton onClick={this.handleDownloadPDF}>\n                        <FaRegFilePdf />\n                        <span>Download PDF</span>\n                     </DownloadPDFButton>\n                  </OptionButtonsContainer>\n               </HeaderContainer>\n               <ControlsContainer>\n                  <Control onClick={() => this.handleChangeQuestion(-1)}>\n                     <FaArrowLeft size={14} />\n                     <span>Anterior</span>\n                  </Control>\n                  {/* <p>Questão {current_question.pratice_number}</p> */}\n                  <Control onClick={() => this.handleChangeQuestion(1)}>\n                     <span>Próxima</span>\n                     <FaArrowRight size={14} />\n                  </Control>\n               </ControlsContainer>\n               <QuestionHeader>\n                  <strong>\n                     <span>{current_question.pratice_number}</span>\n                     (POSCOMP/{current_question.year} - Questão{' '}\n                     {current_question.number})\n                  </strong>\n                  <span>#{current_question.id}</span>\n               </QuestionHeader>\n               <QuestionStatement\n                  dangerouslySetInnerHTML={{\n                     __html: current_question.statement,\n                  }}\n               />\n               <AlternativesList>\n                  {current_question.alternatives.map(alternative => (\n                     <li key={alternative.letter}>\n                        <strong>{alternative.letter})</strong>\n                        <span\n                           dangerouslySetInnerHTML={{\n                              __html: alternative.content,\n                           }}\n                        />\n                     </li>\n                  ))}\n               </AlternativesList>\n               <AnswerContainer>\n                  <p>Escolha sua resposta</p>\n                  <AnswerContent>\n                     {current_question.alternatives.map(alternative => (\n                        <AnswerButton\n                           selected={\n                              alternative.letter ===\n                              current_question.user_answer\n                           }\n                           key={alternative.letter}\n                           onClick={() =>\n                              this.handleSelectAnswer(\n                                 current_question.pratice_number,\n                                 alternative.letter\n                              )\n                           }\n                        >\n                           {alternative.letter}\n                        </AnswerButton>\n                     ))}\n                  </AnswerContent>\n               </AnswerContainer>\n            </PraticeContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const FormContainer = styled.div``\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const Form = styled.form`\n   padding: 0 15px 15px;\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n\n   p {\n      margin-top: 15px;\n      margin-bottom: 7px;\n   }\n`\n\nexport const AreasContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   div {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      & + div {\n         margin-top: 10px;\n      }\n\n      > label {\n         flex: 3 1;\n\n         span {\n            margin-left: 10px;\n         }\n      }\n\n      > div {\n         flex: 1 1;\n\n         input {\n            flex: 1;\n            border: 1px solid #cccccc;\n            border-radius: 4px;\n            height: 28px;\n            margin-left: 7px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   flex-direction: row-reverse;\n   margin-top: 25px;\n`\n\nexport const SubmitButton = styled.button.attrs({\n   type: 'submit',\n})`\n   height: 38px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   padding: 0 25px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   @media (max-width: 768px) {\n      flex: 1;\n   }\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#254979')};\n   }\n`\n\nexport const ClearButton = styled.button`\n   height: 38px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin-right: 10px;\n   padding: 0 25px;\n   background: #ffffff;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n\n   @media (max-width: 768px) {\n      flex: 1;\n   }\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#ffffff')};\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaRegFileAlt,\n   FaHighlighter,\n   FaThumbtack,\n   FaFilter,\n   FaSearch,\n   FaTrashAlt,\n} from 'react-icons/fa'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\n\nimport api from '../../services/api'\nimport history from '../../services/history'\n\nimport {\n   Container,\n   Title,\n   FormContainer,\n   TextHeader,\n   Form,\n   AreasContainer,\n   ButtonsContainer,\n   SubmitButton,\n   ClearButton,\n} from './styles'\n\nexport default class Pratice extends Component {\n   state = {\n      exam_selected: [],\n      exams: [\n         { value: 'poscomp', label: 'POSCOMP' },\n         { value: 'enade', label: 'ENADE' },\n      ],\n      areas_selected: [],\n      exam_areas: [],\n      poscomp_areas: [\n         { value: '1', label: 'Matemática' },\n         { value: '2', label: 'Fundamentos de Computação' },\n         { value: '3', label: 'Tecnologia da Computação' },\n      ],\n      enade_areas: [],\n      questions: [],\n   }\n\n   handleChangeExam = event => {\n      const { exam_selected, poscomp_areas, enade_areas } = this.state\n\n      if (exam_selected !== event) {\n         var exam_areas =\n            event.value === 'poscomp' ? poscomp_areas : enade_areas\n         exam_areas.forEach(area => {\n            area.is_selected = false\n            area.amount = 0\n         })\n\n         this.setState({\n            exam_selected: event,\n            areas_selected: [],\n            exam_areas,\n         })\n      }\n   }\n\n   handleSelectArea = index => {\n      var { exam_areas } = this.state\n\n      exam_areas[index].is_selected = !exam_areas[index].is_selected\n      exam_areas[index].amount = exam_areas[index].is_selected ? 1 : 0\n\n      this.setState({ exam_areas })\n   }\n\n   handleChangeAreaAmount = (event, index) => {\n      var { exam_areas } = this.state\n\n      exam_areas[index].amount = event.target.value\n\n      this.setState({ exam_areas })\n   }\n\n   verifySelectedAreas = areas => {\n      const selected_areas = areas.filter(area => area.is_selected)\n\n      if (selected_areas.length === 0) {\n         return false\n      }\n\n      return selected_areas.filter(area => area.amount > 0).length !== 0\n   }\n\n   handleSubmitForm = async event => {\n      event.preventDefault()\n\n      const { exam_selected, exam_areas } = this.state\n\n      if (Object.keys(exam_selected).length === 0) {\n         toast.error('Selecione um concurso')\n         return\n      }\n\n      if (!this.verifySelectedAreas(exam_areas)) {\n         toast.error('Selecione ao menos uma questão')\n         return\n      }\n\n      const areas_aux = exam_areas.filter(area => area.amount > 0)\n\n      const response = await api.post('/pratice', {\n         exam: exam_selected.value,\n         areas: areas_aux.map(area => ({\n            id: area.value,\n            amount: area.amount,\n         })),\n      })\n\n      console.log(`Redirect to /simulados/${response.data.id}`)\n\n      history.push(`/simulados/${response.data.id}`)\n   }\n\n   handleClearForm = event => {\n      event.preventDefault()\n\n      this.setState({\n         exam_selected: {},\n         exam_areas: [],\n      })\n   }\n\n   render() {\n      const { exam_selected, exams, exam_areas } = this.state\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <FormContainer>\n               <TextHeader>\n                  <FaFilter size={18} />\n                  <span>Gerador</span>\n               </TextHeader>\n               <Form>\n                  <p>Concurso</p>\n                  <Select\n                     isSearchable={false}\n                     isClearable\n                     value={exam_selected}\n                     options={exams}\n                     onChange={this.handleChangeExam}\n                  />\n                  <p>Áreas</p>\n                  <AreasContainer>\n                     {exam_areas.map((area, index) => (\n                        <div key={area.value}>\n                           <label>\n                              <input\n                                 type=\"checkbox\"\n                                 checked={area.is_selected}\n                                 onChange={() => this.handleSelectArea(index)}\n                              />\n                              <span>{area.label}</span>\n                           </label>\n                           <div>\n                              <span>Quantidade:</span>\n                              <input\n                                 type=\"number\"\n                                 min={1}\n                                 max={20}\n                                 disabled={!area.is_selected}\n                                 value={area.amount}\n                                 onChange={event =>\n                                    this.handleChangeAreaAmount(event, index)\n                                 }\n                              />\n                           </div>\n                        </div>\n                     ))}\n                  </AreasContainer>\n                  <ButtonsContainer>\n                     <SubmitButton onClick={this.handleSubmitForm}>\n                        <FaSearch size={16} />\n                        <span>Gerar</span>\n                     </SubmitButton>\n                     <ClearButton onClick={this.handleClearForm}>\n                        <FaTrashAlt size={16} />\n                        <span>Limpar</span>\n                     </ClearButton>\n                  </ButtonsContainer>\n               </Form>\n            </FormContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   div {\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      font-size: 16px;\n   }\n`\n\nexport const ResultContainer = styled.div`\n   background: #ffffff;\n   border: 1px solid #254979;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   padding: 10px 50px;\n\n   display: flex;\n   flex-direction: column;\n\n   @media (max-width: 768px) {\n      padding: 10px 0;\n   }\n`\n\nexport const ResultHeader = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-around;\n\n   border-bottom: 1px solid #c9c9c9;\n   padding-bottom: 10px;\n`\n\nexport const ResultList = styled.ul`\n   list-style: none;\n\n   li {\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      margin-top: 10px;\n      border-bottom: 1px solid #c9c9c9;\n      padding-bottom: 10px;\n   }\n`\n\nexport const StatisticsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px -5px 10px;\n   flex-wrap: wrap;\n   justify-content: center;\n\n   div {\n      flex: 1;\n      border: 1px solid #c9c9c9;\n      border-radius: 4px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 15px 0;\n      margin: 5px;\n\n      @media (max-width: 768px) {\n         flex: 0;\n         min-width: calc(50% - 15px);\n      }\n\n      strong {\n         font-size: 26px;\n      }\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   button {\n      width: 24%;\n      margin: 10px 5px;\n      padding: 10px;\n      border: 1px solid #c9c9c9;\n      border-radius: 4px;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      @media (max-width: 768px) {\n         flex: 1;\n      }\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#ffffff')};\n      }\n\n      span {\n         margin-left: 7px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaRegFileAlt,\n   FaPencilAlt,\n   FaUserTimes,\n   FaUserCheck,\n} from 'react-icons/fa'\nimport { MdRefresh } from 'react-icons/md'\n\nimport history from '../../services/history'\n\nimport {\n   Container,\n   Title,\n   TextHeader,\n   ResultContainer,\n   ResultHeader,\n   ResultList,\n   StatisticsContainer,\n   ButtonsContainer,\n} from './styles'\n\nexport default class PraticeResult extends Component {\n   state = {\n      id: 0,\n      results: [],\n      statistics: {},\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      const results = JSON.parse(\n         await localStorage.getItem('@simulado/resultado')\n      )\n\n      console.log(results)\n\n      if (results === null || results.id !== id) {\n         history.push({\n            pathname: `/simulados/${id}`,\n         })\n      }\n\n      const { results: questions_results } = results\n\n      const total_questions = questions_results.length\n      const total_corrects = questions_results.filter(\n         res => res.user_answer === res.answer\n      ).length\n\n      const statistics = {\n         // percent: Math.floor((total_corrects * 100) / total_questions),\n         percent: ((total_corrects / total_questions) * 100).toFixed(2) + '%',\n         corrects: total_corrects,\n         wrongs: total_questions - total_corrects,\n         total: total_questions,\n      }\n\n      this.setState({ id, results: questions_results, statistics })\n   }\n\n   handleNewPratice = () => {\n      history.push(`/simulados`)\n   }\n\n   handleRepeatPratice = () => {\n      const { id } = this.state\n\n      history.push(`/simulados/${id}`)\n   }\n\n   render() {\n      const { id, results, statistics } = this.state\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <TextHeader>\n               <div>\n                  <FaPencilAlt size={18} />\n                  <span>Resultados</span>\n               </div>\n               <span>Código: #{id}</span>\n            </TextHeader>\n            <ResultContainer>\n               <ResultHeader>\n                  <span>Questão</span>\n                  <span>Gabarito</span>\n                  <span>Resposta</span>\n                  <span>Acertou?</span>\n               </ResultHeader>\n               <ResultList>\n                  {results.map(question => (\n                     <li key={question.number}>\n                        <span>{question.number}</span>\n                        <span>{question.answer}</span>\n                        <span>{question.user_answer}</span>\n                        <span>\n                           {question.answer === question.user_answer ? (\n                              <FaUserCheck color=\"#0F0\" />\n                           ) : (\n                              <FaUserTimes color=\"#F00\" />\n                           )}\n                        </span>\n                     </li>\n                  ))}\n               </ResultList>\n               <StatisticsContainer>\n                  <div>\n                     <strong>{statistics.percent}</strong>\n                     <span>Acertos</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.total}</strong>\n                     <span>Questões</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.corrects}</strong>\n                     <span>Corretas</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.wrongs}</strong>\n                     <span>Erradas</span>\n                  </div>\n               </StatisticsContainer>\n               <ButtonsContainer>\n                  <button onClick={this.handleNewPratice}>\n                     <FaRegFileAlt size={14} />\n                     <span>Novo Simulado</span>\n                  </button>\n                  <button onClick={this.handleRepeatPratice}>\n                     <MdRefresh size={16} />\n                     <span>Repetir Simulado</span>\n                  </button>\n               </ButtonsContainer>\n            </ResultContainer>\n         </Container>\n      )\n   }\n}\n","import React, { Component } from 'react'\nimport Pdf from 'react-to-pdf'\n\nconst ref = React.createRef()\n\nexport default class PDF extends Component {\n   render() {\n      return (\n         <div>\n            <Pdf targetRef={ref} filename=\"code-example.pdf\">\n               {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\n            </Pdf>\n            <div ref={ref}>\n               <h1>Hello CodeSandbox</h1>\n               <h2>Start editing to see some magic happen!</h2>\n               <img src=\"https://latex.codecogs.com/svg.latex?\\frac{1}{2}\" />{' '}\n            </div>\n         </div>\n      )\n   }\n}\n\n// import React, { Component } from 'react'\n// import { Image } from '@react-pdf/renderer'\n// import XMLParser from 'react-xml-parser'\n// import {\n//    Viewer,\n//    PDFDocument,\n//    PDFPage,\n//    PDFView,\n//    PDFText,\n//    QuestionNumber,\n//    QuestionStatement,\n// } from './styles'\n\n// import api from '../../services/api'\n\n// export default class PDF extends Component {\n//    state = {\n//       loading: true,\n//       id: 0,\n//       questions: [],\n//    }\n\n//    async componentDidMount() {\n//       const { id } = this.props.match.params\n\n//       const { data } = await api.get(`/pratice/${id}`)\n\n//       var questions = data.questions.map((question, index) => ({\n//          ...question,\n//          pratice_number: ('0' + (index + 1)).slice(-2),\n//          user_answer: '-',\n//          alternatives: question.alternatives.reverse(),\n//       }))\n\n//       for (const question of questions) {\n//          const xml = new XMLParser().parseFromString(\n//             `<xml>${question.statement}</xml>`\n//          )\n\n//          var statement_to_pdf = []\n//          for (const child of xml.children) {\n//             switch (child.name) {\n//                case 'p':\n//                   statement_to_pdf.push({ type: 1, content: child.value })\n//                   break\n//                case 'center':\n//                   const aux_childs = child.children\n//                   for (const aux_child of aux_childs) {\n//                      if (aux_child.name === 'img') {\n//                         statement_to_pdf.push({\n//                            type: 2,\n//                            content: aux_child.attributes.src,\n//                         })\n//                      }\n//                   }\n//                   break\n//             }\n//          }\n\n//          question.pdf_state = statement_to_pdf\n//       }\n\n//       this.setState({\n//          id: data.id,\n//          questions,\n//          loading: false,\n//       })\n//    }\n\n//    render() {\n//       const { loading, questions } = this.state\n\n//       if (loading) {\n//          return <h1>Loading</h1>\n//       }\n\n//       return (\n//          <Viewer>\n//             <PDFDocument>\n//                <PDFPage size=\"A4\">\n//                   {questions.map(question => (\n//                      <PDFView key={question.id}>\n//                         <QuestionNumber>\n//                            {question.pratice_number}){' '}\n//                            {String(question.exam).toLocaleUpperCase()}/\n//                            {question.year}\n//                         </QuestionNumber>\n//                         <QuestionStatement>\n//                            {question.pdf_state.map(state =>\n//                               state.type === 1 ? (\n//                                  <PDFText>{state.content}</PDFText>\n//                               ) : (\n//                                  <Image src={state.content} />\n//                               )\n//                            )}\n//                         </QuestionStatement>\n//                      </PDFView>\n//                   ))}\n//                </PDFPage>\n//             </PDFDocument>\n//          </Viewer>\n//       )\n//    }\n// }\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Admin from './pages/Admin'\nimport Question from './pages/Question'\nimport Pratice from './pages/Pratice'\nimport SearchPratice from './pages/SearchPratice'\nimport PraticeResult from './pages/PraticeResult'\n\nimport PDF from './pages/PDF'\n\nexport default function Routes() {\n   return (\n      <Switch>\n         <Route path=\"/\" exact component={Home} />\n         <Route path=\"/admin\" component={Admin} />\n         <Route path=\"/questao/:id\" component={Question} />\n         <Route path=\"/simulados/:id/resultado\" component={PraticeResult} />\n         <Route path=\"/simulados/:id\" component={Pratice} />\n         <Route path=\"/simulados\" component={SearchPratice} />\n\n         <Route path=\"/pdf/:id\" component={PDF} />\n      </Switch>\n   )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n   * {\n      @import url('https://fonts.googleapis.com/css?family=Noto+Sans&display=swap');\n      font-family: 'Noto Sans', sans-serif;\n\n      margin: 0;\n      padding: 0;\n      outline: 0;\n      box-sizing: border-box;\n   }\n\n   body {\n      background: #E8EAED;\n      -webkit-font-smoothing: antialiased !important;\n      margin: 0;\n      padding: 0;\n   }\n\n   body, input, button {\n      font: 14px 'Noto Sans', sans-serif;\n   }\n\n   #root {\n      margin: 0 auto;\n      padding: 0;\n      min-height: calc(100vh);\n   }\n\n   button {\n      cursor: pointer;\n   }\n`\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport history from './services/history'\n\nimport Header from './components/Header'\nimport Routes from './routes'\nimport GlobalCSS from './styles/global'\n\nfunction App() {\n   return (\n      <>\n         <HashRouter history={history}>\n            <Header />\n            <Routes />\n            <GlobalCSS />\n            <ToastContainer autoClose={3000} />\n         </HashRouter>\n      </>\n   )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/logo_petcc.350d0aae.svg\";"],"sourceRoot":""}