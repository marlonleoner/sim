{"version":3,"sources":["assets/images/logo_petcc.svg","services/history.js","components/Header/styles.js","components/Header/index.js","services/api.js","pages/Home/styles.js","pages/Home/index.js","pages/Admin/styles.js","pages/Admin/index.js","components/Loading/styles.js","components/Loading/index.js","pages/Question/styles.js","pages/Question/index.js","pages/Pratice/styles.js","pages/Pratice/index.js","pages/SearchPratice/styles.js","pages/SearchPratice/index.js","pages/PraticeResult/styles.js","pages/PraticeResult/index.js","pages/PDF/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["module","exports","history","createHashHistory","HeaderContainer","styled","div","Links","Link","LinksContainer","LogoPET","img","LinkItem","darken","Header","to","src","Logo","api","axios","create","baseURL","Container","Title","FormContainer","TextHeader","Form","form","ButtonsContainer","SubmitButton","button","ClearButton","QuestionsContainer","QuestionsList","ul","QuestionHeader","QuestionStatement","AlternativesList","AnswerContainer","AnswerContent","AnswerCorrect","AnswerIncorrect","OptionsContainer","Home","state","exam_selected","exams","value","label","areas_selected","exam_areas","poscomp_areas","enade_areas","questions","handleChangeExam","event","setState","handleAddArea","option","handleSubmitButton","a","preventDefault","Object","keys","length","toast","error","get","response","data","handleClearForm","handleVerifyAnwser","question","user_answer","this","console","log","size","isSearchable","isClearable","options","onChange","isMulti","onClick","map","index","key","id","year","number","dangerouslySetInnerHTML","__html","statement","alternatives","alternative","letter","content","answer","Component","YearInput","input","attrs","type","min","max","StatementContainer","InputStatementContainer","PreviewStatementContainer","AddButton","InputStatementList","InputStatementItem","StatementInput","StatementPreviewList","placeholder","Statement","p","props","AlternativeItem","li","AlternativeContent","span","AddQuestionButton","exam_options","year_options","type_options","Admin","exam","year_input","question_number","handleExamInputChange","handleYearInputChange","handleQuestionNumberChange","target","handleAddStatement","handleStatementInputChange","findIndex","s","handleTypeInputChange","handleAlternativesInputChange","handleAddQuestion","String","Number","body","area","justification","post","status","success","rotate","keyframes","LoadingContainer","css","LoadingContent","AiOutlineLoading","color","Loading","QuestionContent","QuestionsInfoContainer","Question","loading","match","params","PraticeContainer","AnswerList","OptionButtonsContainer","EndPraticeButton","DownloadPDFButton","ControlsContainer","Control","AnswerButton","selected","Pratice","id_current_question","handleEndPratice","localStorage","setItem","JSON","stringify","results","q","pratice_number","push","pathname","handleDownloadPDF","handleChangeQuestion","new_question","handleSelectAnswer","slice","reverse","current_question","AreasContainer","forEach","is_selected","amount","handleSelectArea","handleChangeAreaAmount","verifySelectedAreas","areas","selected_areas","filter","handleSubmitForm","areas_aux","checked","disabled","ResultContainer","ResultHeader","ResultList","StatisticsContainer","PraticeResult","statistics","handleNewPratice","handleRepeatPratice","getItem","parse","questions_results","total_questions","total_corrects","res","percent","toFixed","corrects","wrongs","total","ref","React","createRef","PDF","targetRef","filename","toPdf","Routes","path","exact","component","SearchPratice","createGlobalStyle","App","autoClose","ReactDOM","render","document","getElementById"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,wC,gJCI5BC,EAFCC,c,oyCCET,IAAMC,EAAkBC,IAAOC,IAAV,KAefC,EAAQF,YAAOG,IAAPH,CAAH,KAELI,EAAiBJ,IAAOC,IAAV,KAMdI,EAAUL,IAAOM,IAAV,KAkBPC,GAdeP,YAAOG,IAAPH,CAAH,IAULQ,aAAQ,IAAM,YAIVR,IAAOC,IAAV,KASD,kBAAMO,YAAO,GAAK,eCpBvBC,EAtBA,kBACZ,kBAACV,EAAD,KACG,kBAACG,EAAD,CAAOQ,GAAG,KACP,kBAACL,EAAD,CAASM,IAAKC,OAEjB,kBAACR,EAAD,KACG,kBAACG,EAAD,KACG,kBAACL,EAAD,CAAOQ,GAAG,KACP,kBAAC,IAAD,MACA,0CAGN,kBAACH,EAAD,KACG,kBAACL,EAAD,CAAOQ,GAAG,cACP,kBAAC,IAAD,MACA,gD,wFCrBAG,E,OAJHC,EAAMC,OAAO,CACtBC,QAAS,0B,owLCAL,IAAMC,GAAYjB,IAAOC,IAAV,MAYTiB,GAAQlB,IAAOC,IAAV,MAaLkB,GAAgBnB,IAAOC,IAAV,MAEbmB,GAAapB,IAAOC,IAAV,MAgBVoB,GAAOrB,IAAOsB,KAAV,MAYJC,GAAmBvB,IAAOC,IAAV,KAMhBuB,GAAexB,IAAOyB,OAAV,KAgBL,kBAAMjB,YAAO,IAAM,cAI1BkB,GAAc1B,IAAOyB,OAAV,KAgBJ,kBAAMjB,YAAO,IAAM,cAI1BmB,GAAqB3B,IAAOC,IAAV,KAIlB2B,GAAgB5B,IAAO6B,GAAV,KAoBbC,GAAiB9B,IAAOC,IAAV,KA4Bd8B,GAAoB/B,IAAOC,IAAV,KAqBjB+B,GAAmBhC,IAAO6B,GAAV,KAWhBI,GAAkBjC,IAAOC,IAAV,KASfiC,GAAgBlC,IAAOC,IAAV,KAyBH,kBAAMO,YAAO,GAAK,cAK5B2B,GAAgBnC,IAAOC,IAAV,KAQH,kBAAMO,YAAO,IAAM,cAS7B4B,GAAkBpC,IAAOC,IAAV,KAQL,kBAAMO,YAAO,IAAM,cAS7B6B,GAAmBrC,IAAOC,IAAV,KA4BN,kBAAMO,YAAO,GAAK,cC5PpB8B,G,2MAClBC,MAAQ,CACLC,cAAe,GACfC,MAAO,CACJ,CAAEC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,QAASC,MAAO,UAE5BC,eAAgB,GAChBC,WAAY,GACZC,cAAe,CACZ,CAAEJ,MAAO,IAAKC,MAAO,aACrB,CAAED,MAAO,IAAKC,MAAO,aACrB,CAAED,MAAO,IAAKC,MAAO,aACrB,CAAED,MAAO,IAAKC,MAAO,aACrB,CAAED,MAAO,IAAKC,MAAO,cAExBI,YAAa,CACV,CAAEL,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,YAExBK,UAAW,I,EASdC,iBAAmB,SAAAC,GAAU,IAAD,EAC6B,EAAKX,MAAnDC,EADiB,EACjBA,cAAeM,EADE,EACFA,cAAeC,EADb,EACaA,YAElCP,IAAkBU,GACnB,EAAKC,SAAS,CACXX,cAAeU,EACfN,eAAgB,GAChBC,WAA4B,YAAhBK,EAAMR,MAAsBI,EAAgBC,K,EAKjEK,cAAgB,SAAAC,GACb,EAAKF,SAAS,CACXP,eAAgBS,K,EAItBC,mB,uCAAqB,WAAMJ,GAAN,iBAAAK,EAAA,yDAClBL,EAAMM,iBAEEhB,EAAkB,EAAKD,MAAvBC,cACkC,IAAtCiB,OAAOC,KAAKlB,GAAemB,OAJb,uBAKfC,IAAMC,MAAM,yBALG,0CASKhD,EAAIiD,IAAI,cATb,OASZC,EATY,OAWlB,EAAKZ,SAAS,CAAEH,UAAWe,EAASC,OAXlB,2C,wDAcrBC,gBAAkB,SAAAf,GACfA,EAAMM,iBAEN,EAAKL,SAAS,CACXX,cAAe,GACfI,eAAgB,M,EAItBsB,mBAAqB,SAACC,EAAUC,GAAiB,IACtCpB,EAAc,EAAKT,MAAnBS,UAERA,EAAUmB,GAAUC,YAAcA,EAElC,EAAKjB,SAAS,CAAEH,e,mNAnDOnC,EAAIiD,IAAI,c,OAAzBC,E,OAENM,KAAKlB,SAAS,CAAEH,UAAWe,EAASC,O,qIAoD7B,IAAD,SAOFK,KAAK9B,MALNC,EAFG,EAEHA,cACAC,EAHG,EAGHA,MACAG,EAJG,EAIHA,eACAC,EALG,EAKHA,WACAG,EANG,EAMHA,UAKH,OAFAsB,QAAQC,IAAIvB,GAGT,kBAAC/B,GAAD,KACG,kBAACC,GAAD,KACG,kBAAC,IAAD,CAAUsD,KAAM,KAChB,uDAEH,kBAACrD,GAAD,KACG,kBAACC,GAAD,KACG,kBAAC,IAAD,CAAUoD,KAAM,KAChB,0CAEH,kBAACnD,GAAD,KACG,uCACA,kBAAC,IAAD,CACGoD,cAAc,EACdC,aAAW,EACXhC,MAAOF,EACPmC,QAASlC,EACTmC,SAAUP,KAAKpB,mBAElB,sCACA,kBAAC,IAAD,CACG4B,SAAO,EACPJ,cAAc,EACdC,aAAW,EACXhC,MAAOE,EACP+B,QAAS9B,EACT+B,SAAUP,KAAKjB,gBAElB,kBAAC7B,GAAD,KACG,kBAACC,GAAD,CAAcsD,QAAST,KAAKf,oBACzB,kBAAC,IAAD,CAAUkB,KAAM,KAChB,yCAEH,kBAAC9C,GAAD,CAAaoD,QAAST,KAAKJ,iBACxB,kBAAC,IAAD,CAAYO,KAAM,KAClB,4CAKZ,kBAAC7C,GAAD,KACG,kBAACP,GAAD,KACG,kBAAC,IAAD,CAAeoD,KAAM,KACrB,8CAEH,kBAAC5C,GAAD,KACIoB,EAAU+B,KAAI,SAACZ,EAAUa,GAAX,OACZ,wBAAIC,IAAKd,EAASe,IACf,kBAACpD,GAAD,KACG,gCACG,mCADH,YAEaqC,EAASgB,KAFtB,gBAEsC,IAClChB,EAASiB,OAHb,KAKA,kCAAQjB,EAASe,KAEpB,kBAACnD,GAAD,CACGsD,wBAAyB,CACtBC,OAAQnB,EAASoB,aAGvB,kBAACvD,GAAD,KACImC,EAASqB,aAAaT,KAAI,SAAAU,GAAW,OACnC,wBAAIR,IAAKQ,EAAYC,QAClB,gCAASD,EAAYC,OAArB,KACA,0BACGL,wBAAyB,CACtBC,OAAQG,EAAYE,gBAMF,qBAAzBxB,EAASC,YACd,kBAACnC,GAAD,KACG,mDACA,kBAACC,GAAD,KACIiC,EAASqB,aAAaT,KAAI,SAAAU,GAAW,OACnC,4BACGR,IAAKQ,EAAYC,OACjBZ,QAAS,kBACN,EAAKZ,mBACFc,EACAS,EAAYC,UAIjBD,EAAYC,aAKxBvB,EAASC,cAAgBD,EAASyB,OACnC,kBAACzD,GAAD,KACG,kBAAC,IAAD,MACA,+EAC4C,IACxCgC,EAASC,cAIhB,kBAAChC,GAAD,KACG,kBAAC,IAAD,MACA,kEACkC+B,EAASyB,OAD3C,mBAEoBzB,EAASC,cAInC,kBAAC/B,GAAD,KACG,kBAAC,IAAD,CAAM3B,GAAE,IACL,kBAAC,IAAD,MACA,wDAEH,kBAAC,IAAD,CAAMA,GAAE,mBAAcyD,EAASe,KAC5B,kBAAC,IAAD,MACA,qE,GAjNIW,a,42GClC3B,IAAM5E,GAAYjB,IAAOC,IAAV,MAaT6F,GAAY9F,IAAO+F,MAAMC,MAAM,CACzCC,KAAM,SACNC,IAAK,EACLC,IAAK,IAHiBnG,CAAH,MAWToG,GAAqBpG,IAAOC,IAAV,MAKlBoG,GAA0BrG,IAAOC,IAAV,MAKvBqG,GAA4BtG,IAAOC,IAAV,MAKzBF,GAAkBC,IAAOC,IAAV,MAoBfsG,GAAYvG,IAAOyB,OAAV,KAOFjB,YAAO,GAAK,YAInBgG,GAAqBxG,IAAOC,IAAV,MAKlBwG,GAAqBzG,IAAOC,IAAV,MAoBlByG,GAAiB1G,IAAO+F,MAAV,MAWdY,IAPqB3G,IAAO+F,MAAMC,MAAM,CAClDC,KAAM,OACNW,YAAa,eAFkB5G,CAAH,MAOKA,IAAOC,IAAV,OAIpB4G,GAAY7G,IAAO8G,EAAV,MAML,SAAAC,GAAK,OAAoB,IAAfA,EAAMd,KAAa,QAAU,YAItC,SAAAc,GAAK,OAAoB,IAAfA,EAAMd,KAAa,MAAQ,MAKxC,SAAAc,GAAK,OAAoB,IAAfA,EAAMd,KAAa,MAAQ,MAIvCjE,GAAmBhC,IAAO6B,GAAV,MAKhBmF,GAAkBhH,IAAOiH,GAAV,MAmBfC,GAAqBlH,IAAOmH,KAAV,MAQlBC,GAAoBpH,IAAOyB,OAAV,KAWVjB,YAAO,IAAM,YCtJ3B6G,GAAe,CAClB,CAAE3E,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,UAAWC,MAAO,YAGxB2E,GAAe,CAClB,CAAE5E,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,SAGrB4E,GAAe,CAClB,CAAE7E,MAAO,EAAGC,MAAO,UACnB,CAAED,MAAO,EAAGC,MAAO,gBACnB,CAAED,MAAO,EAAGC,MAAO,WAGD6E,G,2MAClBjF,MAAQ,CACLkF,KAAM,GACNC,WAAY,GACZC,gBAAiB,GACjBpC,UAAW,CACR,CACGL,GAAI,EACJe,KAAM,EACNN,QAAS,KAGfH,aAAc,CACX,CACGG,QAAS,GACTD,OAAQ,KAEX,CACGC,QAAS,GACTD,OAAQ,KAEX,CACGC,QAAS,GACTD,OAAQ,KAEX,CACGC,QAAS,GACTD,OAAQ,KAEX,CACGC,QAAS,GACTD,OAAQ,O,EAKjBkC,sBAAwB,SAAAvE,GACrB,EAAKF,SAAS,CAAEsE,KAAMpE,EAAOX,S,EAGhCmF,sBAAwB,SAAAxE,GACrB,EAAKF,SAAS,CAAEuE,WAAYrE,EAAOX,S,EAGtCoF,2BAA6B,SAAA5E,GAC1B,EAAKC,SAAS,CAAEwE,gBAAiBzE,EAAM6E,OAAOrF,S,EAGjDsF,mBAAqB,SAAA9E,GAAU,IACpBqC,EAAc,EAAKhD,MAAnBgD,UAER,EAAKpC,SAAS,CACXoC,UAAU,GAAD,oBACHA,GADG,CAEN,CAAEL,GAAIK,EAAU5B,OAAQsC,KAAM,EAAGN,QAAS,S,EAKnDsC,2BAA6B,SAAC/E,EAAOgC,GAAQ,IAClCK,EAAc,EAAKhD,MAAnBgD,UAEFP,EAAQO,EAAU2C,WAAU,SAAAC,GAAC,OAAIA,EAAEjD,KAAOA,KAChDK,EAAUP,GAAOW,QAAUzC,EAAM6E,OAAOrF,MAExC,EAAKS,SAAS,CAAEoC,e,EAGnB6C,sBAAwB,SAAC/E,EAAQ6B,GAAQ,IAC9BK,EAAc,EAAKhD,MAAnBgD,UAEFP,EAAQO,EAAU2C,WAAU,SAAAC,GAAC,OAAIA,EAAEjD,KAAOA,KAChDK,EAAUP,GAAOiB,KAAO5C,EAAOX,MAE/B,EAAKS,SAAS,CAAEoC,e,EAGnB8C,8BAAgC,SAACnF,EAAOwC,GAAY,IACzCF,EAAiB,EAAKjD,MAAtBiD,aAEFR,EAAQQ,EAAa0C,WAAU,SAAA3E,GAAC,OAAIA,EAAEmC,SAAWA,KACvDF,EAAaR,GAAOW,QAAUzC,EAAM6E,OAAOrF,MAE3C,EAAKS,SAAS,CAAEqC,kB,EAGnB8C,kB,sBAAoB,0CAAA/E,EAAA,2DAOb,EAAKhB,MALNkF,EAFc,EAEdA,KACAC,EAHc,EAGdA,WACAC,EAJc,EAIdA,gBACApC,EALc,EAKdA,UACAC,EANc,EAMdA,aAGEkC,GAAeC,EATH,uBAUdrD,QAAQC,IAAI,gDAVE,iCAcjBD,QAAQC,IAAI,uBACZD,QAAQC,IAAR,eAAoBmD,EAApB,0BAA6CC,IAC7CrD,QAAQC,IAAIgB,GACZjB,QAAQC,IAAIiB,GAED+C,OACsB,IAA7BC,OAAOd,GAAc,MAAac,OAAOb,IAGvCc,EAAO,CACVhB,OACArC,OAAQuC,EACR/B,OAAQ,IACR8C,KAAM,GACNC,cAAe,GACfxD,KAAMuC,EACNnC,YACAC,gBAGHlB,QAAQC,IAAI,gBACZD,QAAQC,IAAIkE,GAnCK,UAqCM5H,EAAI+H,KAAJ,aAAuBH,GArC7B,QAqCX1E,EArCW,OAuCjBO,QAAQC,IAAI,oBACZD,QAAQC,IAAIR,GAEY,MAApBA,EAAS8E,SACVjF,IAAMkF,QAAQ,iDAEd,EAAK3F,SAAS,CACXuE,WAAY,GACZC,gBAAiB,GACjBpC,UAAW,CACR,CACGL,GAAI,EACJe,KAAM,EACNN,QAAS,KAGfH,aAAc,CACX,CACGG,QAAS,GACTD,OAAQ,KAEX,CACGC,QAAS,GACTD,OAAQ,KAEX,CACGC,QAAS,GACTD,OAAQ,KAEX,CACGC,QAAS,GACTD,OAAQ,KAEX,CACGC,QAAS,GACTD,OAAQ,SA1EH,4C,wEAiFV,IAAD,SAC+CrB,KAAK9B,MAAlDgD,EADF,EACEA,UAAWC,EADb,EACaA,aAAcmC,EAD3B,EAC2BA,gBAEjC,OACG,kBAAC,GAAD,KACG,uCACA,kBAAC,IAAD,CACGhD,QAAS0C,GACT5C,cAAc,EACdG,SAAUP,KAAKuD,wBAElB,8CACA,kBAAC,IAAD,CACGjD,QAAS2C,GACT7C,cAAc,EACdG,SAAUP,KAAKwD,wBAElB,4CACA,kBAAC/B,GAAD,CACGpD,MAAOiF,EACP/C,SAAUP,KAAKyD,6BAElB,kBAAC1B,GAAD,KACG,kBAACC,GAAD,KACG,kBAAC,GAAD,KACG,yCACA,kBAACE,GAAD,CAAWzB,QAAST,KAAK2D,oBAAzB,cAIH,kBAACxB,GAAD,KACIjB,EAAUR,KAAI,SAAAoD,GAAC,OACb,kBAAC1B,GAAD,CAAoBxB,IAAKkD,EAAEjD,IACxB,kBAAC,IAAD,CACGP,QAAS4C,GACT9C,cAAc,EACdG,SAAU,SAAAvB,GAAM,OACb,EAAK+E,sBAAsB/E,EAAQ8E,EAAEjD,OAG3C,kBAACwB,GAAD,CACGhE,MAAOyF,EAAExC,QACTf,SAAU,SAAA1B,GAAK,OACZ,EAAK+E,2BAA2B/E,EAAOiF,EAAEjD,aAO3D,kBAACoB,GAAD,KACG,kBAAC,GAAD,KACG,wCAEH,kBAACK,GAAD,KACIpB,EAAUR,KAAI,SAAAoD,GAAC,OACb,kBAACtB,GAAD,CACG5B,IAAKkD,EAAEjD,GACPe,KAAMkC,EAAElC,KACRZ,wBAAyB,CACtBC,OAAQ6C,EAAExC,iBAO5B,kBAACS,GAAD,KACG,kBAACC,GAAD,KACG,kBAAC,GAAD,KACG,6CAEH,kBAACG,GAAD,KACIhB,EAAaT,KAAI,SAAAxB,GAAC,OAChB,kBAACkD,GAAD,CAAoBxB,IAAK1B,EAAEmC,QACxB,gCAASnC,EAAEmC,OAAX,KACA,kBAACgB,GAAD,CACGhE,MAAOa,EAAEoC,QACTf,SAAU,SAAA1B,GAAK,OACZ,EAAKmF,8BACFnF,EACAK,EAAEmC,iBAQvB,kBAACY,GAAD,KACG,kBAAC,GAAD,KACG,wCAEH,kBAAC,GAAD,KACId,EAAaT,KAAI,SAAAxB,GAAC,OAChB,kBAACyD,GAAD,CAAiB/B,IAAK1B,EAAEmC,QACrB,gCAASnC,EAAEmC,OAAX,KACA,kBAACwB,GAAD,CACG7B,wBAAyB,CACtBC,OAAQ/B,EAAEoC,kBAQ/B,kBAACyB,GAAD,CAAmBtC,QAAST,KAAKiE,mBAAjC,6B,GAlRuBzC,a,2kBCpDnC,IAAMkD,GAASC,YAAH,MAUCC,GAAmBjJ,IAAOC,IAAV,KAOxBiJ,YAPwB,KASPH,KAKTI,GAAiBnJ,YAAOoJ,MAAkBpD,MAAM,CAC1DxB,KAAM,GACN6E,MAAO,QAFoBrJ,CAAH,MCjBZsJ,GANC,kBACb,kBAACL,GAAD,KACG,kBAACE,GAAD,Q,2jECJC,IAAMlI,GAAYjB,IAAOC,IAAV,MAYTiB,GAAQlB,IAAOC,IAAV,MAaL0B,GAAqB3B,IAAOC,IAAV,MAElBsJ,GAAkBvJ,IAAOC,IAAV,MAUfmB,GAAapB,IAAOC,IAAV,MAgBV8B,GAAoB/B,IAAOC,IAAV,MAqBjB+B,GAAmBhC,IAAO6B,GAAV,MAgBhB2H,GAAyBxJ,IAAOC,IAAV,MC3EdwJ,G,2MAClBlH,MAAQ,CACLmH,SAAS,EACTvF,SAAU,I,4MAIFe,EAAOb,KAAK0C,MAAM4C,MAAMC,OAAxB1E,G,SAEerE,EAAIiD,IAAJ,qBAAsBoB,I,OAAvCnB,E,OACNO,QAAQC,IAAIR,EAASC,MAErBK,KAAKlB,SAAS,CAAEuG,SAAS,EAAOvF,SAAUJ,EAASC,O,qIAG5C,IAAD,EACwBK,KAAK9B,MAA3BmH,EADF,EACEA,QAASvF,EADX,EACWA,SAEjB,OAAIuF,EACM,kBAAC,GAAD,MAIP,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,IAAD,CAAOlF,KAAM,KACb,yDAEH,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,IAAD,CAAeA,KAAM,KACrB,kCACKL,EAASsD,KADd,IACqBtD,EAASgB,KAD9B,iBAC+C,IAC3ChB,EAASiB,SAGhB,kBAACmE,GAAD,KACG,kBAAC,GAAD,CACGlE,wBAAyB,CACtBC,OAAQnB,EAASoB,aAGvB,kBAAC,GAAD,KACIpB,EAASqB,aAAaT,KAAI,SAAAU,GAAW,OACnC,wBAAIR,IAAKQ,EAAYC,QAClB,gCAASD,EAAYC,OAArB,KACA,0BACGL,wBAAyB,CACtBC,OAAQG,EAAYE,gBAMnC,kBAAC6D,GAAD,KACG,6BACG,wDACA,0CAAUrF,EAASyB,SAEtB,6BACG,6DACA,2BAAIzB,EAASwE,wB,GA7DC9C,a,o5JCd/B,IAAM5E,GAAYjB,IAAOC,IAAV,MAYTiB,GAAQlB,IAAOC,IAAV,MAaLmB,GAAapB,IAAOC,IAAV,MAwBV4J,GAAmB7J,IAAOC,IAAV,MAOhBF,GAAkBC,IAAOC,IAAV,MAOf6J,GAAa9J,IAAO6B,GAAV,MAyBVkI,GAAyB/J,IAAOC,IAAV,MAMtB+J,GAAmBhK,IAAOyB,OAAV,MAgBhBwI,GAAoBjK,IAAOyB,OAAV,MAiBjByI,GAAoBlK,IAAOC,IAAV,MAQjBkK,GAAUnK,IAAOC,IAAV,MAYP6B,GAAiB9B,IAAOC,IAAV,MA4Bd8B,GAAoB/B,IAAOC,IAAV,MAqBjB+B,GAAmBhC,IAAO6B,GAAV,MAehBI,GAAkBjC,IAAOC,IAAV,MASfiC,GAAgBlC,IAAOC,IAAV,MAebmK,GAAepK,IAAOyB,OAAV,MACR,SAAAsF,GAAK,OAAKA,EAAMsD,SAAW,UAAY,aAC5C,SAAAtD,GAAK,OAAKA,EAAMsD,SAAW,UAAY,aAC5B,SAAAtD,GAAK,OAAKA,EAAMsD,SAAW,UAAY,aAQ1C,SAAAtD,GAAK,OAChBA,EAAMsD,SAAW7J,YAAO,GAAK,WAAaA,YAAO,GAAK,cCvN1C8J,G,2MAClB/H,MAAQ,CACL2C,GAAI,EACJlC,UAAW,GACXuH,oBAAqB,G,EAqBxBC,iB,uCAAmB,WAAMxH,GAAN,eAAAO,EAAA,6DACR2B,EAAO,EAAK3C,MAAZ2C,GADQ,SAGVuF,aAAaC,QAChB,sBACAC,KAAKC,UAAU,CACZ1F,KACA2F,QAAS7H,EAAU+B,KAAI,SAAA+F,GAAC,MAAK,CAC1B1F,OAAQ0F,EAAEC,eACV3G,YAAa0G,EAAE1G,YACfwB,OAAQkF,EAAElF,cAVH,OAehB/F,EAAQmL,KAAK,CACVC,SAAS,cAAD,OAAgB/F,EAAhB,gBAhBK,2C,wDAoBnBgG,kBAAoB,WACF,EAAK3I,MAAZ2C,I,EAKXiG,qBAAuB,SAAAzI,GAAU,IAAD,EACc,EAAKH,MAAxCS,EADqB,EACrBA,UACFoI,EAFuB,EACVb,oBACwB7H,EAEvC0I,GAAgB,GAAKA,EAAepI,EAAUW,QAC/C,EAAKR,SAAS,CAAEoH,oBAAqBa,K,EAI3CC,mBAAqB,SAACnG,EAAIQ,GAAY,IAC3B1C,EAAc,EAAKT,MAAnBS,UAERA,EAAUwF,OAAOtD,GAAM,GAAGd,YAAcsB,EAExC,EAAKvC,SAAS,CAAEH,e,gNAzDRkC,EAAOb,KAAK0C,MAAM4C,MAAMC,OAAxB1E,G,SAEerE,EAAIiD,IAAJ,mBAAoBoB,I,gBAAnClB,E,EAAAA,KAEFhB,EAAYgB,EAAKhB,UAAU+B,KAAI,SAACZ,EAAUa,GAAX,uBAC/Bb,EAD+B,CAElC4G,gBAAiB,KAAO/F,EAAQ,IAAIsG,OAAO,GAC3ClH,YAAa,IACboB,aAAcrB,EAASqB,aAAa+F,eAGvClH,KAAKlB,SAAS,CACX+B,GAAIlB,EAAKkB,GACTlC,c,qIA+CI,IAAD,SACyCqB,KAAK9B,MAA5C2C,EADF,EACEA,GAAIlC,EADN,EACMA,UAAWuH,EADjB,EACiBA,oBAEjBiB,EAAmBxI,EAAUuH,GAEnC,OAAyB,IAArBvH,EAAUW,OACJ,uCAIP,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,IAAD,CAAca,KAAM,KACpB,4CAEH,kBAAC,GAAD,KACG,6BACG,kBAAC,IAAD,CAAUA,KAAM,KAChB,oDAEH,6CAAgBU,IAEnB,kBAAC2E,GAAD,KACG,kBAAC,GAAD,KACG,kBAACC,GAAD,KACI9G,EAAU+B,KAAI,SAACZ,EAAUa,GAAX,OACZ,wBAAIC,IAAKD,GACN,8BAAOb,EAAS4G,gBAChB,gCAAS5G,EAASC,kBAI3B,kBAAC2F,GAAD,KACG,kBAACC,GAAD,CACGlF,QAAS,kBAAM,EAAK0F,iBAAiBxH,KAErC,kBAAC,IAAD,MACA,4CAEH,kBAACiH,GAAD,CAAmBnF,QAAST,KAAK6G,mBAC9B,kBAAC,IAAD,MACA,iDAIT,kBAAChB,GAAD,KACG,kBAACC,GAAD,CAASrF,QAAS,kBAAM,EAAKqG,sBAAsB,KAChD,kBAAC,IAAD,CAAa3G,KAAM,KACnB,2CAGH,kBAAC2F,GAAD,CAASrF,QAAS,kBAAM,EAAKqG,qBAAqB,KAC/C,4CACA,kBAAC,IAAD,CAAc3G,KAAM,OAG1B,kBAAC,GAAD,KACG,gCACG,8BAAOgH,EAAiBT,gBAD3B,YAEaS,EAAiBrG,KAF9B,gBAE8C,IAC1CqG,EAAiBpG,OAHrB,KAKA,kCAAQoG,EAAiBtG,KAE5B,kBAAC,GAAD,CACGG,wBAAyB,CACtBC,OAAQkG,EAAiBjG,aAG/B,kBAAC,GAAD,KACIiG,EAAiBhG,aAAaT,KAAI,SAAAU,GAAW,OAC3C,wBAAIR,IAAKQ,EAAYC,QAClB,gCAASD,EAAYC,OAArB,KACA,0BACGL,wBAAyB,CACtBC,OAAQG,EAAYE,gBAMnC,kBAAC,GAAD,KACG,mDACA,kBAAC,GAAD,KACI6F,EAAiBhG,aAAaT,KAAI,SAAAU,GAAW,OAC3C,kBAAC2E,GAAD,CACGC,SACG5E,EAAYC,SACZ8F,EAAiBpH,YAEpBa,IAAKQ,EAAYC,OACjBZ,QAAS,kBACN,EAAKuG,mBACFG,EAAiBT,eACjBtF,EAAYC,UAIjBD,EAAYC,mB,GAtKHG,a,ouFChC9B,IAAM5E,GAAYjB,IAAOC,IAAV,MAYTiB,GAAQlB,IAAOC,IAAV,MAaLkB,GAAgBnB,IAAOC,IAAV,MAEbmB,GAAapB,IAAOC,IAAV,MAgBVoB,GAAOrB,IAAOsB,KAAV,MAaJmK,GAAiBzL,IAAOC,IAAV,MAoCdsB,GAAmBvB,IAAOC,IAAV,MAMhBuB,GAAexB,IAAOyB,OAAOuE,MAAM,CAC7CC,KAAM,UADmBjG,CAAH,MAmBL,kBAAMQ,YAAO,IAAM,cAI1BkB,GAAc1B,IAAOyB,OAAV,MAiBJ,kBAAMjB,YAAO,IAAM,cClHlB8J,G,2MAClB/H,MAAQ,CACLC,cAAe,GACfC,MAAO,CACJ,CAAEC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,QAASC,MAAO,UAE5BC,eAAgB,GAChBC,WAAY,GACZC,cAAe,CACZ,CAAEJ,MAAO,IAAKC,MAAO,iBACrB,CAAED,MAAO,IAAKC,MAAO,mCACrB,CAAED,MAAO,IAAKC,MAAO,mCAExBI,YAAa,CACV,CAAEL,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,WACrB,CAAED,MAAO,IAAKC,MAAO,YAExBK,UAAW,I,EAGdC,iBAAmB,SAAAC,GAAU,IAAD,EAC6B,EAAKX,MAAnDC,EADiB,EACjBA,cAAeM,EADE,EACFA,cAAeC,EADb,EACaA,YAEtC,GAAIP,IAAkBU,EAAO,CAC1B,IAAIL,EACe,YAAhBK,EAAMR,MAAsBI,EAAgBC,EAC/CF,EAAW6I,SAAQ,SAAAhD,GAChBA,EAAKiD,aAAc,EACnBjD,EAAKkD,OAAS,KAGjB,EAAKzI,SAAS,CACXX,cAAeU,EACfN,eAAgB,GAChBC,iB,EAKTgJ,iBAAmB,SAAA7G,GAAU,IACpBnC,EAAe,EAAKN,MAApBM,WAENA,EAAWmC,GAAO2G,aAAe9I,EAAWmC,GAAO2G,YACnD9I,EAAWmC,GAAO4G,OAAS/I,EAAWmC,GAAO2G,YAAc,EAAI,EAE/D,EAAKxI,SAAS,CAAEN,gB,EAGnBiJ,uBAAyB,SAAC5I,EAAO8B,GAAW,IACnCnC,EAAe,EAAKN,MAApBM,WAENA,EAAWmC,GAAO4G,OAAS1I,EAAM6E,OAAOrF,MAExC,EAAKS,SAAS,CAAEN,gB,EAGnBkJ,oBAAsB,SAAAC,GACnB,IAAMC,EAAiBD,EAAME,QAAO,SAAAxD,GAAI,OAAIA,EAAKiD,eAEjD,OAA8B,IAA1BM,EAAetI,QAI8C,IAA1DsI,EAAeC,QAAO,SAAAxD,GAAI,OAAIA,EAAKkD,OAAS,KAAGjI,Q,EAGzDwI,iB,uCAAmB,WAAMjJ,GAAN,uBAAAK,EAAA,yDAChBL,EAAMM,iBADU,EAGsB,EAAKjB,MAAnCC,EAHQ,EAGRA,cAAeK,EAHP,EAGOA,WAEmB,IAAtCY,OAAOC,KAAKlB,GAAemB,OALf,uBAMbC,IAAMC,MAAM,yBANC,6BAUX,EAAKkI,oBAAoBlJ,GAVd,uBAWbe,IAAMC,MAAM,qCAXC,iCAeVuI,EAAYvJ,EAAWqJ,QAAO,SAAAxD,GAAI,OAAIA,EAAKkD,OAAS,KAf1C,UAiBO/K,EAAI+H,KAAK,WAAY,CACzCnB,KAAMjF,EAAcE,MACpBsJ,MAAOI,EAAUrH,KAAI,SAAA2D,GAAI,MAAK,CAC3BxD,GAAIwD,EAAK/F,MACTiJ,OAAQlD,EAAKkD,aArBH,QAiBV7H,EAjBU,OAyBhBO,QAAQC,IAAR,iCAAsCR,EAASC,KAAKkB,KAEpDrF,EAAQmL,KAAR,qBAA2BjH,EAASC,KAAKkB,KA3BzB,4C,wDA8BnBjB,gBAAkB,SAAAf,GACfA,EAAMM,iBAEN,EAAKL,SAAS,CACXX,cAAe,GACfK,WAAY,M,wEAIR,IAAD,SACuCwB,KAAK9B,MAA1CC,EADF,EACEA,cAAeC,EADjB,EACiBA,MAAOI,EADxB,EACwBA,WAE9B,OACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,IAAD,CAAc2B,KAAM,KACpB,4CAEH,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,IAAD,CAAUA,KAAM,KAChB,0CAEH,kBAAC,GAAD,KACG,uCACA,kBAAC,IAAD,CACGC,cAAc,EACdC,aAAW,EACXhC,MAAOF,EACPmC,QAASlC,EACTmC,SAAUP,KAAKpB,mBAElB,uCACA,kBAACwI,GAAD,KACI5I,EAAWkC,KAAI,SAAC2D,EAAM1D,GAAP,OACb,yBAAKC,IAAKyD,EAAKhG,OACZ,+BACG,2BACGuD,KAAK,WACLoG,QAAS3D,EAAKiD,YACd/G,SAAU,kBAAM,EAAKiH,iBAAiB7G,MAEzC,8BAAO0D,EAAK/F,QAEf,6BACG,6CACA,2BACGsD,KAAK,SACLC,IAAK,EACLC,IAAK,GACLmG,UAAW5D,EAAKiD,YAChBjJ,MAAOgG,EAAKkD,OACZhH,SAAU,SAAA1B,GAAK,OACZ,EAAK4I,uBAAuB5I,EAAO8B,YAOrD,kBAAC,GAAD,KACG,kBAAC,GAAD,CAAcF,QAAST,KAAK8H,kBACzB,kBAAC,IAAD,CAAU3H,KAAM,KAChB,wCAEH,kBAAC,GAAD,CAAaM,QAAST,KAAKJ,iBACxB,kBAAC,IAAD,CAAYO,KAAM,KAClB,iD,GAvKaqB,a,moFCxB9B,IAAM5E,GAAYjB,IAAOC,IAAV,MAYTiB,GAAQlB,IAAOC,IAAV,MAaLmB,GAAapB,IAAOC,IAAV,MAwBVsM,GAAkBvM,IAAOC,IAAV,MAWfuM,GAAexM,IAAOC,IAAV,MASZwM,GAAazM,IAAO6B,GAAV,MAaV6K,GAAsB1M,IAAOC,IAAV,MAqBnBsB,GAAmBvB,IAAOC,IAAV,MAkBN,kBAAMO,YAAO,GAAK,cCtGpBmM,G,2MAClBpK,MAAQ,CACL2C,GAAI,EACJ2F,QAAS,GACT+B,WAAY,I,EAoCfC,iBAAmB,WAChBhN,EAAQmL,KAAR,e,EAGH8B,oBAAsB,WAAO,IAClB5H,EAAO,EAAK3C,MAAZ2C,GAERrF,EAAQmL,KAAR,qBAA2B9F,K,oNAvCnBA,EAAOb,KAAK0C,MAAM4C,MAAMC,OAAxB1E,G,KAEQyF,K,SACPF,aAAasC,QAAQ,uB,mBADxBlC,E,KAAemC,M,gBAIrB1I,QAAQC,IAAIsG,GAEI,OAAZA,GAAoBA,EAAQ3F,KAAOA,GACpCrF,EAAQmL,KAAK,CACVC,SAAS,cAAD,OAAgB/F,KAIb+H,EAAsBpC,EAA/BA,QAEFqC,EAAkBD,EAAkBtJ,OACpCwJ,EAAiBF,EAAkBf,QACtC,SAAAkB,GAAG,OAAIA,EAAIhJ,cAAgBgJ,EAAIxH,UAChCjC,OAEIiJ,EAAa,CAEhBS,SAAWF,EAAiBD,EAAmB,KAAKI,QAAQ,GAAK,IACjEC,SAAUJ,EACVK,OAAQN,EAAkBC,EAC1BM,MAAOP,GAGV7I,KAAKlB,SAAS,CAAE+B,KAAI2F,QAASoC,EAAmBL,e,sIAazC,IAAD,EAC8BvI,KAAK9B,MAAjC2C,EADF,EACEA,GAAI2F,EADN,EACMA,QAAS+B,EADf,EACeA,WAErB,OACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,IAAD,CAAcpI,KAAM,KACpB,4CAEH,kBAAC,GAAD,KACG,6BACG,kBAAC,IAAD,CAAaA,KAAM,KACnB,6CAEH,6CAAgBU,IAEnB,kBAACqH,GAAD,KACG,kBAACC,GAAD,KACG,4CACA,0CACA,0CACA,2CAEH,kBAACC,GAAD,KACI5B,EAAQ9F,KAAI,SAAAZ,GAAQ,OAClB,wBAAIc,IAAKd,EAASiB,QACf,8BAAOjB,EAASiB,QAChB,8BAAOjB,EAASyB,QAChB,8BAAOzB,EAASC,aAChB,8BACID,EAASyB,SAAWzB,EAASC,YAC3B,kBAAC,IAAD,CAAaiF,MAAM,SAEnB,kBAAC,IAAD,CAAaA,MAAM,eAMlC,kBAACqD,GAAD,KACG,6BACG,gCAASE,EAAWS,SACpB,0CAEH,6BACG,gCAAST,EAAWa,OACpB,8CAEH,6BACG,gCAASb,EAAWW,UACpB,2CAEH,6BACG,gCAASX,EAAWY,QACpB,2CAGN,kBAAC,GAAD,KACG,4BAAQ1I,QAAST,KAAKwI,kBACnB,kBAAC,IAAD,CAAcrI,KAAM,KACpB,gDAEH,4BAAQM,QAAST,KAAKyI,qBACnB,kBAAC,KAAD,CAAWtI,KAAM,KACjB,0D,GAlHsBqB,a,oBCnBrC6H,GAAMC,IAAMC,YAEGC,G,iLAEf,OACG,6BACG,kBAAC,KAAD,CAAKC,UAAWJ,GAAKK,SAAS,qBAC1B,gBAAGC,EAAH,EAAGA,MAAH,OAAe,4BAAQlJ,QAASkJ,GAAjB,mBAEnB,yBAAKN,IAAKA,IACP,iDACA,uEACA,yBAAK/M,IAAI,sDAAsD,U,GAV7CkF,aCOlB,SAASoI,KACrB,OACG,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW9L,KACjC,kBAAC,IAAD,CAAO4L,KAAK,SAASE,UAAW5G,KAChC,kBAAC,IAAD,CAAO0G,KAAK,eAAeE,UAAW3E,KACtC,kBAAC,IAAD,CAAOyE,KAAK,2BAA2BE,UAAWzB,KAClD,kBAAC,IAAD,CAAOuB,KAAK,iBAAiBE,UAAW9D,KACxC,kBAAC,IAAD,CAAO4D,KAAK,aAAaE,UAAWC,KAEpC,kBAAC,IAAD,CAAOH,KAAK,WAAWE,UAAWP,M,4mBCpB5BS,mBAAf,MCsBeC,OAbf,WACG,OACG,oCACG,kBAAC,IAAD,CAAY1O,QAASA,GAClB,kBAAC,EAAD,MACA,kBAACoO,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAgBO,UAAW,SCbvCC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2337d4f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_petcc.350d0aae.svg\";","import { createHashHistory } from 'history'\n\nconst history = createHashHistory()\n\nexport default history\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { darken } from 'polished'\n\nexport const HeaderContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   background: #ffffff;\n   border-bottom: 1px solid #ccc;\n   height: 64px;\n   padding: 0 30px;\n\n   @media (max-width: 1366px) {\n      padding: 0 12px;\n   }\n`\n\nexport const Links = styled(Link)``\n\nexport const LinksContainer = styled.div`\n   display: flex;\n   align-items: center;\n   height: 100%;\n`\n\nexport const LogoPET = styled.img`\n   height: 48px;\n`\n\nexport const SingInButton = styled(Link)`\n   color: #fff;\n   font-size: 16px;\n   border: 1px solid #e1e1e1;\n   border-radius: 4px;\n   background: #010305;\n   padding: 7px 25px;\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${darken(-0.15, '#010305')};\n   }\n`\n\nexport const LinkItem = styled.div`\n   display: flex;\n   height: 100%;\n\n   & + div {\n      margin-left: 15px;\n   }\n\n   &:hover {\n      background: ${() => darken(0.1, '#ffffff')};\n   }\n\n   > a {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: #000000;\n\n      > span {\n         margin-left: 7px;\n      }\n   }\n`\n","import React from 'react'\nimport { FaSearch } from 'react-icons/fa'\n\nimport Logo from '../../assets/images/logo_petcc.svg'\nimport {\n   HeaderContainer,\n   Links,\n   LinksContainer,\n   LogoPET,\n   LinkItem,\n} from './styles'\n\nconst Header = () => (\n   <HeaderContainer>\n      <Links to=\"/\">\n         <LogoPET src={Logo} />\n      </Links>\n      <LinksContainer>\n         <LinkItem>\n            <Links to=\"/\">\n               <FaSearch />\n               <span>Buscar</span>\n            </Links>\n         </LinkItem>\n         <LinkItem>\n            <Links to=\"/simulados\">\n               <FaSearch />\n               <span>Simulados</span>\n            </Links>\n         </LinkItem>\n      </LinksContainer>\n   </HeaderContainer>\n)\n\nexport default Header\n","import axios from 'axios'\n\nconst api = axios.create({\n   baseURL: 'http://localhost:3333',\n})\n\nexport default api\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const FormContainer = styled.div``\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const Form = styled.form`\n   padding: 0 15px 15px;\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n\n   p {\n      margin-top: 15px;\n      margin-bottom: 7px;\n   }\n`\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   flex-direction: row;\n   margin-top: 15px;\n`\n\nexport const SubmitButton = styled.button`\n   display: flex;\n   align-items: center;\n   padding: 10px 25px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#254979')};\n   }\n`\n\nexport const ClearButton = styled.button`\n   display: flex;\n   align-items: center;\n   margin-left: 10px;\n   padding: 10px 25px;\n   background: #ffffff;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#ffffff')};\n   }\n`\n\nexport const QuestionsContainer = styled.div`\n   margin-top: 25px;\n`\n\nexport const QuestionsList = styled.ul`\n   list-style: none;\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   padding-bottom: 15px;\n   margin-bottom: 15px;\n\n   li {\n      & + li {\n         margin-top: 15px;\n      }\n\n      > p {\n         margin: 30px 15px 0;\n      }\n   }\n`\n\nexport const QuestionHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   border-top: 1px solid #c9c9c9;\n   border-bottom: 1px solid #c9c9c9;\n   padding: 15px;\n   margin-bottom: 15px;\n\n   strong {\n      font-size: 16px;\n\n      span {\n         color: #ffffff;\n         text-align: center;\n         border-radius: 50%;\n         background: #254979;\n         padding: 6px 10px;\n         margin-right: 8px;\n      }\n   }\n\n   > span {\n      color: #75797d;\n      font-size: 12px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 15px;\n\n   li {\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const AnswerContainer = styled.div`\n   margin: 20px 15px 15px;\n   height: 76px;\n\n   p {\n      margin-bottom: 5px;\n   }\n`\n\nexport const AnswerContent = styled.div`\n   display: flex;\n   justify-content: space-around;\n   padding: 10px;\n   border: 1px solid #c9c9c9;\n   border-radius: 4px;\n\n   @media (max-width: 1090px) {\n      justify-content: space-between;\n   }\n\n   @media (max-width: 768px) {\n   }\n\n   button {\n      background: #254979;\n      color: #ffffff;\n      border: 0;\n      border-radius: 50%;\n      padding: 14px 18px;\n      font-weight: bold;\n      font-size: 16px;\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#254979')};\n      }\n   }\n`\n\nexport const AnswerCorrect = styled.div`\n   font-size: 16px;\n   font-weight: bold;\n   height: 74px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin: 20px 10px 15px;\n   border: 1px solid ${() => darken(0.15, '#cef0ab')};\n   border-radius: 4px;\n   background: #cef0ab;\n\n   span {\n      margin-left: 10px;\n   }\n`\n\nexport const AnswerIncorrect = styled.div`\n   font-size: 16px;\n   font-weight: bold;\n   height: 74px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin: 25px 15px 10px;\n   border: 1px solid ${() => darken(0.15, '#fdaa9a')};\n   border-radius: 4px;\n   background: #fdaa9a;\n\n   span {\n      margin-left: 10px;\n   }\n`\n\nexport const OptionsContainer = styled.div`\n   display: flex;\n   justify-content: space-around;\n   margin-top: 20px;\n   margin-bottom: 50px;\n\n   @media (max-width: 768px) {\n      flex-direction: column;\n      align-items: center;\n   }\n\n   a {\n      display: flex;\n      justify-content: center;\n      color: #ffffff;\n      background: #3d856a;\n      width: 250px;\n      padding: 10px;\n      border-radius: 4px;\n\n      & + a {\n         @media (max-width: 768px) {\n            margin-top: 7px;\n         }\n      }\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#3d856a')};\n      }\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaSearch,\n   FaFilter,\n   FaTrashAlt,\n   FaHighlighter,\n   FaPencilAlt,\n   FaPencilRuler,\n   FaRegComment,\n} from 'react-icons/fa'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\n\nimport api from '../../services/api'\n\nimport {\n   Container,\n   Title,\n   FormContainer,\n   TextHeader,\n   Form,\n   ButtonsContainer,\n   SubmitButton,\n   ClearButton,\n   QuestionsContainer,\n   QuestionsList,\n   QuestionHeader,\n   QuestionStatement,\n   AlternativesList,\n   AnswerContainer,\n   AnswerContent,\n   AnswerCorrect,\n   AnswerIncorrect,\n   OptionsContainer,\n} from './styles'\nimport { Link } from 'react-router-dom'\n\nexport default class Home extends Component {\n   state = {\n      exam_selected: {},\n      exams: [\n         { value: 'poscomp', label: 'POSCOMP' },\n         { value: 'enade', label: 'ENADE' },\n      ],\n      areas_selected: [],\n      exam_areas: [],\n      poscomp_areas: [\n         { value: '1', label: 'POSCOMP 1' },\n         { value: '2', label: 'POSCOMP 2' },\n         { value: '3', label: 'POSCOMP 3' },\n         { value: '4', label: 'POSCOMP 4' },\n         { value: '5', label: 'POSCOMP 5' },\n      ],\n      enade_areas: [\n         { value: '1', label: 'ENADE 1' },\n         { value: '2', label: 'ENADE 2' },\n         { value: '3', label: 'ENADE 3' },\n         { value: '4', label: 'ENADE 4' },\n         { value: '5', label: 'ENADE 5' },\n      ],\n      questions: [],\n   }\n\n   async componentDidMount() {\n      const response = await api.get('/questions')\n\n      this.setState({ questions: response.data })\n   }\n\n   handleChangeExam = event => {\n      const { exam_selected, poscomp_areas, enade_areas } = this.state\n\n      if (exam_selected !== event) {\n         this.setState({\n            exam_selected: event,\n            areas_selected: [],\n            exam_areas: event.value === 'poscomp' ? poscomp_areas : enade_areas,\n         })\n      }\n   }\n\n   handleAddArea = option => {\n      this.setState({\n         areas_selected: option,\n      })\n   }\n\n   handleSubmitButton = async event => {\n      event.preventDefault()\n\n      const { exam_selected } = this.state\n      if (Object.keys(exam_selected).length === 0) {\n         toast.error('Selecione um concurso')\n         return\n      }\n\n      const response = await api.get('/questions')\n\n      this.setState({ questions: response.data })\n   }\n\n   handleClearForm = event => {\n      event.preventDefault()\n\n      this.setState({\n         exam_selected: {},\n         areas_selected: [],\n      })\n   }\n\n   handleVerifyAnwser = (question, user_answer) => {\n      const { questions } = this.state\n\n      questions[question].user_answer = user_answer\n\n      this.setState({ questions })\n   }\n\n   render() {\n      const {\n         exam_selected,\n         exams,\n         areas_selected,\n         exam_areas,\n         questions,\n      } = this.state\n\n      console.log(questions)\n\n      return (\n         <Container>\n            <Title>\n               <FaSearch size={24} />\n               <span>Buscar Exercícios</span>\n            </Title>\n            <FormContainer>\n               <TextHeader>\n                  <FaFilter size={18} />\n                  <span>Filtros</span>\n               </TextHeader>\n               <Form>\n                  <p>Concurso</p>\n                  <Select\n                     isSearchable={false}\n                     isClearable\n                     value={exam_selected}\n                     options={exams}\n                     onChange={this.handleChangeExam}\n                  />\n                  <p>Área</p>\n                  <Select\n                     isMulti\n                     isSearchable={false}\n                     isClearable\n                     value={areas_selected}\n                     options={exam_areas}\n                     onChange={this.handleAddArea}\n                  />\n                  <ButtonsContainer>\n                     <SubmitButton onClick={this.handleSubmitButton}>\n                        <FaSearch size={16} />\n                        <span>Buscar</span>\n                     </SubmitButton>\n                     <ClearButton onClick={this.handleClearForm}>\n                        <FaTrashAlt size={16} />\n                        <span>Limpar</span>\n                     </ClearButton>\n                  </ButtonsContainer>\n               </Form>\n            </FormContainer>\n            <QuestionsContainer>\n               <TextHeader>\n                  <FaHighlighter size={18} />\n                  <span>Questões</span>\n               </TextHeader>\n               <QuestionsList>\n                  {questions.map((question, index) => (\n                     <li key={question.id}>\n                        <QuestionHeader>\n                           <strong>\n                              <span>1</span>\n                              (POSCOMP/{question.year} - Questão{' '}\n                              {question.number})\n                           </strong>\n                           <span>#{question.id}</span>\n                        </QuestionHeader>\n                        <QuestionStatement\n                           dangerouslySetInnerHTML={{\n                              __html: question.statement,\n                           }}\n                        />\n                        <AlternativesList>\n                           {question.alternatives.map(alternative => (\n                              <li key={alternative.letter}>\n                                 <strong>{alternative.letter})</strong>\n                                 <span\n                                    dangerouslySetInnerHTML={{\n                                       __html: alternative.content,\n                                    }}\n                                 />\n                              </li>\n                           ))}\n                        </AlternativesList>\n                        {typeof question.user_answer === 'undefined' ? (\n                           <AnswerContainer>\n                              <p>Escolha sua resposta</p>\n                              <AnswerContent>\n                                 {question.alternatives.map(alternative => (\n                                    <button\n                                       key={alternative.letter}\n                                       onClick={() =>\n                                          this.handleVerifyAnwser(\n                                             index,\n                                             alternative.letter\n                                          )\n                                       }\n                                    >\n                                       {alternative.letter}\n                                    </button>\n                                 ))}\n                              </AnswerContent>\n                           </AnswerContainer>\n                        ) : question.user_answer === question.answer ? (\n                           <AnswerCorrect>\n                              <FaPencilAlt />\n                              <span>\n                                 Você acertou essa questão! Sua Resposta:{' '}\n                                 {question.user_answer}\n                              </span>\n                           </AnswerCorrect>\n                        ) : (\n                           <AnswerIncorrect>\n                              <FaPencilRuler />\n                              <span>\n                                 Você errou! Resposta Correta: {question.answer}\n                                 . Sua Resposta: {question.user_answer}\n                              </span>\n                           </AnswerIncorrect>\n                        )}\n                        <OptionsContainer>\n                           <Link to={``}>\n                              <FaSearch />\n                              <span>Questões Similares</span>\n                           </Link>\n                           <Link to={`/questao/${question.id}`}>\n                              <FaRegComment />\n                              <span>Detalhes da Questão</span>\n                           </Link>\n                        </OptionsContainer>\n                     </li>\n                  ))}\n               </QuestionsList>\n            </QuestionsContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   margin: 20px auto 0;\n   max-width: 1065px;\n\n   display: flex;\n   flex-direction: column;\n\n   > span {\n      margin: 10px 0 5px;\n   }\n   padding-bottom: 30px;\n`\n\nexport const YearInput = styled.input.attrs({\n   type: 'number',\n   min: 1,\n   max: 70,\n})`\n   height: 38px;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   padding: 15px;\n`\n\nexport const StatementContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n`\n\nexport const InputStatementContainer = styled.div`\n   flex: 1 1;\n   margin: 10px 0 7px;\n`\n\nexport const PreviewStatementContainer = styled.div`\n   flex: 1 1;\n   margin: 7px 0 10px;\n`\n\nexport const HeaderContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   height: 55px;\n\n   padding: 10px 15px;\n   background: #333333;\n   border-top-right-radius: 5px;\n   border-top-left-radius: 5px;\n\n   h4 {\n      color: #ffffff;\n      font-size: 18px;\n      font-family: inherit;\n      font-weight: 500;\n      line-height: 1.1;\n   }\n`\n\nexport const AddButton = styled.button`\n   border: 1px solid #f1f3f5;\n   border-radius: 4px;\n   padding: 7px 20px;\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${darken(0.1, '#f1f3f5')};\n   }\n`\n\nexport const InputStatementList = styled.div`\n   display: flex;\n   flex-direction: column;\n`\n\nexport const InputStatementItem = styled.div`\n   flex: 1;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   margin: 5px 15px 5px;\n\n   > input {\n      flex: 11 1;\n      padding: 10px 15px;\n      border: 1px solid #cccccc;\n      border-radius: 4px;\n      margin-left: 10px;\n   }\n\n   > div {\n      flex: 3 1;\n   }\n`\n\nexport const StatementInput = styled.input`\n   border: 1px solid #333333;\n`\n\nexport const StatementTypeInput = styled.input.attrs({\n   type: 'text',\n   placeholder: 'Conteúdo',\n})`\n   border: 1px solid #333333;\n`\n\nexport const StatementPreviewList = styled.div`\n   padding: 10px 0;\n`\n\nexport const Statement = styled.p`\n   display: block;\n   font-size: 14px;\n   padding: 0 15px 10px;\n   line-height: 2.25;\n\n   text-align: ${props => (props.type === 1 ? 'start' : 'center')};\n\n   img {\n      @media (min-width: 770px) {\n         width: ${props => (props.type === 3 ? '45%' : '')};\n      }\n\n      vertical-align: middle;\n      margin: 0 5px;\n      width: ${props => (props.type === 3 ? '85%' : '')};\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 5px 15px 15px;\n`\n\nexport const AlternativeItem = styled.li`\n   display: flex;\n   margin-top: 10px;\n\n   strong {\n      margin: 0 7px;\n      padding-top: 7px;\n   }\n\n   img {\n      vertical-align: middle;\n      margin: 0 5px;\n   }\n\n   span {\n      line-height: 2.25;\n   }\n`\n\nexport const AlternativeContent = styled.span`\n   display: block;\n\n   img {\n      vertical-align: middle;\n   }\n`\n\nexport const AddQuestionButton = styled.button`\n   padding: 15px;\n   border: 0;\n   border-radius: 4px;\n   background: #333333;\n   color: #fff;\n   font-weight: bold;\n   font-size: 16px;\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${darken(0.15, '#333333')};\n   }\n`\n","import React, { Component } from 'react'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\n\nimport api from '../../services/api'\n\nimport {\n   Container,\n   YearInput,\n   StatementContainer,\n   InputStatementContainer,\n   PreviewStatementContainer,\n   HeaderContainer,\n   AddButton,\n   InputStatementList,\n   InputStatementItem,\n   StatementInput,\n   StatementPreviewList,\n   Statement,\n   AlternativesList,\n   AlternativeItem,\n   AlternativeContent,\n   AddQuestionButton,\n} from './styles'\n\nconst exam_options = [\n   { value: 'enade', label: 'ENADE' },\n   { value: 'poscomp', label: 'POSCOMP' },\n]\n\nconst year_options = [\n   { value: '2004', label: '2004' },\n   { value: '2005', label: '2005' },\n   { value: '2006', label: '2006' },\n   { value: '2007', label: '2007' },\n   { value: '2008', label: '2008' },\n   { value: '2009', label: '2009' },\n   { value: '2010', label: '2010' },\n   { value: '2011', label: '2011' },\n   { value: '2012', label: '2012' },\n   { value: '2013', label: '2013' },\n   { value: '2014', label: '2014' },\n   { value: '2015', label: '2015' },\n   { value: '2016', label: '2016' },\n   { value: '2017', label: '2017' },\n   { value: '2018', label: '2018' },\n   { value: '2019', label: '2019' },\n]\n\nconst type_options = [\n   { value: 1, label: 'Normal' },\n   { value: 2, label: 'Centralizado' },\n   { value: 3, label: 'Imagem' },\n]\n\nexport default class Admin extends Component {\n   state = {\n      exam: '',\n      year_input: '',\n      question_number: '',\n      statement: [\n         {\n            id: 0,\n            type: 1,\n            content: '',\n         },\n      ],\n      alternatives: [\n         {\n            content: '',\n            letter: 'A',\n         },\n         {\n            content: '',\n            letter: 'B',\n         },\n         {\n            content: '',\n            letter: 'C',\n         },\n         {\n            content: '',\n            letter: 'D',\n         },\n         {\n            content: '',\n            letter: 'E',\n         },\n      ],\n   }\n\n   handleExamInputChange = option => {\n      this.setState({ exam: option.value })\n   }\n\n   handleYearInputChange = option => {\n      this.setState({ year_input: option.value })\n   }\n\n   handleQuestionNumberChange = event => {\n      this.setState({ question_number: event.target.value })\n   }\n\n   handleAddStatement = event => {\n      const { statement } = this.state\n\n      this.setState({\n         statement: [\n            ...statement,\n            { id: statement.length, type: 1, content: '' },\n         ],\n      })\n   }\n\n   handleStatementInputChange = (event, id) => {\n      const { statement } = this.state\n\n      const index = statement.findIndex(s => s.id === id)\n      statement[index].content = event.target.value\n\n      this.setState({ statement })\n   }\n\n   handleTypeInputChange = (option, id) => {\n      const { statement } = this.state\n\n      const index = statement.findIndex(s => s.id === id)\n      statement[index].type = option.value\n\n      this.setState({ statement })\n   }\n\n   handleAlternativesInputChange = (event, letter) => {\n      const { alternatives } = this.state\n\n      const index = alternatives.findIndex(a => a.letter === letter)\n      alternatives[index].content = event.target.value\n\n      this.setState({ alternatives })\n   }\n\n   handleAddQuestion = async () => {\n      const {\n         exam,\n         year_input,\n         question_number,\n         statement,\n         alternatives,\n      } = this.state\n\n      if (!year_input && !question_number) {\n         console.log('Year and Question Number should not be empty')\n         return\n      }\n\n      console.log('Adding New Question')\n      console.log(`Ano: ${year_input} - Questão: ${question_number}`)\n      console.log(statement)\n      console.log(alternatives)\n\n      const id = String(\n         (Number(year_input) - 2004) * 70 + Number(question_number)\n      )\n\n      const body = {\n         exam,\n         number: question_number,\n         answer: 'Z',\n         area: '',\n         justification: '',\n         year: year_input,\n         statement,\n         alternatives,\n      }\n\n      console.log('=== Body ===')\n      console.log(body)\n\n      const response = await api.post(`/questions`, body)\n\n      console.log('=== Resposta ===')\n      console.log(response)\n\n      if (response.status === 200) {\n         toast.success('Questão adicionada/atualizada com sucesso!')\n\n         this.setState({\n            year_input: '',\n            question_number: '',\n            statement: [\n               {\n                  id: 0,\n                  type: 1,\n                  content: '',\n               },\n            ],\n            alternatives: [\n               {\n                  content: '',\n                  letter: 'A',\n               },\n               {\n                  content: '',\n                  letter: 'B',\n               },\n               {\n                  content: '',\n                  letter: 'C',\n               },\n               {\n                  content: '',\n                  letter: 'D',\n               },\n               {\n                  content: '',\n                  letter: 'E',\n               },\n            ],\n         })\n      }\n   }\n\n   render() {\n      const { statement, alternatives, question_number } = this.state\n\n      return (\n         <Container>\n            <span>Prova</span>\n            <Select\n               options={exam_options}\n               isSearchable={false}\n               onChange={this.handleExamInputChange}\n            />\n            <span>Ano da Prova</span>\n            <Select\n               options={year_options}\n               isSearchable={false}\n               onChange={this.handleYearInputChange}\n            />\n            <span>Questão</span>\n            <YearInput\n               value={question_number}\n               onChange={this.handleQuestionNumberChange}\n            />\n            <StatementContainer>\n               <InputStatementContainer>\n                  <HeaderContainer>\n                     <h4>Enunciado</h4>\n                     <AddButton onClick={this.handleAddStatement}>\n                        Adicionar\n                     </AddButton>\n                  </HeaderContainer>\n                  <InputStatementList>\n                     {statement.map(s => (\n                        <InputStatementItem key={s.id}>\n                           <Select\n                              options={type_options}\n                              isSearchable={false}\n                              onChange={option =>\n                                 this.handleTypeInputChange(option, s.id)\n                              }\n                           />\n                           <StatementInput\n                              value={s.content}\n                              onChange={event =>\n                                 this.handleStatementInputChange(event, s.id)\n                              }\n                           />\n                        </InputStatementItem>\n                     ))}\n                  </InputStatementList>\n               </InputStatementContainer>\n               <PreviewStatementContainer>\n                  <HeaderContainer>\n                     <h4>Preview</h4>\n                  </HeaderContainer>\n                  <StatementPreviewList>\n                     {statement.map(s => (\n                        <Statement\n                           key={s.id}\n                           type={s.type}\n                           dangerouslySetInnerHTML={{\n                              __html: s.content,\n                           }}\n                        />\n                     ))}\n                  </StatementPreviewList>\n               </PreviewStatementContainer>\n            </StatementContainer>\n            <StatementContainer>\n               <InputStatementContainer>\n                  <HeaderContainer>\n                     <h4>Alternativas</h4>\n                  </HeaderContainer>\n                  <InputStatementList>\n                     {alternatives.map(a => (\n                        <InputStatementItem key={a.letter}>\n                           <strong>{a.letter})</strong>\n                           <StatementInput\n                              value={a.content}\n                              onChange={event =>\n                                 this.handleAlternativesInputChange(\n                                    event,\n                                    a.letter\n                                 )\n                              }\n                           />\n                        </InputStatementItem>\n                     ))}\n                  </InputStatementList>\n               </InputStatementContainer>\n               <PreviewStatementContainer>\n                  <HeaderContainer>\n                     <h4>Preview</h4>\n                  </HeaderContainer>\n                  <AlternativesList>\n                     {alternatives.map(a => (\n                        <AlternativeItem key={a.letter}>\n                           <strong>{a.letter})</strong>\n                           <AlternativeContent\n                              dangerouslySetInnerHTML={{\n                                 __html: a.content,\n                              }}\n                           />\n                        </AlternativeItem>\n                     ))}\n                  </AlternativesList>\n               </PreviewStatementContainer>\n            </StatementContainer>\n            <AddQuestionButton onClick={this.handleAddQuestion}>\n               Adicionar Questão\n            </AddQuestionButton>\n         </Container>\n      )\n   }\n}\n","import styled, { keyframes, css } from 'styled-components'\nimport { AiOutlineLoading } from 'react-icons/ai'\n\nconst rotate = keyframes`\n   from {\n      transform: rotate(0deg);\n   }\n\n   to {\n      transform: rotate(360deg);\n   }\n`\n\nexport const LoadingContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   height: calc(100vh - 90px);\n\n   ${css`\n      svg {\n         animation: ${rotate} 2s linear infinite;\n      }\n   `};\n`\n\nexport const LoadingContent = styled(AiOutlineLoading).attrs({\n   size: 72,\n   color: '#000',\n})``\n","import React from 'react'\n\nimport { LoadingContainer, LoadingContent } from './styles'\n\nconst Loading = () => (\n   <LoadingContainer>\n      <LoadingContent />\n   </LoadingContainer>\n)\n\nexport default Loading\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const QuestionsContainer = styled.div``\n\nexport const QuestionContent = styled.div`\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   margin-bottom: 15px;\n   padding-bottom: 15px;\n   padding-top: 7px;\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 0 20px;\n   margin: 0 15px 20px;\n\n   border-bottom: 1px solid #e0e1e2;\n\n   li {\n      margin-top: 10px;\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const QuestionsInfoContainer = styled.div`\n   padding: 0 15px;\n\n   > div {\n      & + div {\n         margin-top: 15px;\n      }\n\n      span {\n         font-size: 18px;\n      }\n\n      p {\n         font-size: 16px;\n         margin-top: 10px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport { FaPen, FaHighlighter } from 'react-icons/fa'\n\nimport api from '../../services/api'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   Title,\n   QuestionsContainer,\n   QuestionContent,\n   TextHeader,\n   QuestionStatement,\n   AlternativesList,\n   QuestionsInfoContainer,\n} from './styles'\n\nexport default class Question extends Component {\n   state = {\n      loading: true,\n      question: {},\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      const response = await api.get(`/questions/${id}`)\n      console.log(response.data)\n\n      this.setState({ loading: false, question: response.data })\n   }\n\n   render() {\n      const { loading, question } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <Container>\n            <Title>\n               <FaPen size={24} />\n               <span>Detalhes da Questão</span>\n            </Title>\n            <QuestionsContainer>\n               <TextHeader>\n                  <FaHighlighter size={18} />\n                  <span>\n                     ({question.exam}/{question.year}) / Questão{' '}\n                     {question.number}\n                  </span>\n               </TextHeader>\n               <QuestionContent>\n                  <QuestionStatement\n                     dangerouslySetInnerHTML={{\n                        __html: question.statement,\n                     }}\n                  />\n                  <AlternativesList>\n                     {question.alternatives.map(alternative => (\n                        <li key={alternative.letter}>\n                           <strong>{alternative.letter})</strong>\n                           <span\n                              dangerouslySetInnerHTML={{\n                                 __html: alternative.content,\n                              }}\n                           />\n                        </li>\n                     ))}\n                  </AlternativesList>\n                  <QuestionsInfoContainer>\n                     <div>\n                        <span>Gabarito da questão</span>\n                        <p>Opção {question.answer}</p>\n                     </div>\n                     <div>\n                        <span>Comentário da questão</span>\n                        <p>{question.justification}</p>\n                     </div>\n                  </QuestionsInfoContainer>\n               </QuestionContent>\n            </QuestionsContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   div {\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      font-size: 16px;\n   }\n`\n\nexport const PraticeContainer = styled.div`\n   border: 1px solid #254979;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   padding: 10px 0;\n`\n\nexport const HeaderContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   padding: 0 15px;\n`\n\nexport const AnswerList = styled.ul`\n   flex: 2 1;\n   list-style: none;\n   display: flex;\n\n   li {\n      border: 1px solid #0e0e0e;\n      border-radius: 4px;\n      margin-right: 10px;\n      padding: 5px;\n\n      > span {\n         margin-right: 5px;\n      }\n\n      > strong {\n         background: #254979;\n         color: #ffffff;\n         padding: 1px 6px 2px 5px;\n         border-radius: 2px;\n         text-align: center;\n      }\n   }\n`\n\nexport const OptionButtonsContainer = styled.div`\n   flex: 1 1;\n   display: flex;\n   flex-direction: row-reverse;\n`\n\nexport const EndPraticeButton = styled.button`\n   width: 150px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   height: 36px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   span {\n      margin-left: 7px;\n   }\n`\n\nexport const DownloadPDFButton = styled.button`\n   width: 150px;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   height: 36px;\n   background: #ff2116;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n   margin-right: 10px;\n\n   span {\n      margin-left: 7px;\n   }\n`\n\nexport const ControlsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   padding: 0 10px;\n   margin-top: 20px;\n`\n\nexport const Control = styled.div`\n   display: flex;\n   align-items: center;\n\n   &:hover {\n      cursor: pointer;\n   }\n\n   svg {\n      margin: 5px;\n   }\n`\nexport const QuestionHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   border-top: 1px solid #c9c9c9;\n   border-bottom: 1px solid #c9c9c9;\n   padding: 15px;\n   margin-top: 15px;\n   margin-bottom: 15px;\n\n   strong {\n      font-size: 16px;\n\n      span {\n         text-align: center;\n         border-radius: 50%;\n         border: 1px solid #254979;\n         padding: 5px 7px;\n         margin-right: 8px;\n      }\n   }\n\n   > span {\n      color: #75797d;\n      font-size: 12px;\n   }\n`\n\nexport const QuestionStatement = styled.div`\n   padding: 0 15px;\n   font-size: 14px;\n   line-height: 2.25;\n\n   p {\n      display: block;\n      align-items: center;\n      margin-bottom: 10px;\n\n      > img {\n         vertical-align: middle;\n         margin: 0 3px;\n      }\n   }\n\n   center {\n      margin-bottom: 10px;\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 15px;\n\n   li {\n      margin-top: 20px;\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 10px;\n      }\n   }\n`\n\nexport const AnswerContainer = styled.div`\n   margin: 20px 15px 15px;\n   height: 76px;\n\n   p {\n      margin-bottom: 5px;\n   }\n`\n\nexport const AnswerContent = styled.div`\n   display: flex;\n   justify-content: space-around;\n   padding: 10px;\n   border: 1px solid #c9c9c9;\n   border-radius: 4px;\n\n   @media (max-width: 1090px) {\n      justify-content: space-between;\n   }\n\n   @media (max-width: 768px) {\n   }\n`\n\nexport const AnswerButton = styled.button`\n   background: ${props => (props.selected ? '#E8EAED' : '#254979')};\n   color: ${props => (props.selected ? '#254979' : '#FFFFFF')};\n   border: 1px solid ${props => (props.selected ? '#254979' : '#E8EAED')};\n   border-radius: 50%;\n   padding: 14px 18px;\n   font-weight: bold;\n   font-size: 16px;\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${props =>\n         props.selected ? darken(0.1, '#E8EAED') : darken(0.1, '#254979')};\n   }\n`\n","import React, { Component } from 'react'\n\nimport {\n   FaRegFileAlt,\n   FaFilter,\n   FaRegFilePdf,\n   FaHourglassEnd,\n   FaArrowLeft,\n   FaArrowRight,\n} from 'react-icons/fa'\nimport { toast } from 'react-toastify'\n\nimport history from '../../services/history'\nimport api from '../../services/api'\n\nimport {\n   Container,\n   Title,\n   TextHeader,\n   PraticeContainer,\n   HeaderContainer,\n   AnswerList,\n   OptionButtonsContainer,\n   EndPraticeButton,\n   DownloadPDFButton,\n   ControlsContainer,\n   Control,\n   QuestionHeader,\n   QuestionStatement,\n   AlternativesList,\n   AnswerContainer,\n   AnswerContent,\n   AnswerButton,\n} from './styles'\n\nexport default class Pratice extends Component {\n   state = {\n      id: 0,\n      questions: [],\n      id_current_question: 0,\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      const { data } = await api.get(`/pratice/${id}`)\n\n      const questions = data.questions.map((question, index) => ({\n         ...question,\n         pratice_number: ('0' + (index + 1)).slice(-2),\n         user_answer: '-',\n         alternatives: question.alternatives.reverse(),\n      }))\n\n      this.setState({\n         id: data.id,\n         questions,\n      })\n   }\n\n   handleEndPratice = async questions => {\n      const { id } = this.state\n\n      await localStorage.setItem(\n         '@simulado/resultado',\n         JSON.stringify({\n            id,\n            results: questions.map(q => ({\n               number: q.pratice_number,\n               user_answer: q.user_answer,\n               answer: q.answer,\n            })),\n         })\n      )\n\n      history.push({\n         pathname: `/simulados/${id}/resultado`,\n      })\n   }\n\n   handleDownloadPDF = () => {\n      const { id } = this.state\n\n      // history.push(`/pdf/${id}`)\n   }\n\n   handleChangeQuestion = value => {\n      const { questions, id_current_question } = this.state\n      const new_question = id_current_question + value\n\n      if (new_question >= 0 && new_question < questions.length) {\n         this.setState({ id_current_question: new_question })\n      }\n   }\n\n   handleSelectAnswer = (id, letter) => {\n      const { questions } = this.state\n\n      questions[Number(id) - 1].user_answer = letter\n\n      this.setState({ questions })\n   }\n\n   render() {\n      const { id, questions, id_current_question } = this.state\n\n      const current_question = questions[id_current_question]\n\n      if (questions.length === 0) {\n         return <h1>Loading</h1>\n      }\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <TextHeader>\n               <div>\n                  <FaFilter size={18} />\n                  <span>Resolver Simulado</span>\n               </div>\n               <span>Código: #{id}</span>\n            </TextHeader>\n            <PraticeContainer>\n               <HeaderContainer>\n                  <AnswerList>\n                     {questions.map((question, index) => (\n                        <li key={index}>\n                           <span>{question.pratice_number}</span>\n                           <strong>{question.user_answer}</strong>\n                        </li>\n                     ))}\n                  </AnswerList>\n                  <OptionButtonsContainer>\n                     <EndPraticeButton\n                        onClick={() => this.handleEndPratice(questions)}\n                     >\n                        <FaHourglassEnd />\n                        <span>Finalizar</span>\n                     </EndPraticeButton>\n                     <DownloadPDFButton onClick={this.handleDownloadPDF}>\n                        <FaRegFilePdf />\n                        <span>Download PDF</span>\n                     </DownloadPDFButton>\n                  </OptionButtonsContainer>\n               </HeaderContainer>\n               <ControlsContainer>\n                  <Control onClick={() => this.handleChangeQuestion(-1)}>\n                     <FaArrowLeft size={14} />\n                     <span>Anterior</span>\n                  </Control>\n                  {/* <p>Questão {current_question.pratice_number}</p> */}\n                  <Control onClick={() => this.handleChangeQuestion(1)}>\n                     <span>Próxima</span>\n                     <FaArrowRight size={14} />\n                  </Control>\n               </ControlsContainer>\n               <QuestionHeader>\n                  <strong>\n                     <span>{current_question.pratice_number}</span>\n                     (POSCOMP/{current_question.year} - Questão{' '}\n                     {current_question.number})\n                  </strong>\n                  <span>#{current_question.id}</span>\n               </QuestionHeader>\n               <QuestionStatement\n                  dangerouslySetInnerHTML={{\n                     __html: current_question.statement,\n                  }}\n               />\n               <AlternativesList>\n                  {current_question.alternatives.map(alternative => (\n                     <li key={alternative.letter}>\n                        <strong>{alternative.letter})</strong>\n                        <span\n                           dangerouslySetInnerHTML={{\n                              __html: alternative.content,\n                           }}\n                        />\n                     </li>\n                  ))}\n               </AlternativesList>\n               <AnswerContainer>\n                  <p>Escolha sua resposta</p>\n                  <AnswerContent>\n                     {current_question.alternatives.map(alternative => (\n                        <AnswerButton\n                           selected={\n                              alternative.letter ===\n                              current_question.user_answer\n                           }\n                           key={alternative.letter}\n                           onClick={() =>\n                              this.handleSelectAnswer(\n                                 current_question.pratice_number,\n                                 alternative.letter\n                              )\n                           }\n                        >\n                           {alternative.letter}\n                        </AnswerButton>\n                     ))}\n                  </AnswerContent>\n               </AnswerContainer>\n            </PraticeContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const FormContainer = styled.div``\n\nexport const TextHeader = styled.div`\n   display: flex;\n   align-items: center;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   span {\n      margin-left: 8px;\n      font-size: 18px;\n   }\n`\n\nexport const Form = styled.form`\n   padding: 0 15px 15px;\n   border: 1px solid #254979;\n   background: #ffffff;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n\n   p {\n      margin-top: 15px;\n      margin-bottom: 7px;\n   }\n`\n\nexport const AreasContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   div {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      & + div {\n         margin-top: 10px;\n      }\n\n      > label {\n         flex: 3 1;\n\n         span {\n            margin-left: 10px;\n         }\n      }\n\n      > div {\n         flex: 1 1;\n\n         input {\n            flex: 1;\n            border: 1px solid #cccccc;\n            border-radius: 4px;\n            height: 28px;\n            margin-left: 7px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   flex-direction: row-reverse;\n   margin-top: 25px;\n`\n\nexport const SubmitButton = styled.button.attrs({\n   type: 'submit',\n})`\n   height: 38px;\n   display: flex;\n   align-items: center;\n   padding: 0 25px;\n   background: #254979;\n   border: 0;\n   border-radius: 4px;\n   color: #ffffff;\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#254979')};\n   }\n`\n\nexport const ClearButton = styled.button`\n   height: 38px;\n   display: flex;\n   align-items: center;\n   margin-right: 10px;\n   padding: 0 25px;\n   background: #ffffff;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n\n   span {\n      margin-left: 7px;\n      font-size: 16px;\n   }\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${() => darken(0.15, '#ffffff')};\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaRegFileAlt,\n   FaHighlighter,\n   FaThumbtack,\n   FaFilter,\n   FaSearch,\n   FaTrashAlt,\n} from 'react-icons/fa'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\n\nimport api from '../../services/api'\nimport history from '../../services/history'\n\nimport {\n   Container,\n   Title,\n   FormContainer,\n   TextHeader,\n   Form,\n   AreasContainer,\n   ButtonsContainer,\n   SubmitButton,\n   ClearButton,\n} from './styles'\n\nexport default class Pratice extends Component {\n   state = {\n      exam_selected: [],\n      exams: [\n         { value: 'poscomp', label: 'POSCOMP' },\n         { value: 'enade', label: 'ENADE' },\n      ],\n      areas_selected: [],\n      exam_areas: [],\n      poscomp_areas: [\n         { value: '1', label: 'Matemática' },\n         { value: '2', label: 'Fundamentos de Computação' },\n         { value: '3', label: 'Tecnologia da Computação' },\n      ],\n      enade_areas: [\n         { value: '1', label: 'ENADE 1' },\n         { value: '2', label: 'ENADE 2' },\n         { value: '3', label: 'ENADE 3' },\n         { value: '4', label: 'ENADE 4' },\n         { value: '5', label: 'ENADE 5' },\n      ],\n      questions: [],\n   }\n\n   handleChangeExam = event => {\n      const { exam_selected, poscomp_areas, enade_areas } = this.state\n\n      if (exam_selected !== event) {\n         var exam_areas =\n            event.value === 'poscomp' ? poscomp_areas : enade_areas\n         exam_areas.forEach(area => {\n            area.is_selected = false\n            area.amount = 0\n         })\n\n         this.setState({\n            exam_selected: event,\n            areas_selected: [],\n            exam_areas,\n         })\n      }\n   }\n\n   handleSelectArea = index => {\n      var { exam_areas } = this.state\n\n      exam_areas[index].is_selected = !exam_areas[index].is_selected\n      exam_areas[index].amount = exam_areas[index].is_selected ? 1 : 0\n\n      this.setState({ exam_areas })\n   }\n\n   handleChangeAreaAmount = (event, index) => {\n      var { exam_areas } = this.state\n\n      exam_areas[index].amount = event.target.value\n\n      this.setState({ exam_areas })\n   }\n\n   verifySelectedAreas = areas => {\n      const selected_areas = areas.filter(area => area.is_selected)\n\n      if (selected_areas.length === 0) {\n         return false\n      }\n\n      return selected_areas.filter(area => area.amount > 0).length !== 0\n   }\n\n   handleSubmitForm = async event => {\n      event.preventDefault()\n\n      const { exam_selected, exam_areas } = this.state\n\n      if (Object.keys(exam_selected).length === 0) {\n         toast.error('Selecione um concurso')\n         return\n      }\n\n      if (!this.verifySelectedAreas(exam_areas)) {\n         toast.error('Selecione ao menos uma questão')\n         return\n      }\n\n      const areas_aux = exam_areas.filter(area => area.amount > 0)\n\n      const response = await api.post('/pratice', {\n         exam: exam_selected.value,\n         areas: areas_aux.map(area => ({\n            id: area.label,\n            amount: area.amount,\n         })),\n      })\n\n      console.log(`Redirect to /simulados/${response.data.id}`)\n\n      history.push(`/simulados/${response.data.id}`)\n   }\n\n   handleClearForm = event => {\n      event.preventDefault()\n\n      this.setState({\n         exam_selected: {},\n         exam_areas: [],\n      })\n   }\n\n   render() {\n      const { exam_selected, exams, exam_areas } = this.state\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <FormContainer>\n               <TextHeader>\n                  <FaFilter size={18} />\n                  <span>Filtros</span>\n               </TextHeader>\n               <Form>\n                  <p>Concurso</p>\n                  <Select\n                     isSearchable={false}\n                     isClearable\n                     value={exam_selected}\n                     options={exams}\n                     onChange={this.handleChangeExam}\n                  />\n                  <p>Áreas</p>\n                  <AreasContainer>\n                     {exam_areas.map((area, index) => (\n                        <div key={area.value}>\n                           <label>\n                              <input\n                                 type=\"checkbox\"\n                                 checked={area.is_selected}\n                                 onChange={() => this.handleSelectArea(index)}\n                              />\n                              <span>{area.label}</span>\n                           </label>\n                           <div>\n                              <span>Quantidade:</span>\n                              <input\n                                 type=\"number\"\n                                 min={1}\n                                 max={20}\n                                 disabled={!area.is_selected}\n                                 value={area.amount}\n                                 onChange={event =>\n                                    this.handleChangeAreaAmount(event, index)\n                                 }\n                              />\n                           </div>\n                        </div>\n                     ))}\n                  </AreasContainer>\n                  <ButtonsContainer>\n                     <SubmitButton onClick={this.handleSubmitForm}>\n                        <FaSearch size={16} />\n                        <span>Gerar</span>\n                     </SubmitButton>\n                     <ClearButton onClick={this.handleClearForm}>\n                        <FaTrashAlt size={16} />\n                        <span>Limpar</span>\n                     </ClearButton>\n                  </ButtonsContainer>\n               </Form>\n            </FormContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   max-width: 1065px;\n   margin: 0 auto;\n\n   @media (max-width: 1090px) {\n      padding: 0 10px;\n   }\n`\n\nexport const Title = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px 0;\n\n   span {\n      margin-left: 12px;\n      font-size: 22px;\n      font-weight: 700;\n      text-transform: uppercase;\n   }\n`\n\nexport const TextHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   background: #254979;\n   color: #ffffff;\n   padding: 20px 15px;\n   border-top-left-radius: 4px;\n   border-top-right-radius: 4px;\n\n   div {\n      display: flex;\n      align-items: center;\n\n      span {\n         margin-left: 8px;\n         font-size: 18px;\n      }\n   }\n\n   > span {\n      font-size: 16px;\n   }\n`\n\nexport const ResultContainer = styled.div`\n   background: #ffffff;\n   border: 1px solid #254979;\n   border-bottom-left-radius: 4px;\n   border-bottom-right-radius: 4px;\n   padding: 10px 50px;\n\n   display: flex;\n   flex-direction: column;\n`\n\nexport const ResultHeader = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-around;\n\n   border-bottom: 1px solid #c9c9c9;\n   padding-bottom: 10px;\n`\n\nexport const ResultList = styled.ul`\n   list-style: none;\n\n   li {\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      margin-top: 10px;\n      border-bottom: 1px solid #c9c9c9;\n      padding-bottom: 10px;\n   }\n`\n\nexport const StatisticsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   margin: 20px -5px 10px;\n\n   div {\n      flex: 1;\n      border: 1px solid #c9c9c9;\n      border-radius: 4px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 15px 0;\n      margin: 5px;\n\n      strong {\n         font-size: 26px;\n      }\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   button {\n      width: 24%;\n      margin: 10px 5px;\n      padding: 10px;\n      border: 1px solid #c9c9c9;\n      border-radius: 4px;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${() => darken(0.1, '#ffffff')};\n      }\n\n      span {\n         margin-left: 7px;\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport {\n   FaRegFileAlt,\n   FaPencilAlt,\n   FaUserTimes,\n   FaUserCheck,\n} from 'react-icons/fa'\nimport { MdRefresh } from 'react-icons/md'\n\nimport history from '../../services/history'\n\nimport {\n   Container,\n   Title,\n   TextHeader,\n   ResultContainer,\n   ResultHeader,\n   ResultList,\n   StatisticsContainer,\n   ButtonsContainer,\n} from './styles'\n\nexport default class PraticeResult extends Component {\n   state = {\n      id: 0,\n      results: [],\n      statistics: {},\n   }\n\n   async componentDidMount() {\n      const { id } = this.props.match.params\n\n      const results = JSON.parse(\n         await localStorage.getItem('@simulado/resultado')\n      )\n\n      console.log(results)\n\n      if (results === null || results.id !== id) {\n         history.push({\n            pathname: `/simulados/${id}`,\n         })\n      }\n\n      const { results: questions_results } = results\n\n      const total_questions = questions_results.length\n      const total_corrects = questions_results.filter(\n         res => res.user_answer === res.answer\n      ).length\n\n      const statistics = {\n         // percent: Math.floor((total_corrects * 100) / total_questions),\n         percent: ((total_corrects / total_questions) * 100).toFixed(2) + '%',\n         corrects: total_corrects,\n         wrongs: total_questions - total_corrects,\n         total: total_questions,\n      }\n\n      this.setState({ id, results: questions_results, statistics })\n   }\n\n   handleNewPratice = () => {\n      history.push(`/simulados`)\n   }\n\n   handleRepeatPratice = () => {\n      const { id } = this.state\n\n      history.push(`/simulados/${id}`)\n   }\n\n   render() {\n      const { id, results, statistics } = this.state\n\n      return (\n         <Container>\n            <Title>\n               <FaRegFileAlt size={24} />\n               <span>Simulados</span>\n            </Title>\n            <TextHeader>\n               <div>\n                  <FaPencilAlt size={18} />\n                  <span>Resultados</span>\n               </div>\n               <span>Código: #{id}</span>\n            </TextHeader>\n            <ResultContainer>\n               <ResultHeader>\n                  <span>Questão</span>\n                  <span>Gabarito</span>\n                  <span>Resposta</span>\n                  <span>Acertou?</span>\n               </ResultHeader>\n               <ResultList>\n                  {results.map(question => (\n                     <li key={question.number}>\n                        <span>{question.number}</span>\n                        <span>{question.answer}</span>\n                        <span>{question.user_answer}</span>\n                        <span>\n                           {question.answer === question.user_answer ? (\n                              <FaUserCheck color=\"#0F0\" />\n                           ) : (\n                              <FaUserTimes color=\"#F00\" />\n                           )}\n                        </span>\n                     </li>\n                  ))}\n               </ResultList>\n               <StatisticsContainer>\n                  <div>\n                     <strong>{statistics.percent}</strong>\n                     <span>Acertos</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.total}</strong>\n                     <span>Questões</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.corrects}</strong>\n                     <span>Corretas</span>\n                  </div>\n                  <div>\n                     <strong>{statistics.wrongs}</strong>\n                     <span>Erradas</span>\n                  </div>\n               </StatisticsContainer>\n               <ButtonsContainer>\n                  <button onClick={this.handleNewPratice}>\n                     <FaRegFileAlt size={14} />\n                     <span>Novo Simulado</span>\n                  </button>\n                  <button onClick={this.handleRepeatPratice}>\n                     <MdRefresh size={16} />\n                     <span>Repetir Simulado</span>\n                  </button>\n               </ButtonsContainer>\n            </ResultContainer>\n         </Container>\n      )\n   }\n}\n","import React, { Component } from 'react'\nimport Pdf from 'react-to-pdf'\n\nconst ref = React.createRef()\n\nexport default class PDF extends Component {\n   render() {\n      return (\n         <div>\n            <Pdf targetRef={ref} filename=\"code-example.pdf\">\n               {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\n            </Pdf>\n            <div ref={ref}>\n               <h1>Hello CodeSandbox</h1>\n               <h2>Start editing to see some magic happen!</h2>\n               <img src=\"https://latex.codecogs.com/svg.latex?\\frac{1}{2}\" />{' '}\n            </div>\n         </div>\n      )\n   }\n}\n\n// import React, { Component } from 'react'\n// import { Image } from '@react-pdf/renderer'\n// import XMLParser from 'react-xml-parser'\n// import {\n//    Viewer,\n//    PDFDocument,\n//    PDFPage,\n//    PDFView,\n//    PDFText,\n//    QuestionNumber,\n//    QuestionStatement,\n// } from './styles'\n\n// import api from '../../services/api'\n\n// export default class PDF extends Component {\n//    state = {\n//       loading: true,\n//       id: 0,\n//       questions: [],\n//    }\n\n//    async componentDidMount() {\n//       const { id } = this.props.match.params\n\n//       const { data } = await api.get(`/pratice/${id}`)\n\n//       var questions = data.questions.map((question, index) => ({\n//          ...question,\n//          pratice_number: ('0' + (index + 1)).slice(-2),\n//          user_answer: '-',\n//          alternatives: question.alternatives.reverse(),\n//       }))\n\n//       for (const question of questions) {\n//          const xml = new XMLParser().parseFromString(\n//             `<xml>${question.statement}</xml>`\n//          )\n\n//          var statement_to_pdf = []\n//          for (const child of xml.children) {\n//             switch (child.name) {\n//                case 'p':\n//                   statement_to_pdf.push({ type: 1, content: child.value })\n//                   break\n//                case 'center':\n//                   const aux_childs = child.children\n//                   for (const aux_child of aux_childs) {\n//                      if (aux_child.name === 'img') {\n//                         statement_to_pdf.push({\n//                            type: 2,\n//                            content: aux_child.attributes.src,\n//                         })\n//                      }\n//                   }\n//                   break\n//             }\n//          }\n\n//          question.pdf_state = statement_to_pdf\n//       }\n\n//       this.setState({\n//          id: data.id,\n//          questions,\n//          loading: false,\n//       })\n//    }\n\n//    render() {\n//       const { loading, questions } = this.state\n\n//       if (loading) {\n//          return <h1>Loading</h1>\n//       }\n\n//       return (\n//          <Viewer>\n//             <PDFDocument>\n//                <PDFPage size=\"A4\">\n//                   {questions.map(question => (\n//                      <PDFView key={question.id}>\n//                         <QuestionNumber>\n//                            {question.pratice_number}){' '}\n//                            {String(question.exam).toLocaleUpperCase()}/\n//                            {question.year}\n//                         </QuestionNumber>\n//                         <QuestionStatement>\n//                            {question.pdf_state.map(state =>\n//                               state.type === 1 ? (\n//                                  <PDFText>{state.content}</PDFText>\n//                               ) : (\n//                                  <Image src={state.content} />\n//                               )\n//                            )}\n//                         </QuestionStatement>\n//                      </PDFView>\n//                   ))}\n//                </PDFPage>\n//             </PDFDocument>\n//          </Viewer>\n//       )\n//    }\n// }\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Admin from './pages/Admin'\nimport Question from './pages/Question'\nimport Pratice from './pages/Pratice'\nimport SearchPratice from './pages/SearchPratice'\nimport PraticeResult from './pages/PraticeResult'\n\nimport PDF from './pages/PDF'\n\nexport default function Routes() {\n   return (\n      <Switch>\n         <Route path=\"/\" exact component={Home} />\n         <Route path=\"/admin\" component={Admin} />\n         <Route path=\"/questao/:id\" component={Question} />\n         <Route path=\"/simulados/:id/resultado\" component={PraticeResult} />\n         <Route path=\"/simulados/:id\" component={Pratice} />\n         <Route path=\"/simulados\" component={SearchPratice} />\n\n         <Route path=\"/pdf/:id\" component={PDF} />\n      </Switch>\n   )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n   * {\n      @import url('https://fonts.googleapis.com/css?family=Noto+Sans&display=swap');\n      font-family: 'Noto Sans', sans-serif;\n\n      margin: 0;\n      padding: 0;\n      outline: 0;\n      box-sizing: border-box;\n   }\n\n   body {\n      background: #E8EAED;\n      -webkit-font-smoothing: antialiased !important;\n   }\n\n   body, input, button {\n      font: 14px Roboto, sans-serif;\n   }\n\n   #root {\n      margin: 0 auto;\n      padding: 0;\n      min-height: calc(100vh);\n   }\n\n   button {\n      cursor: pointer;\n   }\n`\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport history from './services/history'\n\nimport Header from './components/Header'\nimport Routes from './routes'\nimport GlobalCSS from './styles/global'\n\nfunction App() {\n   return (\n      <>\n         <HashRouter history={history}>\n            <Header />\n            <Routes />\n            <GlobalCSS />\n            <ToastContainer autoClose={3000} />\n         </HashRouter>\n      </>\n   )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}