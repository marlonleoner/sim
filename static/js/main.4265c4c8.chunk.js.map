{"version":3,"sources":["assets/images/logo_petcc.svg","assets/images/logo_sbc.png","assets/images/logo_inep.png","styles/colors.js","components/Header/styles.js","components/Header/index.js","services/api.js","pages/Sim/styles.js","pages/Sim/index.js","pages/Home/styles.js","pages/Home/index.js","components/Loading/styles.js","components/Loading/index.js","pages/Exam/styles.js","pages/Exam/index.js","pages/Exams/styles.js","pages/Exams/index.js","pages/Admin/styles.js","pages/Admin/index.js","pages/Question/styles.js","pages/Question/index.js","pages/Questions/styles.js","pages/Questions/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["module","exports","HeaderContainer","styled","div","HeaderContent","header","LogoPET","img","SingInButton","Link","props","theme","primary","darken","Header","to","src","Logo","api","axios","create","baseURL","Container","SimHeader","ButtonEndSim","button","QuestionContainer","Back","Next","QuestionContent","AlternativeList","form","AlternativeItem","StatementContainer","type","TexContainer","MathJax","Context","attrs","input","script","options","asciimath2jax","useMathMLspacing","delimiters","preview","TexText","Text","Component","ExamContainer","exam","Colors","ImagesContainer","TextContainer","Home","document","title","alt","LogoINEP","LogoSBC","rotate","keyframes","LoadingContainer","css","LoadingContent","AiOutlineLoading","size","color","Loading","ExamList","ul","ExamItem","ButtonMoreExams","Exam","state","loading","years","this","match","params","history","push","toUpperCase","get","response","occurrences","data","sort","a","b","year","setState","id","last_occurrences","slice","reverse","console","log","name","description","map","item","key","LinksContainer","ExamsList","ButtonsContainer","Exams","occurrence","owner","full_name","href","YearInput","min","max","InputStatementContainer","PreviewStatementContainer","AddButton","InputStatementList","InputStatementItem","StatementInput","StatementPreviewList","placeholder","Statement","p","AlternativesList","li","AlternativeContent","span","AddQuestionButton","exam_options","value","label","year_options","type_options","Admin","year_input","question_number","statement","content","alternatives","letter","handleExamInputChange","option","handleYearInputChange","handleQuestionNumberChange","event","target","handleAddStatement","length","handleStatementInputChange","index","findIndex","s","handleTypeInputChange","handleAlternativesInputChange","handleAddQuestion","String","Number","put","number","anwser","area","justification","status","toast","success","isSearchable","onChange","onClick","dangerouslySetInnerHTML","__html","QuestionInfos","QuestionNumber","h3","QuestionID","children","checked","Question","question","exam_info","localStorage","getItem","toLowerCase","exam_response","JSON","stringify","setItem","Object","values","parse","alternative","answer","handleOnChange","disabled","ExamInfoContainer","DownloadContainer","FilesContainer","FileItem","SolveButton","ExamInfo","TextInfo","QuestionsContainer","HeaderQustions","QuestionsNumber","h1","QuestionsList","InfoQuestionContainer","ButtonViewQuestion","ButtonViewQuestionContent","Questions","questions","componentDidMount","filter","Routes","path","exact","component","createGlobalStyle","createHashHistory","App","autoClose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4265c4c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_petcc.350d0aae.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_sbc.cd4cd97f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_inep.b41a5487.png\";","export default {\n   primary: '#7159c1',\n   dark: '#191920',\n   poscomp: '#3D856A',\n   poscomp_dark: '#21493a',\n   enade: '#412FD5',\n   enade_dark: '#271b89',\n}\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { darken } from 'polished'\n\nimport Colors from '../../styles/colors'\n\nexport const HeaderContainer = styled.div`\n   border-bottom: 1px solid #ccc;\n`\n\nexport const HeaderContent = styled.header`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   margin: auto;\n   max-width: 1065px;\n   height: 82px;\n`\n\nexport const LogoPET = styled.img`\n   width: 120px;\n   height: 80px;\n`\n\nexport const SingInButton = styled(Link)`\n   width: 110px;\n   height: 45px;\n   border: 1px solid #e1e1e1;\n   border-radius: 4px;\n   background: #010305;\n   /* background: ${props => props.theme.primary}; */\n   color: #fff;\n   font-weight: bold;\n   font-size: 18px;\n   font-family: 'Roboto', sans-serif;\n\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${darken(-0.15, '#010305')};\n   }\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Logo from '../../assets/images/logo_petcc.svg'\nimport { HeaderContainer, HeaderContent, LogoPET, SingInButton } from './styles'\n\nconst Header = () => (\n   <HeaderContainer>\n      <HeaderContent>\n         <Link to=\"/\">\n            <LogoPET src={Logo} />\n         </Link>\n         <SingInButton to=\"/admin\">Admin</SingInButton>\n      </HeaderContent>\n   </HeaderContainer>\n)\n\nexport default Header\n","import axios from 'axios'\n\nconst api = axios.create({\n   baseURL: 'https://petcc-sim.firebaseio.com',\n})\n\nexport default api\n","import MathJax from 'react-mathjax2'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   padding: 30px;\n   border-radius: 4px;\n`\n\nexport const SimHeader = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   margin-bottom: 20px;\n\n   h1 {\n      font-family: 'Montserrat', sans-serif;\n      font-size: 22px;\n      text-transform: uppercase;\n      letter-spacing: 1.5px;\n   }\n\n   div {\n      display: flex;\n      align-items: center;\n\n      p {\n         background: #7129c1;\n         color: #fff;\n         border: 0;\n         padding: 10px 15px;\n         border-radius: 4px;\n      }\n   }\n`\n\nexport const ButtonEndSim = styled.button`\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   margin-left: 15px;\n\n   background: #7129c1;\n   border: 0;\n   padding: 10px 15px;\n   border-radius: 4px;\n   color: #fff;\n   font-weight: 600;\n   font-family: 'Montserrat', sans-serif;\n\n   transition: background 0.7s;\n   &:hover {\n      background: ${darken(0.1, '#7129c1')};\n   }\n\n   svg {\n      margin-right: 5px;\n   }\n`\n\nexport const QuestionContainer = styled.div`\n   header {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      padding-bottom: 20px;\n      margin-bottom: 20px;\n      border-bottom: 1px solid #ddd;\n\n      p {\n         font-family: 'Montserrat', sans-serif;\n         font-size: 18px;\n         text-align: center;\n         text-transform: uppercase;\n         color: #33474c;\n         letter-spacing: 1.5px;\n      }\n   }\n`\n\nexport const Back = styled.div`\n   display: flex;\n   align-items: center;\n   color: #33474c;\n\n   &:hover {\n      cursor: pointer;\n   }\n`\n\nexport const Next = styled.div`\n   display: flex;\n   align-items: center;\n   color: #33474c;\n\n   &:hover {\n      cursor: pointer;\n   }\n`\n\nexport const QuestionContent = styled.div`\n   display: flex;\n   flex-direction: column;\n   padding-bottom: 20px;\n   border-bottom: 1px solid #ddd;\n\n   span {\n      font-family: 'Montserrat', sans-serif;\n      font-size: 13px;\n      font-weight: bold;\n      margin-bottom: 15px;\n   }\n\n   p {\n      font-family: 'Montserrat', sans-serif;\n      color: #575757;\n      font-size: 17px;\n   }\n`\n\nexport const AlternativeList = styled.form`\n   display: flex;\n   flex-direction: column;\n`\n\nexport const AlternativeItem = styled.div`\n   border-bottom: 1px solid #eee;\n\n   label {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      padding: 15px 5px;\n\n      &:hover {\n         cursor: pointer;\n      }\n\n      div {\n         margin-left: 10px;\n\n         span {\n            margin: 0;\n         }\n      }\n   }\n\n   strong {\n      margin-left: 10px;\n   }\n\n   span {\n      margin-left: 10px;\n   }\n`\n\nexport const StatementContainer = styled.div`\n   display: flex;\n   font-family: 'Montserrat', sans-serif;\n   color: #575757;\n   font-size: 18px;\n\n   justify-content: ${props => (props.type === 1 ? 'left' : 'center')};\n   font-weight: ${props => (props.type === 1 ? 'normal' : 'bold')};\n   margin-bottom: 10px;\n\n   &:last-child {\n      margin-bottom: 0;\n   }\n`\n\nexport const TexContainer = styled(MathJax.Context).attrs({\n   input: 'ascii',\n   script:\n      'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML',\n   options: {\n      asciimath2jax: {\n         useMathMLspacing: true,\n         delimiters: [['$$', '$$']],\n         preview: 'none',\n      },\n   },\n})``\n\nexport const TexText = styled(MathJax.Text)``\n","import React, { Component } from 'react'\nimport { MdNavigateBefore, MdNavigateNext } from 'react-icons/md'\nimport { FaFileExport } from 'react-icons/fa'\n\nimport api from '../../services/api'\n\nimport {\n   Container,\n   SimHeader,\n   ButtonEndSim,\n   QuestionContainer,\n   Back,\n   Next,\n   QuestionContent,\n   AlternativeList,\n   AlternativeItem,\n   StatementContainer,\n   TexContainer,\n   TexText,\n} from './styles'\n\nexport default class Exam extends Component {\n   state = {\n      selectedOption: '',\n      loading: true,\n      questions: [],\n      currentQuestion: 0,\n   }\n\n   async componentDidMount() {\n      const response = await api.get(`/questions.json`)\n\n      this.setState({\n         questions: response.data,\n         loading: false,\n      })\n   }\n\n   handleOptionChange = e => {\n      this.setState({\n         selectedOption: e.target.value,\n      })\n   }\n\n   handleChangeQuestion = value => {\n      const { currentQuestion, questions } = this.state\n      const newValue = currentQuestion + value\n\n      if (newValue >= 0 && newValue < questions.length) {\n         this.setState({ currentQuestion: newValue })\n      }\n   }\n\n   render() {\n      const { selectedOption, currentQuestion, questions, loading } = this.state\n\n      const question = questions[currentQuestion]\n\n      if (loading) {\n         return <h1>Carregando...</h1>\n      }\n\n      return (\n         <Container>\n            <SimHeader>\n               <h1>Simulado</h1>\n               <div>\n                  <p>XX/{questions.length}</p>\n                  <ButtonEndSim>\n                     <FaFileExport size={16} color=\"#FFF\" />\n                     FINALIZAR SIMULADO\n                  </ButtonEndSim>\n               </div>\n            </SimHeader>\n\n            <QuestionContainer>\n               <header>\n                  <Back onClick={() => this.handleChangeQuestion(-1)}>\n                     <MdNavigateBefore size={24} />\n                     Anterior\n                  </Back>\n                  <p>Questão {question.number}</p>\n                  <Next onClick={() => this.handleChangeQuestion(1)}>\n                     Próxima\n                     <MdNavigateNext size={24} />\n                  </Next>\n               </header>\n               <QuestionContent>\n                  <span>(POSCOMP/{question.year})</span>\n                  {question.statement.map(item =>\n                     item.type === 3 ? (\n                        <p>Imagem</p>\n                     ) : (\n                        <StatementContainer type={item.type}>\n                           <TexContainer>\n                              <TexText text={item.content} />\n                           </TexContainer>\n                        </StatementContainer>\n                     )\n                  )}\n               </QuestionContent>\n               <AlternativeList>\n                  {question.alternatives.map(alternative => (\n                     <AlternativeItem key={alternative.letter}>\n                        <label>\n                           <input\n                              type=\"radio\"\n                              value={alternative.letter}\n                              checked={selectedOption === alternative.letter}\n                              onChange={this.handleOptionChange}\n                           />\n                           <strong>{alternative.letter})</strong>\n                           {/* <span>{alternative.content}</span> */}\n                           <TexContainer>\n                              <TexText text={alternative.content} />\n                           </TexContainer>\n                        </label>\n                     </AlternativeItem>\n                  ))}\n               </AlternativeList>\n            </QuestionContainer>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport Colors from '../../styles/colors'\n\nexport const Container = styled.div`\n   display: flex;\n   padding: 24px 124px;\n   align-items: center;\n   justify-content: center;\n`\n\nexport const ExamContainer = styled.div`\n   box-shadow: 0 3px 12px 0 rgba(71, 71, 71, 0.2);\n\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n\n   width: 580px;\n   height: 680px;\n\n   margin: ${props =>\n      props.exam === 1 ? '24px 12px 24px 24px' : '24px 24px 24px 12px'};\n   border: 2px solid #e8e8e8;\n   border-radius: 15px;\n   background: #fff;\n   padding: 48px 64px;\n\n   p {\n      font-size: 22px;\n   }\n\n   a {\n      padding: 16px 100px;\n      border: 0;\n      border-radius: 36px;\n      color: #fff;\n      background: ${props =>\n         props.exam === 1 ? Colors.enade : Colors.poscomp};\n\n      font-size: 20px;\n      font-weight: bold;\n      text-align: center;\n      text-transform: uppercase;\n      letter-spacing: 1.75px;\n      font-family: 'Raleway', sans-serif;\n\n      transition: background 0.35s;\n      &:hover {\n         background: #000;\n      }\n   }\n\n   strong {\n      border-bottom: 3px solid\n         ${props => (props.exam === 1 ? Colors.enade : Colors.poscomp)};\n   }\n`\n\nexport const ImagesContainer = styled.div`\n   display: flex;\n   justify-content: space-between;\n\n   img {\n      width: 80px;\n      height: 80px;\n      padding: 0 10px;\n   }\n`\n\nexport const TextContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   strong {\n      width: 270px;\n      font-size: 48px;\n      color: #010101;\n\n      margin-bottom: 30px;\n      padding-bottom: 10px;\n   }\n\n   p {\n      font-size: 18px;\n      font-family: 'Roboto', sans-serif;\n      color: #3f3f3f;\n      text-align: justify;\n   }\n`\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport LogoPET from '../../assets/images/logo_petcc.svg'\nimport LogoSBC from '../../assets/images/logo_sbc.png'\nimport LogoINEP from '../../assets/images/logo_inep.png'\n\nimport {\n   Container,\n   ExamContainer,\n   ImagesContainer,\n   TextContainer,\n} from './styles'\n\nexport default class Home extends Component {\n   componentDidMount() {\n      document.title = 'Home Page'\n   }\n\n   render() {\n      return (\n         <Container>\n            <ExamContainer exam={1}>\n               <ImagesContainer>\n                  <img src={LogoPET} alt=\"PET/CC Logo\" />\n                  <img src={LogoINEP} alt=\"INEP Logo\" />\n               </ImagesContainer>\n               <TextContainer>\n                  <strong>ENADE</strong>\n                  <p>\n                     O Exame Nacional de Desempenho dos Estudantes (Enade)\n                     avalia o rendimento dos concluintes dos cursos de graduação\n                     em relação aos conteúdos programáticos previstos nas\n                     diretrizes curriculares dos cursos, o desenvolvimento de\n                     competências e habilidades necessárias ao aprofundamento da\n                     formação geral e profissional, e o nível de atualização dos\n                     estudantes com relação à realidade brasileira e mundial.\n                  </p>\n               </TextContainer>\n               <Link to=\"/enade\">Mais Detalhes</Link>\n            </ExamContainer>\n            <ExamContainer exam={2}>\n               <ImagesContainer>\n                  <img src={LogoPET} alt=\"PET/CC Logo\" />\n                  <img src={LogoSBC} alt=\"SBC Logo\" />\n               </ImagesContainer>\n               <TextContainer>\n                  <strong>POSCOMP</strong>\n                  <p>\n                     O POSCOMP foi concebido para permitir que os candidatos a\n                     cursar Programas de Pós-Graduação em Computação possam\n                     participar dos processos seletivos em vários Programas no\n                     país, sem a necessidade de deslocamento para a sede de cada\n                     um dos Programas postulados pelo candidato, cumprindo assim\n                     um forte papel de inclusão social.\n                  </p>\n               </TextContainer>\n               <Link to=\"/poscomp\">Mais Detalhes</Link>\n            </ExamContainer>\n         </Container>\n      )\n   }\n}\n","import styled, { keyframes, css } from 'styled-components'\nimport { AiOutlineLoading } from 'react-icons/ai'\n\nconst rotate = keyframes`\n   from {\n      transform: rotate(0deg);\n   }\n\n   to {\n      transform: rotate(360deg);\n   }\n`\n\nexport const LoadingContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   height: calc(100vh - 90px);\n\n   ${css`\n      svg {\n         animation: ${rotate} 2s linear infinite;\n      }\n   `};\n`\n\nexport const LoadingContent = styled(AiOutlineLoading).attrs({\n   size: 72,\n   color: '#000',\n})``\n","import React from 'react'\n\nimport { LoadingContainer, LoadingContent } from './styles'\n\nconst Loading = () => (\n   <LoadingContainer>\n      <LoadingContent />\n   </LoadingContainer>\n)\n\nexport default Loading\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { darken } from 'polished'\nimport Colors from '../../styles/colors'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-between;\n\n   margin: 200px auto 0;\n   max-width: 1065px;\n`\n\nexport const TextContainer = styled.div`\n   width: 565px;\n   display: flex;\n   flex-direction: column;\n\n   h2 {\n      font-size: 100px;\n      font-family: 'Roboto', sans-serif;\n      color: #111;\n   }\n\n   strong {\n      font-size: 70px;\n      font-family: 'Roboto', sans-serif;\n      color: #111;\n\n      border-bottom: 3px solid ${props => props.theme.primary};\n      margin-bottom: 30px;\n      padding-bottom: 45px;\n   }\n\n   p {\n      font-size: 20px;\n      font-family: 'Roboto', sans-serif;\n      color: #888;\n      text-align: justify;\n   }\n`\n\nexport const ExamContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n`\n\nexport const ExamList = styled.ul`\n   list-style: none;\n\n   li {\n      width: 300px;\n      height: 90px;\n\n      border: solid 2px #e8e8e8;\n      border-radius: 7px;\n      margin-bottom: 20px;\n   }\n`\n\nexport const ExamItem = styled.div`\n   width: 100%;\n   height: 100%;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   padding: 18px 36px;\n\n   span {\n      font-size: 42px;\n      text-align: right;\n   }\n\n   a {\n      font-size: 16px;\n      font-family: Arial, Helvetica, sans-serif;\n      font-weight: bold;\n      color: ${props => props.theme.primary};\n\n      &:hover {\n         text-decoration: underline;\n      }\n   }\n`\n\nexport const ButtonMoreExams = styled(Link)`\n   color: ${props => props.theme.primary};\n   font-size: 24px;\n   margin-bottom: 17px;\n\n   &:hover {\n      margin-bottom: 15px;\n      border-bottom: 2px solid ${props => props.theme.primary};\n   }\n`\n\n// export const TexContainer = styled(MathJax.Context).attrs({\n//    input: 'ascii',\n//    script:\n//       'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML',\n//    options: {\n//       asciimath2jax: {\n//          useMathMLspacing: true,\n//          delimiters: [['$$', '$$']],\n//          preview: 'none',\n//       },\n//    },\n// })``\n\n// export const TexText = styled(MathJax.Text)``\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport Colors from '../../styles/colors'\nimport api from '../../services/api'\n\nimport Logo from '../../assets/images/logo_petcc.svg'\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   TextContainer,\n   ExamContainer,\n   ExamList,\n   ExamItem,\n   ButtonMoreExams,\n} from './styles'\n\nexport default class Exam extends Component {\n   state = {\n      loading: true,\n      exam: {},\n      years: ['2019', '2018', '2017'],\n      theme: {\n         primary: '#000',\n      },\n   }\n\n   async componentDidMount() {\n      const { exam } = this.props.match.params\n\n      if (exam !== 'enade' && exam !== 'poscomp') {\n         this.props.history.push('/')\n      }\n\n      document.title = `PET-CC - ${exam.toUpperCase()}`\n\n      const response = await api.get(`/exams/${exam}.json`)\n\n      const occurrences = response.data.occurrences.sort(\n         (a, b) => a.year - b.year\n      )\n\n      this.setState({\n         exam: {\n            ...response.data,\n            id: exam,\n            last_occurrences: occurrences.slice(-3).reverse(),\n         },\n         loading: false,\n         theme: {\n            primary: exam === 'enade' ? Colors.enade : Colors.poscomp,\n         },\n      })\n   }\n\n   render() {\n      const { exam, years, theme, loading } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      console.log(exam)\n\n      return (\n         <ThemeProvider theme={theme}>\n            <Container>\n               <TextContainer>\n                  <h2>{exam.name}</h2>\n                  <strong>Provas Anteriores</strong>\n                  <p>{exam.description}</p>\n               </TextContainer>\n               <ExamContainer>\n                  <ExamList>\n                     {exam.last_occurrences.map(item => (\n                        <li key={item.year}>\n                           <ExamItem>\n                              <span>{item.year}</span>\n                              <Link to={`/${exam.id}/questoes/${item.year}`}>\n                                 Ver prova\n                              </Link>\n                           </ExamItem>\n                        </li>\n                     ))}\n                  </ExamList>\n                  <ButtonMoreExams to={`/${exam.id}/provas`}>\n                     Outras Provas\n                  </ButtonMoreExams>\n               </ExamContainer>\n            </Container>\n         </ThemeProvider>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   margin: 20px auto 0;\n   max-width: 1065px;\n\n   p {\n      font-size: 32px;\n      color: #404040;\n      margin-top: 15px;\n   }\n`\n\nexport const LinksContainer = styled.div`\n   span {\n      margin: 0 10px;\n      color: #404040;\n   }\n\n   a {\n      color: #404040;\n\n      &:hover {\n         text-decoration: underline;\n      }\n   }\n`\n\nexport const ExamsList = styled.ul`\n   list-style: none;\n   margin-top: 20px;\n\n   li {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n\n      flex: 1;\n      padding: 20px 30px;\n\n      &:nth-child(2n - 1) {\n         background: #fff;\n      }\n   }\n`\n\nexport const TextContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   a {\n      padding: 10px 0;\n      font-size: 16px;\n      font-weight: bold;\n      color: #000;\n\n      transition: color 0.25s;\n      &:hover {\n         color: ${props => props.theme.primary};\n      }\n   }\n`\n\nexport const ButtonsContainer = styled.div`\n   display: flex;\n   align-items: center;\n\n   button {\n      border: 0;\n      border-radius: 4px;\n      padding: 8px 20px;\n      margin-right: 20px;\n\n      font-size: 16px;\n      color: #fff;\n      font-weight: 450;\n      background: ${props => props.theme.primary};\n\n      transition: background 0.25s;\n      &:hover {\n         background: ${props => darken(0.2, props.theme.primary)};\n      }\n   }\n`\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { FaDownload } from 'react-icons/fa'\n\nimport api from '../../services/api'\nimport Colors from '../../styles/colors'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   LinksContainer,\n   ExamsList,\n   ButtonsContainer,\n   TextContainer,\n} from './styles'\n\nexport default class Exams extends Component {\n   state = {\n      loading: true,\n      exam: {},\n      theme: {\n         primary: '#000',\n      },\n   }\n\n   async componentDidMount() {\n      const { exam } = this.props.match.params\n      if (exam !== 'enade' && exam !== 'poscomp') {\n         this.props.history.push('/sim')\n      }\n\n      const response = await api.get(`/exams/${exam}.json`)\n      const occurrences = response.data.occurrences.reverse()\n\n      this.setState({\n         loading: false,\n         exam: {\n            ...response.data,\n            occurrences,\n            id: exam,\n         },\n         theme: {\n            primary: exam === 'enade' ? Colors.enade : Colors.poscomp,\n         },\n      })\n   }\n\n   render() {\n      const { loading, exam, theme } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <ThemeProvider theme={theme}>\n            <Container>\n               <LinksContainer>\n                  <Link to=\"/\">Home</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}`}>{exam.name}</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/provas`}>Provas</Link>\n               </LinksContainer>\n               <p>Provas</p>\n               <ExamsList>\n                  {exam.occurrences.map(occurrence => (\n                     <li key={occurrence.year}>\n                        <TextContainer>\n                           <span>Prova</span>\n                           <Link to={`/${exam.id}/questoes/${occurrence.year}`}>\n                              {exam.owner} - {occurrence.year} - {exam.name} -{' '}\n                              {exam.full_name}\n                           </Link>\n                        </TextContainer>\n                        <ButtonsContainer>\n                           <button>Resolva</button>\n                           <a href=\"#\">\n                              <FaDownload size={24} color=\"#000\" />\n                           </a>\n                        </ButtonsContainer>\n                     </li>\n                  ))}\n               </ExamsList>\n            </Container>\n         </ThemeProvider>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   margin: 20px auto 0;\n   max-width: 1065px;\n\n   display: flex;\n   flex-direction: column;\n\n   > span {\n      margin: 10px 0 5px;\n   }\n   padding-bottom: 30px;\n`\n\nexport const YearInput = styled.input.attrs({\n   type: 'number',\n   min: 1,\n   max: 70,\n})`\n   height: 38px;\n   border: 1px solid #cccccc;\n   border-radius: 4px;\n   padding: 15px;\n`\n\nexport const StatementContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n`\n\nexport const InputStatementContainer = styled.div`\n   flex: 1 1;\n   margin: 10px 0 7px;\n`\n\nexport const PreviewStatementContainer = styled.div`\n   flex: 1 1;\n   margin: 7px 0 10px;\n`\n\nexport const HeaderContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   height: 55px;\n\n   padding: 10px 15px;\n   background: #333333;\n   border-top-right-radius: 5px;\n   border-top-left-radius: 5px;\n\n   h4 {\n      color: #ffffff;\n      font-size: 18px;\n      font-family: inherit;\n      font-weight: 500;\n      line-height: 1.1;\n   }\n`\n\nexport const AddButton = styled.button`\n   border: 1px solid #f1f3f5;\n   border-radius: 4px;\n   padding: 7px 20px;\n\n   transition: background 0.25s;\n   &:hover {\n      background: ${darken(0.1, '#f1f3f5')};\n   }\n`\n\nexport const InputStatementList = styled.div`\n   display: flex;\n   flex-direction: column;\n`\n\nexport const InputStatementItem = styled.div`\n   flex: 1;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   margin: 5px 15px 5px;\n\n   > input {\n      flex: 11 1;\n      padding: 10px 15px;\n      border: 1px solid #cccccc;\n      border-radius: 4px;\n      margin-left: 10px;\n   }\n\n   > div {\n      flex: 3 1;\n   }\n`\n\nexport const StatementInput = styled.input`\n   border: 1px solid #333333;\n`\n\nexport const StatementTypeInput = styled.input.attrs({\n   type: 'text',\n   placeholder: 'Conteúdo',\n})`\n   border: 1px solid #333333;\n`\n\nexport const StatementPreviewList = styled.div`\n   padding: 10px 0;\n`\n\nexport const Statement = styled.p`\n   display: block;\n   font-size: 14px;\n   padding: 0 15px 10px;\n   line-height: 2.25;\n\n   text-align: ${props => (props.type === 1 ? 'start' : 'center')};\n\n   img {\n      @media (min-width: 770px) {\n         width: ${props => (props.type === 3 ? '45%' : '')};\n      }\n\n      vertical-align: middle;\n      margin: 0 5px;\n      width: ${props => (props.type === 3 ? '85%' : '')};\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 5px 15px 15px;\n`\n\nexport const AlternativeItem = styled.li`\n   display: flex;\n   margin-top: 10px;\n\n   strong {\n      margin: 0 7px;\n      padding-top: 7px;\n   }\n\n   img {\n      vertical-align: middle;\n      margin: 0 5px;\n   }\n\n   span {\n      line-height: 2.25;\n   }\n`\n\nexport const AlternativeContent = styled.span`\n   display: block;\n\n   img {\n      vertical-align: middle;\n   }\n`\n\nexport const AddQuestionButton = styled.button`\n   padding: 15px;\n   border: 0;\n   border-radius: 4px;\n   background: #333333;\n   color: #fff;\n   font-weight: bold;\n   font-size: 16px;\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${darken(0.15, '#333333')};\n   }\n`\n","import React, { Component } from 'react'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\n\nimport api from '../../services/api'\n\nimport { FaLongArrowAltRight, FaRegWindowClose } from 'react-icons/fa'\nimport {\n   Container,\n   YearInput,\n   StatementContainer,\n   InputStatementContainer,\n   PreviewStatementContainer,\n   HeaderContainer,\n   AddButton,\n   InputStatementList,\n   InputStatementItem,\n   StatementInput,\n   StatementTypeInput,\n   StatementPreviewList,\n   Statement,\n   AlternativesList,\n   AlternativeItem,\n   AlternativeContent,\n   AddQuestionButton,\n} from './styles'\n\nconst exam_options = [\n   { value: 'enade', label: 'ENADE' },\n   { value: 'poscomp', label: 'POSCOMP' },\n]\n\nconst year_options = [\n   { value: '2004', label: '2004' },\n   { value: '2005', label: '2005' },\n   { value: '2006', label: '2006' },\n   { value: '2007', label: '2007' },\n   { value: '2008', label: '2008' },\n   { value: '2009', label: '2009' },\n   { value: '2010', label: '2010' },\n   { value: '2011', label: '2011' },\n   { value: '2012', label: '2012' },\n   { value: '2013', label: '2013' },\n   { value: '2014', label: '2014' },\n   { value: '2015', label: '2015' },\n   { value: '2016', label: '2016' },\n   { value: '2017', label: '2017' },\n   { value: '2018', label: '2018' },\n   { value: '2019', label: '2019' },\n]\n\nconst type_options = [\n   { value: 1, label: 'Normal' },\n   { value: 2, label: 'Centralizado' },\n   { value: 3, label: 'Imagem' },\n]\n\nexport default class Admin extends Component {\n   state = {\n      exam: '',\n      year_input: '',\n      question_number: '',\n      statement: [\n         {\n            id: 0,\n            type: 1,\n            content: '',\n         },\n      ],\n      alternatives: [\n         {\n            content: '',\n            letter: 'A',\n         },\n         {\n            content: '',\n            letter: 'B',\n         },\n         {\n            content: '',\n            letter: 'C',\n         },\n         {\n            content: '',\n            letter: 'D',\n         },\n         {\n            content: '',\n            letter: 'E',\n         },\n      ],\n   }\n\n   handleExamInputChange = option => {\n      this.setState({ exam: option.value })\n   }\n\n   handleYearInputChange = option => {\n      this.setState({ year_input: option.value })\n   }\n\n   handleQuestionNumberChange = event => {\n      this.setState({ question_number: event.target.value })\n   }\n\n   handleAddStatement = event => {\n      const { statement } = this.state\n\n      this.setState({\n         statement: [\n            ...statement,\n            { id: statement.length, type: 1, content: '' },\n         ],\n      })\n   }\n\n   handleStatementInputChange = (event, id) => {\n      const { statement } = this.state\n\n      const index = statement.findIndex(s => s.id === id)\n      statement[index].content = event.target.value\n\n      this.setState({ statement })\n   }\n\n   handleTypeInputChange = (option, id) => {\n      const { statement } = this.state\n\n      const index = statement.findIndex(s => s.id === id)\n      statement[index].type = option.value\n\n      this.setState({ statement })\n   }\n\n   handleAlternativesInputChange = (event, letter) => {\n      const { alternatives } = this.state\n\n      const index = alternatives.findIndex(a => a.letter === letter)\n      alternatives[index].content = event.target.value\n\n      this.setState({ alternatives })\n   }\n\n   handleAddQuestion = async () => {\n      const {\n         exam,\n         year_input,\n         question_number,\n         statement,\n         alternatives,\n      } = this.state\n\n      if (!year_input && !question_number) {\n         console.log('Year and Question Number should not be empty')\n         return\n      }\n\n      console.log('Adding New Question')\n      console.log(`Ano: ${year_input} - Questão: ${question_number}`)\n      console.log(statement)\n      console.log(alternatives)\n\n      const id = String(\n         (Number(year_input) - 2004) * 70 + Number(question_number)\n      )\n\n      const response = await api.put(`/exams/${exam}/questions/${id}.json`, {\n         id,\n         number: question_number,\n         anwser: '',\n         area: '',\n         justification: '',\n         year: year_input,\n         statement,\n         alternatives,\n      })\n\n      console.log(response)\n      if (response.status === 200) {\n         toast.success('Questão adicionada/atualizada com sucesso!')\n\n         this.setState({\n            year_input: '',\n            question_number: '',\n            statement: [\n               {\n                  id: 0,\n                  type: 1,\n                  content: '',\n               },\n            ],\n            alternatives: [\n               {\n                  content: '',\n                  letter: 'A',\n               },\n               {\n                  content: '',\n                  letter: 'B',\n               },\n               {\n                  content: '',\n                  letter: 'C',\n               },\n               {\n                  content: '',\n                  letter: 'D',\n               },\n               {\n                  content: '',\n                  letter: 'E',\n               },\n            ],\n         })\n      }\n   }\n\n   render() {\n      const { statement, alternatives, question_number } = this.state\n\n      return (\n         <Container>\n            <span>Prova</span>\n            <Select\n               options={exam_options}\n               isSearchable={false}\n               onChange={this.handleExamInputChange}\n            />\n            <span>Ano da Prova</span>\n            <Select\n               options={year_options}\n               isSearchable={false}\n               onChange={this.handleYearInputChange}\n            />\n            <span>Questão</span>\n            <YearInput\n               value={question_number}\n               onChange={this.handleQuestionNumberChange}\n            />\n            <StatementContainer>\n               <InputStatementContainer>\n                  <HeaderContainer>\n                     <h4>Enunciado</h4>\n                     <AddButton onClick={this.handleAddStatement}>\n                        Adicionar\n                     </AddButton>\n                  </HeaderContainer>\n                  <InputStatementList>\n                     {statement.map(s => (\n                        <InputStatementItem key={s.id}>\n                           <Select\n                              options={type_options}\n                              isSearchable={false}\n                              onChange={option =>\n                                 this.handleTypeInputChange(option, s.id)\n                              }\n                           />\n                           <StatementInput\n                              value={s.content}\n                              onChange={event =>\n                                 this.handleStatementInputChange(event, s.id)\n                              }\n                           />\n                        </InputStatementItem>\n                     ))}\n                  </InputStatementList>\n               </InputStatementContainer>\n               <PreviewStatementContainer>\n                  <HeaderContainer>\n                     <h4>Preview</h4>\n                  </HeaderContainer>\n                  <StatementPreviewList>\n                     {statement.map(s => (\n                        <Statement\n                           key={s.id}\n                           type={s.type}\n                           dangerouslySetInnerHTML={{\n                              __html: s.content,\n                           }}\n                        />\n                     ))}\n                  </StatementPreviewList>\n               </PreviewStatementContainer>\n            </StatementContainer>\n            <StatementContainer>\n               <InputStatementContainer>\n                  <HeaderContainer>\n                     <h4>Alternativas</h4>\n                  </HeaderContainer>\n                  <InputStatementList>\n                     {alternatives.map(a => (\n                        <InputStatementItem key={a.letter}>\n                           <strong>{a.letter})</strong>\n                           <StatementInput\n                              value={a.content}\n                              onChange={event =>\n                                 this.handleAlternativesInputChange(\n                                    event,\n                                    a.letter\n                                 )\n                              }\n                           />\n                        </InputStatementItem>\n                     ))}\n                  </InputStatementList>\n               </InputStatementContainer>\n               <PreviewStatementContainer>\n                  <HeaderContainer>\n                     <h4>Preview</h4>\n                  </HeaderContainer>\n                  <AlternativesList>\n                     {alternatives.map(a => (\n                        <AlternativeItem key={a.letter}>\n                           <strong>{a.letter})</strong>\n                           <AlternativeContent\n                              dangerouslySetInnerHTML={{\n                                 __html: a.content,\n                              }}\n                           />\n                        </AlternativeItem>\n                     ))}\n                  </AlternativesList>\n               </PreviewStatementContainer>\n            </StatementContainer>\n            <AddQuestionButton onClick={this.handleAddQuestion}>\n               Adicionar Questão\n            </AddQuestionButton>\n         </Container>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   @media (min-width: 1020px) {\n      max-width: 1020px;\n   }\n\n   display: flex;\n   flex-direction: column;\n   margin: 20px auto 0;\n   max-width: 95%;\n`\n\nexport const LinksContainer = styled.div`\n   span {\n      margin: 0 10px;\n      color: #404040;\n   }\n\n   a {\n      color: #404040;\n\n      &:hover {\n         text-decoration: underline;\n      }\n   }\n`\n\nexport const QuestionContainer = styled.div`\n   border: 1px solid #e5e5e5;\n   border-radius: 4px;\n   box-shadow: 0px 1px 3px 1px #c9c9c9;\n   background: #fff;\n   margin-top: 30px;\n`\n\nexport const QuestionInfos = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   border-bottom: 1px solid #c9c9c9;\n   padding: 15px;\n   margin-bottom: 15px;\n`\n\nexport const QuestionNumber = styled.h3`\n   text-transform: uppercase;\n   letter-spacing: 1.5px;\n   font-size: 16px;\n`\n\nexport const QuestionID = styled.span`\n   color: #75797d;\n   font-size: 12px;\n`\n\nexport const Statement = styled.p`\n   display: block;\n   font-size: 14px;\n   padding: 0 15px 10px;\n   line-height: 2.25;\n\n   text-align: ${props => (props.type === 1 ? 'start' : 'center')};\n\n   img {\n\n   \t\t@media (min-width: 770px) {\n      \t\twidth: ${props => props.type === 3 ? '45%' : ''};\n\n   \t\t}\n\n      vertical-align: middle;\n      width: ${props => props.type === 3 ? '85%' : ''};\n   }\n`\n\nexport const AlternativesList = styled.ul`\n   list-style: none;\n   padding: 0 15px 15px;\n`\n\nexport const AlternativeItem = styled.li`\n   label {\n      display: flex;\n      align-items: flex-start;\n      margin-bottom: 1px;\n      padding: 12px 5px;\n      border-radius: 4px;\n      background: ${props =>\n         props.children.props.checked === true ? props.theme.primary : 'none'};\n      color: ${props =>\n         props.children.props.checked === true ? '#F4F8FC' : '#000000'};\n\n         input {\n         \t    margin-top: 8px;\n      }\n\n      strong {\n         margin: 0 7px;\n         padding-top: 7px;\n      }\n\n      img {\n      \tvertical-align: middle;\n      }\n\n      span {\n  \t\tline-height: 2.25;\n\n      }\n   }\n`\n\nexport const AlternativeContent = styled.span`\n   display: block;\n\n   img {\n      vertical-align: baseline;\n   }\n`\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport api from '../../services/api'\nimport Colors from '../../styles/colors'\n\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   LinksContainer,\n   QuestionContainer,\n   QuestionInfos,\n   QuestionNumber,\n   QuestionID,\n   Statement,\n   AlternativesList,\n   AlternativeItem,\n   AlternativeContent,\n} from './styles'\n\nexport default class Question extends Component {\n   state = {\n      loading: true,\n      question: {},\n      exam: {},\n      theme: {\n         primary: '#000',\n      },\n   }\n\n   async componentDidMount() {\n      const { exam, year, question } = this.props.match.params\n\n      var exam_info = localStorage.getItem(`@exams/${exam.toLowerCase()}`)\n      if (!exam_info) {\n         const exam_response = await api.get(\n            `/exams/${exam.toLowerCase()}.json`\n         )\n\n         exam_info = JSON.stringify(exam_response.data)\n\n         localStorage.setItem(`@exams/${exam.toLowerCase()}`, exam_info)\n      }\n\n      const response = await api.get(\n         `/exams/${exam.toLowerCase()}/questions.json?orderBy=%22id%22&equalTo=%22${question}%22`\n      )\n\n      this.setState({\n         loading: false,\n         question: Object.values(response.data)[0],\n         exam: { ...JSON.parse(exam_info), year, id: exam },\n         theme: {\n            primary: exam === 'enade' ? Colors.enade : Colors.poscomp,\n         },\n      })\n   }\n\n   render() {\n      const { loading, question, exam, theme } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <ThemeProvider theme={theme}>\n            <Container>\n               <LinksContainer>\n                  <Link to=\"/\">Home</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}`}>{exam.name}</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/provas`}>Provas</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/questoes/${exam.year}`}>\n                     {exam.year}\n                  </Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/questoes/${exam.year}/`}>\n                     Questão {question.number}\n                  </Link>\n               </LinksContainer>\n               <QuestionContainer>\n                  <QuestionInfos>\n                     <QuestionNumber>Questão {question.number}</QuestionNumber>\n                     <QuestionID>#{question.id}</QuestionID>\n                  </QuestionInfos>\n                  {question.statement.map(statement => (\n                     <Statement\n                        type={statement.type}\n                        dangerouslySetInnerHTML={{\n                           __html: statement.content,\n                        }}\n                     />\n                  ))}\n                  <AlternativesList>\n                     {question.alternatives.map(alternative => (\n                        <AlternativeItem key={alternative.id}>\n                           <label\n                              checked={alternative.letter === question.answer}\n                           >\n                              <input\n                                 type=\"radio\"\n                                 value={alternative.letter}\n                                 checked={\n                                    alternative.letter === question.answer\n                                 }\n                                 onChange={this.handleOnChange}\n                                 disabled\n                              />\n                              <strong>{alternative.letter})</strong>\n                              <AlternativeContent\n                                 dangerouslySetInnerHTML={{\n                                    __html: alternative.content,\n                                 }}\n                              />\n                           </label>\n                        </AlternativeItem>\n                     ))}\n                  </AlternativesList>\n               </QuestionContainer>\n            </Container>\n         </ThemeProvider>\n      )\n   }\n}\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { darken } from 'polished'\n\nexport const Container = styled.div`\n   @media (min-width: 1020px) {\n      max-width: 1020px;\n   }\n\n   display: flex;\n   flex-direction: column;\n   margin: 20px auto 0;\n   max-width: 100%;\n\n   p {\n      font-size: 32px;\n      color: #404040;\n      margin-top: 15px;\n   }\n`\n\nexport const LinksContainer = styled.div`\n   span {\n      margin: 0 10px;\n      color: #404040;\n   }\n\n   a {\n      color: #404040;\n\n      &:hover {\n         text-decoration: underline;\n      }\n   }\n`\n\nexport const ExamInfoContainer = styled.div`\n   @media (min-width: 770px) {\n      flex-direction: row;\n   }\n\n   @media (min-width: 1020px) {\n      width: 100%;\n   }\n\n   width: 95%;\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n   margin: 25px auto;\n`\n\nexport const DownloadContainer = styled.div`\n   @media (min-width: 770px) {\n      width: 40%;\n      margin: 0 10px 0 0;\n   }\n\n   @media (min-width: 1020px) {\n      width: 33.33333%;\n   }\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   padding: 20px;\n   box-shadow: 0px 1px 3px 1px #c9c9c9;\n   border-radius: 4px;\n   background: #fff;\n   width: 95%;\n   margin: 10px auto;\n\n   span {\n      font-size: 16px;\n      font-family: Arial, Helvetica, sans-serif;\n      font-weight: bold;\n   }\n`\n\nexport const FilesContainer = styled.div`\n   width: 100%;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-around;\n\n   margin-top: 15px;\n   padding-bottom: 15px;\n   border-bottom: 1px solid #dce1e6;\n`\n\nexport const FileItem = styled(Link)`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n\n   padding: 10px;\n   color: #000;\n\n   transition: color 0.35s;\n   &:hover {\n      color: ${props => props.theme.primary};\n\n      svg {\n         transition: fill 0.35s;\n         fill: ${props => props.theme.primary};\n      }\n   }\n\n   svg {\n      margin-bottom: 10px;\n   }\n\n   span {\n      font-size: 12px;\n      font-weight: normal;\n   }\n`\n\nexport const SolveButton = styled.button`\n   min-width: 25%;\n   padding: 10px 30px;\n   margin-top: 20px;\n   border: 1px solid ${props => props.theme.primary};\n   border-radius: 5px;\n   background: none;\n   color: ${props => props.theme.primary};\n   font-weight: bold;\n\n   transition: background 0.35s, color 0.35s;\n   &:hover {\n      background: ${props => props.theme.primary};\n      color: #fff;\n   }\n`\n\nexport const ExamInfo = styled.div`\n   @media (min-width: 770px) {\n      width: 60%;\n      margin: 0 0 0 10px;\n   }\n\n   @media (min-width: 1020px) {\n      width: 66.66667%;\n   }\n\n   width: 95%;\n   margin: 10px auto;\n   border: 1px solid #e5e5e5;\n   box-shadow: 0px 1px 3px 1px #c9c9c9;\n   border-radius: 4px;\n   background: #fff;\n\n   display: flex;\n   flex-direction: column;\n`\n\nexport const TextInfo = styled.div`\n   height: 33.33333%;\n   padding: 20px 20px;\n   border-bottom: 1px solid #e5e5e5;\n\n   display: flex;\n   align-items: center;\n\n   &:last-child {\n      border-bottom: none;\n   }\n\n   strong {\n      flex: 1 1;\n   }\n\n   span {\n      flex: 3 1;\n      padding: 10px;\n   }\n`\n\nexport const QuestionsContainer = styled.div`\n   @media (min-width: 1020px) {\n      width: 100%;\n   }\n\n   width: 95%;\n   margin: auto;\n   border: 1px solid #e5e5e5;\n   border-radius: 4px;\n   box-shadow: 0px 1px 3px 1px #c9c9c9;\n   background: #fff;\n`\n\nexport const HeaderQustions = styled.div`\n   padding: 20px 25px;\n   border-bottom: 1px solid #dce1e6;\n   width: 100%;\n`\n\nexport const QuestionsNumber = styled.h1`\n   font-size: 18px;\n   font-weight: normal;\n`\n\nexport const QuestionsList = styled.ul`\n   list-style: none;\n   padding: 20px 10px 0 10px;\n   display: flex;\n   flex-wrap: wrap;\n   width: 100%;\n\n   li {\n      @media (min-width: 770px) {\n         width: calc(33.33333% - 24px);\n      }\n\n      @media (min-width: 1020px) {\n         width: calc(25% - 24px);\n      }\n\n      border: 1px solid #dce1e6;\n      border-radius: 4px;\n      margin: 0 12px 15px;\n      padding: 10px;\n      width: calc(50% - 24px);\n   }\n`\n\nexport const InfoQuestionContainer = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: flex-start;\n   margin-top: 18px;\n\n   div {\n      display: flex;\n      align-items: center;\n      margin: 10px 0 0 0;\n      color: #656d78;\n\n      p {\n         font-size: 13px;\n         margin: 0 5px;\n      }\n   }\n`\n\nexport const ButtonViewQuestion = styled.div`\n   display: flex;\n   margin-top: 10px;\n   border: none;\n   border-radius: 4px;\n   background: ${props => props.theme.primary};\n\n   transition: background 0.35s;\n   &:hover {\n      background: ${props => darken(0.1, props.theme.primary)};\n   }\n`\n\nexport const ButtonViewQuestionContent = styled(Link)`\n   flex: 1;\n   color: #fff;\n   text-align: center;\n   padding: 7px;\n`\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport api from '../../services/api'\nimport Colors from '../../styles/colors'\n\nimport { MdFormatListBulleted, MdFormatListNumbered } from 'react-icons/md'\nimport { FaRegFileAlt, FaPencilAlt, FaQuestion } from 'react-icons/fa'\nimport Loading from '../../components/Loading'\nimport {\n   Container,\n   LinksContainer,\n   ExamInfoContainer,\n   DownloadContainer,\n   FilesContainer,\n   FileItem,\n   SolveButton,\n   ExamInfo,\n   TextInfo,\n   QuestionsContainer,\n   HeaderQustions,\n   QuestionsNumber,\n   QuestionsList,\n   InfoQuestionContainer,\n   ButtonViewQuestion,\n   ButtonViewQuestionContent,\n} from './styles'\n\nexport default class Questions extends Component {\n   state = {\n      loading: true,\n      exam: {},\n      questions: [],\n      theme: {\n         primary: '#000',\n      },\n   }\n\n   componentDidMount = async () => {\n      const { exam, year } = this.props.match.params\n\n      const { data } = await api.get(`/exams/${exam}.json`)\n\n      const questions = Object.values(data.questions).filter(\n         question => question.year === year\n      )\n\n      this.setState({\n         loading: false,\n         questions: questions,\n         exam: {\n            ...data,\n            id: exam,\n            year,\n         },\n         theme: {\n            primary: exam === 'enade' ? Colors.enade : Colors.poscomp,\n         },\n      })\n   }\n\n   render() {\n      const { theme, loading, exam, questions } = this.state\n\n      if (loading) {\n         return <Loading />\n      }\n\n      return (\n         <ThemeProvider theme={theme}>\n            <Container>\n               <LinksContainer>\n                  <Link to=\"/\">Home</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}`}>{exam.name}</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/provas`}>Provas</Link>\n                  <span> / </span>\n                  <Link to={`/${exam.id}/questoes/${exam.year}`}>\n                     {exam.year}\n                  </Link>\n               </LinksContainer>\n               <ExamInfoContainer>\n                  <DownloadContainer>\n                     <span>BAIXE OS ARQUIVOS</span>\n                     <FilesContainer>\n                        <FileItem to=\"#\">\n                           <MdFormatListBulleted size={24} color=\"#000\" />\n                           <span>PROVA</span>\n                        </FileItem>\n                        <FileItem to=\"#\">\n                           <MdFormatListNumbered size={24} color=\"#000\" />\n                           <span>GABARITO</span>\n                        </FileItem>\n                        <FileItem to=\"#\">\n                           <FaRegFileAlt size={24} color=\"#000\" />\n                           <span>EDITAL</span>\n                        </FileItem>\n                     </FilesContainer>\n                     <SolveButton>Resolver Prova</SolveButton>\n                  </DownloadContainer>\n                  <ExamInfo>\n                     <TextInfo>\n                        <strong>Concurso</strong>\n                        <span>\n                           {exam.name} - {exam.year}\n                        </span>\n                     </TextInfo>\n                     <TextInfo>\n                        <strong>Prova</strong>\n                        <span>{exam.full_name}</span>\n                     </TextInfo>\n                     <TextInfo>\n                        <strong>Organizador</strong>\n                        <span>{exam.owner}</span>\n                     </TextInfo>\n                  </ExamInfo>\n               </ExamInfoContainer>\n               <QuestionsContainer>\n                  <HeaderQustions>\n                     <QuestionsNumber>\n                        {questions.length === 0\n                           ? 'Nenhuma questão cadastrada'\n                           : `${questions.length} Questões do ${exam.name}`}\n                     </QuestionsNumber>\n                  </HeaderQustions>\n                  {!!questions.length && (\n                     <QuestionsList>\n                        {questions.map(question => (\n                           <li key={question.id}>\n                              <h3>Questão {question.number}</h3>\n                              <InfoQuestionContainer>\n                                 <div>\n                                    <FaPencilAlt size={12} />\n                                    <p>{question.area}</p>\n                                 </div>\n                                 <div>\n                                    {' '}\n                                    <FaQuestion size={12} />\n                                    <p>Resolvida 100x</p>\n                                 </div>\n                              </InfoQuestionContainer>\n                              <ButtonViewQuestion>\n                                 <ButtonViewQuestionContent\n                                    to={`/${exam.id}/questoes/${question.year}/${question.id}`}\n                                 >\n                                    Ver Questão\n                                 </ButtonViewQuestionContent>\n                              </ButtonViewQuestion>\n                           </li>\n                        ))}\n                     </QuestionsList>\n                  )}\n               </QuestionsContainer>\n            </Container>\n         </ThemeProvider>\n      )\n   }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Sim from './pages/Sim'\nimport Home from './pages/Home'\nimport Exam from './pages/Exam'\nimport Exams from './pages/Exams'\nimport Admin from './pages/Admin'\nimport Question from './pages/Question'\nimport Questions from './pages/Questions'\n\nexport default function Routes() {\n   return (\n      <Switch>\n         <Route path=\"/\" exact component={Home} />\n         <Route path=\"/admin\" component={Admin} />\n         <Route path=\"/:exam/questoes/:year/:question\" component={Question} />\n         <Route path=\"/:exam/questoes/:year\" component={Questions} />\n         <Route path=\"/:exam/provas\" component={Exams} />\n         <Route path=\"/:exam\" component={Exam} />\n      </Switch>\n   )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n   @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n   @import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n\n   * {\n      margin: 0;\n      padding: 0;\n      outline: 0;\n      box-sizing: border-box;\n   }\n\n   body {\n      background: #f5f5f5;\n      -webkit-font-smoothing: antialiased !important;\n   }\n\n   body, input, button {\n      font: 14px Roboto, sans-serif;\n   }\n\n   #root {\n      margin: 0 auto;\n      padding: 0;\n   }\n\n   button {\n      cursor: pointer;\n   }\n`\n","import React from 'react'\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\nimport { createHashHistory } from 'history'\nimport { ToastContainer } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport Header from './components/Header'\nimport Routes from './routes'\nimport GlobalCSS from './styles/global'\n\nconst history = createHashHistory()\n\nfunction App() {\n   return (\n      <>\n         <HashRouter history={history}>\n            <Header />\n            <Routes />\n            <GlobalCSS />\n            <ToastContainer autoClose={3000} />\n         </HashRouter>\n      </>\n   )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}